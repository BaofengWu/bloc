
katan.elf:     file format elf32-msp430

SYMBOL TABLE:
00004000 l    d  .text	00000000 .text
0000588c l    d  .rodata	00000000 .rodata
00001100 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 katan64.c
00004100 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 tools.c
00005852 g     F .text	0000001a putchar
00000057 g       *ABS*	00000000 __BCSCTL1
0000005a g       *ABS*	00000000 __CACTL2
00000174 g       *ABS*	00000000 __TACCR1
00000084 g       *ABS*	00000000 __ADC12MCTL4
00000000 g       *ABS*	00000000 __data_size
0000015a g       *ABS*	00000000 __ADC12MEM13
00000052 g       *ABS*	00000000 __I2CNDAT
00004100  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00000024 g       *ABS*	00000000 __P1IES
0000007b g       *ABS*	00000000 __U1MCTL
000001f6 g       *ABS*	00000000 __DMA2SZ
00004100  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
00000076 g       *ABS*	00000000 __I2CDRW
0000007e g       *ABS*	00000000 __U1RXBUF
00000138 g       *ABS*	00000000 __OP2
00000076 g       *ABS*	00000000 __U0RXBUF
000001a4 g       *ABS*	00000000 __ADC12IFG
0000012e g       *ABS*	00000000 __TAIV
000001e6 g       *ABS*	00000000 __DMA0SZ
00000000 g       .vectors	00000000 _efartext
0000007c g       *ABS*	00000000 __U1BR0
00000130 g       *ABS*	00000000 __MPY
00000001 g       *ABS*	00000000 __IE2
0000013a g       *ABS*	00000000 __RESLO
00000136 g       *ABS*	00000000 __MACS
00000087 g       *ABS*	00000000 __ADC12MCTL7
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
0000607c g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
0000001d g       *ABS*	00000000 __P4OUT
000001f4 g       *ABS*	00000000 __DMA2DA
00000000 g       *ABS*	00000000 __bss_size
00000081 g       *ABS*	00000000 __ADC12MCTL1
000057c2 g     F .text	0000005e uart1_init
00000152 g       *ABS*	00000000 __ADC12MEM9
00004000  w      .text	00000000 __watchdog_support
000040fa  w      .text	00000000 __stop_progExec__
00000050 g       *ABS*	00000000 __I2CIE
0000002d g       *ABS*	00000000 __P2IE
000001e4 g       *ABS*	00000000 __DMA0DA
00000192 g       *ABS*	00000000 __TBCCR0
00004100  w      .text	00000000 __isr_11
00000186 g       *ABS*	00000000 __TBCCTL2
00005880 g     F .text	0000000a end_expe
00000025 g       *ABS*	00000000 __P1IE
000001a0 g       *ABS*	00000000 __ADC12CTL0
00000072 g       *ABS*	00000000 __I2CDCTL
00000073 g       *ABS*	00000000 __U0MCTL
0000007a g       *ABS*	00000000 __U1RCTL
00000082 g       *ABS*	00000000 __ADC12MCTL2
0000019c g       *ABS*	00000000 __TBCCR5
00000035 g       *ABS*	00000000 __P6OUT
00000034 g       *ABS*	00000000 __P6IN
000001c8 g       *ABS*	00000000 __DAC12_0DAT
00000182 g       *ABS*	00000000 __TBCCTL0
0000019e g       *ABS*	00000000 __TBCCR6
00004100  w      .text	00000000 __isr_5
0000607c g       *ABS*	00000000 __data_load_start
00004100 g       .text	00000000 __dtors_end
000001ea g       *ABS*	00000000 __DMA1SA
00000088 g       *ABS*	00000000 __ADC12MCTL8
00000166 g       *ABS*	00000000 __TACCTL2
000001f0 g       *ABS*	00000000 __DMA2CTL
00004100  w      .text	00000000 __isr_2
00000156 g       *ABS*	00000000 __ADC12MEM11
00000160 g       *ABS*	00000000 __TACTL
00000158 g       *ABS*	00000000 __ADC12MEM12
00000071 g       *ABS*	00000000 __I2CTCTL
0000012c g       *ABS*	00000000 __FCTL3
00004100  w      .text	00000000 __isr_10
00000148 g       *ABS*	00000000 __ADC12MEM4
0000011a g       *ABS*	00000000 __I2CSA
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
0000008d g       *ABS*	00000000 __ADC12MCTL13
0000014c g       *ABS*	00000000 __ADC12MEM6
00000023 g       *ABS*	00000000 __P1IFG
0000013c g       *ABS*	00000000 __RESHI
00000072 g       *ABS*	00000000 __U0RCTL
00000172 g       *ABS*	00000000 __TACCR0
00000071 g       *ABS*	00000000 __U0TCTL
00000056 g       *ABS*	00000000 __DCOCTL
00000085 g       *ABS*	00000000 __ADC12MCTL5
00000003 g       *ABS*	00000000 __IFG2
00000005 g       *ABS*	00000000 __ME2
00004dac g     F .text	000009d8 katan64_decrypt
00001100 g     O .noinit	00000002 __wdt_clear_value
00000079 g       *ABS*	00000000 __U1TCTL
0000001b g       *ABS*	00000000 __P3SEL
000001e0 g       *ABS*	00000000 __DMA0CTL
00004100  w      .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
00000028 g       *ABS*	00000000 __P2IN
0000014e g       *ABS*	00000000 __ADC12MEM7
00000184 g       *ABS*	00000000 __TBCCTL1
0000005b g       *ABS*	00000000 __CAPD
00000075 g       *ABS*	00000000 __I2CSCLL
00004100  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00004028  w      .text	00000000 __do_clear_bss
0000008f g       *ABS*	00000000 __ADC12MCTL15
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
0000015c g       *ABS*	00000000 __ADC12MEM14
00000026 g       *ABS*	00000000 __P1SEL
00000198 g       *ABS*	00000000 __TBCCR3
00000080 g       *ABS*	00000000 __ADC12MCTL0
00000140 g       *ABS*	00000000 __ADC12MEM0
00000074 g       *ABS*	00000000 __U0BR0
00000051 g       *ABS*	00000000 __I2CIFG
0000588a  w      .text	00000000 _unexpected_
00004100  w      .text	00000000 __isr_8
0000014a g       *ABS*	00000000 __ADC12MEM5
00000070 g       *ABS*	00000000 __U0CTL
0000018a g       *ABS*	00000000 __TBCCTL4
00000073 g       *ABS*	00000000 __I2CPSC
0000008e g       *ABS*	00000000 __ADC12MCTL14
00004100  w      .text	00000000 __isr_3
000001a6 g       *ABS*	00000000 __ADC12IE
00005820 g     F .text	00000032 uart1_putchar
00000144 g       *ABS*	00000000 __ADC12MEM2
000001ee g       *ABS*	00000000 __DMA1SZ
00000033 g       *ABS*	00000000 __P5SEL
00000030 g       *ABS*	00000000 __P5IN
00004000  w      .text	00000000 _reset_vector__
00004100 g       .text	00000000 __ctors_start
00004100  w      .text	00000000 __isr_12
00000036 g       *ABS*	00000000 __P6DIR
00000018 g       *ABS*	00000000 __P3IN
00004010  w      .text	00000000 __do_copy_data
00000150 g       *ABS*	00000000 __ADC12MEM8
00000142 g       *ABS*	00000000 __ADC12MEM1
00001100 g       .rodata	00000000 __bss_start
0000007d g       *ABS*	00000000 __U1BR1
0000403e g     F .text	000000bc main
00000176 g       *ABS*	00000000 __TACCR2
0000019a g       *ABS*	00000000 __TBCCR4
00004100  w      .text	00000000 __isr_13
00000078 g       *ABS*	00000000 __U1CTL
000001e2 g       *ABS*	00000000 __DMA0SA
00000170 g       *ABS*	00000000 __TAR
00000124 g       *ABS*	00000000 __DMACTL1
0000001e g       *ABS*	00000000 __P4DIR
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
00000154 g       *ABS*	00000000 __ADC12MEM10
000001f2 g       *ABS*	00000000 __DMA2SA
0000002a g       *ABS*	00000000 __P2DIR
00000089 g       *ABS*	00000000 __ADC12MCTL9
0000008a g       *ABS*	00000000 __ADC12MCTL10
00005784 g     F .text	0000003e delay
00000032 g       *ABS*	00000000 __P5DIR
000001c2 g       *ABS*	00000000 __DAC12_1CTL
000001a2 g       *ABS*	00000000 __ADC12CTL1
000001a8 g       *ABS*	00000000 __ADC12IV
000001e8 g       *ABS*	00000000 __DMA1CTL
00000075 g       *ABS*	00000000 __U0BR1
00004100  w      .text	00000000 __isr_9
0000018c g       *ABS*	00000000 __TBCCTL5
0000400c  w      .text	00000000 __init_stack
00000086 g       *ABS*	00000000 __ADC12MCTL6
00000188 g       *ABS*	00000000 __TBCCTL3
00000019 g       *ABS*	00000000 __P3OUT
000001ca g       *ABS*	00000000 __DAC12_1DAT
00004100 g       .text	00000000 __dtors_start
00004100  w      .text	00000000 __isr_6
00004100 g       .text	00000000 __ctors_end
00000132 g       *ABS*	00000000 __MPYS
0000011c g       *ABS*	00000000 __I2CIV
00000004 g       *ABS*	00000000 __ME1
00003900 g       *ABS*	00000000 __stack
00000037 g       *ABS*	00000000 __P6SEL
00004100  w      .text	00000000 __isr_1
0000008c g       *ABS*	00000000 __ADC12MCTL12
00001100 g       .rodata	00000000 _edata
00000077 g       *ABS*	00000000 __U0TXBUF
00001102 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
0000011e g       *ABS*	00000000 __TBIV
000001c0 g       *ABS*	00000000 __DAC12_0CTL
0000586c g     F .text	0000000a start_encrypt
0000015e g       *ABS*	00000000 __ADC12MEM15
00000134 g       *ABS*	00000000 __MAC
00000058 g       *ABS*	00000000 __BCSCTL2
000040fa  w      .text	00000000 _endless_loop__
00000122 g       *ABS*	00000000 __DMACTL0
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
00000146 g       *ABS*	00000000 __ADC12MEM3
00000076 g       *ABS*	00000000 __I2CDRB
00000118 g       *ABS*	00000000 __I2COA
00000164 g       *ABS*	00000000 __TACCTL1
0000007f g       *ABS*	00000000 __U1TXBUF
00000055 g       *ABS*	00000000 __SVSCTL
00004010  w      .text	00000000 __low_level_init
00005876 g     F .text	0000000a start_decrypt
00001100 g       .rodata	00000000 __data_start
0000018e g       *ABS*	00000000 __TBCCTL6
00000074 g       *ABS*	00000000 __I2CSCLH
000001ec g       *ABS*	00000000 __DMA1DA
00004104 g     F .text	00000ca8 katan64_encrypt
00000120 g       *ABS*	00000000 __WDTCTL
00000083 g       *ABS*	00000000 __ADC12MCTL3
00000000 g       *ABS*	00000000 __IE1
00000059 g       *ABS*	00000000 __CACTL1
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
0000008b g       *ABS*	00000000 __ADC12MCTL11
0000013e g       *ABS*	00000000 __SUMEXT
00000031 g       *ABS*	00000000 __P5OUT
0000588c g     O .rodata	000007f0 IR



Disassembly of section .text:

00004000 <__watchdog_support>:
    4000:	55 42 20 01 	mov.b	&0x0120,r5	
    4004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    4008:	82 45 00 11 	mov	r5,	&0x1100	

0000400c <__init_stack>:
    400c:	31 40 00 39 	mov	#14592,	r1	;#0x3900

00004010 <__do_copy_data>:
    4010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    4014:	0f 93       	tst	r15		
    4016:	08 24       	jz	$+18     	;abs 0x4028
    4018:	92 42 00 11 	mov	&0x1100,&0x0120	
    401c:	20 01 
    401e:	2f 83       	decd	r15		
    4020:	9f 4f 7c 60 	mov	24700(r15),4352(r15);0x607c(r15), 0x1100(r15)
    4024:	00 11 
    4026:	f8 23       	jnz	$-14     	;abs 0x4018

00004028 <__do_clear_bss>:
    4028:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    402c:	0f 93       	tst	r15		
    402e:	07 24       	jz	$+16     	;abs 0x403e
    4030:	92 42 00 11 	mov	&0x1100,&0x0120	
    4034:	20 01 
    4036:	1f 83       	dec	r15		
    4038:	cf 43 00 11 	mov.b	#0,	4352(r15);r3 As==00, 0x1100(r15)
    403c:	f9 23       	jnz	$-12     	;abs 0x4030

0000403e <main>:
    plain[i+39] = L1[i];

}

int main()
{
    403e:	04 41       	mov	r1,	r4	
    4040:	24 53       	incd	r4		
    4042:	31 50 7e f9 	add	#-1666,	r1	;#0xf97e
  u64 key[80];
  u64 plain[64], cipher[64];
  int i;

  for(i=0;i<80;++i)   key[i]=0;
    4046:	84 43 7c f9 	mov	#0,	-1668(r4);r3 As==00, 0xf97c(r4)
    404a:	14 3c       	jmp	$+42     	;abs 0x4074
    404c:	1f 44 7c f9 	mov	-1668(r4),r15	;0xf97c(r4)
    4050:	0f 5f       	rla	r15		
    4052:	0f 5f       	rla	r15		
    4054:	0f 5f       	rla	r15		
    4056:	3e 40 7c f9 	mov	#-1668,	r14	;#0xf97c
    405a:	0e 54       	add	r4,	r14	
    405c:	0f 5e       	add	r14,	r15	
    405e:	2f 53       	incd	r15		
    4060:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    4064:	8f 43 02 00 	mov	#0,	2(r15)	;r3 As==00, 0x0002(r15)
    4068:	8f 43 04 00 	mov	#0,	4(r15)	;r3 As==00, 0x0004(r15)
    406c:	8f 43 06 00 	mov	#0,	6(r15)	;r3 As==00, 0x0006(r15)
    4070:	94 53 7c f9 	inc	-1668(r4)	;0xf97c(r4)
    4074:	b4 90 50 00 	cmp	#80,	-1668(r4);#0x0050, 0xf97c(r4)
    4078:	7c f9 
    407a:	e8 3b       	jl	$-46     	;abs 0x404c
  for(i=0;i<64;++i)   plain[i]=ONES;
    407c:	84 43 7c f9 	mov	#0,	-1668(r4);r3 As==00, 0xf97c(r4)
    4080:	15 3c       	jmp	$+44     	;abs 0x40ac
    4082:	1f 44 7c f9 	mov	-1668(r4),r15	;0xf97c(r4)
    4086:	0f 5f       	rla	r15		
    4088:	0f 5f       	rla	r15		
    408a:	0f 5f       	rla	r15		
    408c:	3e 40 7c f9 	mov	#-1668,	r14	;#0xf97c
    4090:	0e 54       	add	r4,	r14	
    4092:	0f 5e       	add	r14,	r15	
    4094:	3f 50 82 02 	add	#642,	r15	;#0x0282
    4098:	bf 43 00 00 	mov	#-1,	0(r15)	;r3 As==11, 0x0000(r15)
    409c:	bf 43 02 00 	mov	#-1,	2(r15)	;r3 As==11, 0x0002(r15)
    40a0:	bf 43 04 00 	mov	#-1,	4(r15)	;r3 As==11, 0x0004(r15)
    40a4:	bf 43 06 00 	mov	#-1,	6(r15)	;r3 As==11, 0x0006(r15)
    40a8:	94 53 7c f9 	inc	-1668(r4)	;0xf97c(r4)
    40ac:	b4 90 40 00 	cmp	#64,	-1668(r4);#0x0040, 0xf97c(r4)
    40b0:	7c f9 
    40b2:	e7 3b       	jl	$-48     	;abs 0x4082
  
  START_ENCRYPT();
    40b4:	b0 12 6c 58 	call	#0x586c	
  katan64_encrypt( plain, cipher, key, 254 );
    40b8:	0d 44       	mov	r4,	r13	
    40ba:	3d 50 7e f9 	add	#-1666,	r13	;#0xf97e
    40be:	0e 44       	mov	r4,	r14	
    40c0:	3e 50 fe fd 	add	#-514,	r14	;#0xfdfe
    40c4:	0f 44       	mov	r4,	r15	
    40c6:	3f 50 fe fb 	add	#-1026,	r15	;#0xfbfe
    40ca:	3c 40 fe 00 	mov	#254,	r12	;#0x00fe
    40ce:	b0 12 04 41 	call	#0x4104	
  
  //printf("\nkatan64_encrypt(key=00..00, plain=11.11) = ");
  //  for(i=0;i<64;++i)   printf("%llu",cipher[i]&1);
  //for(i=63;i>=0;i--)   printf("%llu",cipher[i]&1);
  
  START_DECRYPT();
    40d2:	b0 12 76 58 	call	#0x5876	
  katan64_decrypt( cipher, plain, key, 254 );
    40d6:	0d 44       	mov	r4,	r13	
    40d8:	3d 50 7e f9 	add	#-1666,	r13	;#0xf97e
    40dc:	0e 44       	mov	r4,	r14	
    40de:	3e 50 fe fb 	add	#-1026,	r14	;#0xfbfe
    40e2:	0f 44       	mov	r4,	r15	
    40e4:	3f 50 fe fd 	add	#-514,	r15	;#0xfdfe
    40e8:	3c 40 fe 00 	mov	#254,	r12	;#0x00fe
    40ec:	b0 12 ac 4d 	call	#0x4dac	
  
  END_EXPE();
    40f0:	b0 12 80 58 	call	#0x5880	
  return 0;
    40f4:	0f 43       	clr	r15		
    40f6:	31 50 82 06 	add	#1666,	r1	;#0x0682

000040fa <__stop_progExec__>:
    40fa:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    40fe:	fd 3f       	jmp	$-4      	;abs 0x40fa

00004100 <__ctors_end>:
    4100:	30 40 8a 58 	br	#0x588a	

00004104 <katan64_encrypt>:
  ONES,ONES,0,0,0,0,0,0,0,ONES, // 240-249
  0,0,ONES,0,
};


void katan64_encrypt( const u64 plain[64], u64 cipher[64], const u64 key[80], int rounds ) {
    4104:	0b 12       	push	r11		
    4106:	0a 12       	push	r10		
    4108:	09 12       	push	r9		
    410a:	08 12       	push	r8		
    410c:	07 12       	push	r7		
    410e:	06 12       	push	r6		
    4110:	04 12       	push	r4		
    4112:	04 41       	mov	r1,	r4	
    4114:	34 50 0e 00 	add	#14,	r4	;#0x000e
    4118:	31 50 58 fd 	add	#-680,	r1	;#0xfd58
    411c:	84 4f 82 ff 	mov	r15,	-126(r4);0xff82(r4)
    4120:	84 4e 84 ff 	mov	r14,	-124(r4);0xff84(r4)
    4124:	84 4d 86 ff 	mov	r13,	-122(r4);0xff86(r4)
    4128:	84 4c 88 ff 	mov	r12,	-120(r4);0xff88(r4)
  for(i=0;i<39;++i) 
    cipher[i] = L2[i];
  for(i=0;i<25;++i) 
    cipher[i+39] = L1[i];

}
    412c:	07 41       	mov	r1,	r7	
  ONES,ONES,0,0,0,0,0,0,0,ONES, // 240-249
  0,0,ONES,0,
};


void katan64_encrypt( const u64 plain[64], u64 cipher[64], const u64 key[80], int rounds ) {
    412e:	0f 41       	mov	r1,	r15	
    4130:	06 4f       	mov	r15,	r6	

  u64 L1[25], L2[39], k[2*rounds], fa_2, fa_1, fa_0, fb_2, fb_1, fb_0;
    4132:	1f 44 88 ff 	mov	-120(r4),r15	;0xff88(r4)
    4136:	0f 5f       	rla	r15		
    4138:	0e 4f       	mov	r15,	r14	
    413a:	3e 53       	add	#-1,	r14	;r3 As==11
    413c:	84 4e 4e fd 	mov	r14,	-690(r4);0xfd4e(r4)
    4140:	0e 4f       	mov	r15,	r14	
    4142:	08 4e       	mov	r14,	r8	
    4144:	09 43       	clr	r9		
    4146:	0e 4f       	mov	r15,	r14	
    4148:	0a 4e       	mov	r14,	r10	
    414a:	0b 43       	clr	r11		
    414c:	0f 5f       	rla	r15		
    414e:	0f 5f       	rla	r15		
    4150:	0f 5f       	rla	r15		
    4152:	1f 53       	inc	r15		
    4154:	1f 53       	inc	r15		
    4156:	12 c3       	clrc			
    4158:	0f 10       	rrc	r15		
    415a:	0f 5f       	rla	r15		
    415c:	01 8f       	sub	r15,	r1	
    415e:	0f 41       	mov	r1,	r15	
    4160:	1f 53       	inc	r15		
    4162:	12 c3       	clrc			
    4164:	0f 10       	rrc	r15		
    4166:	0f 5f       	rla	r15		
    4168:	84 4f 50 fd 	mov	r15,	-688(r4);0xfd50(r4)
  int i,j;

  for(i=0;i<39;++i) 
    416c:	84 43 4a fd 	mov	#0,	-694(r4);r3 As==00, 0xfd4a(r4)
    4170:	23 3c       	jmp	$+72     	;abs 0x41b8
    L2[i] = plain[i];
    4172:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4176:	0f 5f       	rla	r15		
    4178:	0f 5f       	rla	r15		
    417a:	0f 5f       	rla	r15		
    417c:	1f 54 82 ff 	add	-126(r4),r15	;0xff82(r4)
    4180:	2c 4f       	mov	@r15,	r12	
    4182:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4186:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    418a:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    418e:	1b 44 4a fd 	mov	-694(r4),r11	;0xfd4a(r4)
    4192:	0b 5b       	rla	r11		
    4194:	0b 5b       	rla	r11		
    4196:	0b 5b       	rla	r11		
    4198:	38 40 4a fd 	mov	#-694,	r8	;#0xfd4a
    419c:	08 54       	add	r4,	r8	
    419e:	0b 58       	add	r8,	r11	
    41a0:	3b 50 00 01 	add	#256,	r11	;#0x0100
    41a4:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    41a8:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    41ac:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    41b0:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
void katan64_encrypt( const u64 plain[64], u64 cipher[64], const u64 key[80], int rounds ) {

  u64 L1[25], L2[39], k[2*rounds], fa_2, fa_1, fa_0, fb_2, fb_1, fb_0;
  int i,j;

  for(i=0;i<39;++i) 
    41b4:	94 53 4a fd 	inc	-694(r4)	;0xfd4a(r4)
    41b8:	b4 90 27 00 	cmp	#39,	-694(r4);#0x0027, 0xfd4a(r4)
    41bc:	4a fd 
    41be:	d9 3b       	jl	$-76     	;abs 0x4172
    L2[i] = plain[i];
  for(i=0;i<25;++i) 
    41c0:	84 43 4a fd 	mov	#0,	-694(r4);r3 As==00, 0xfd4a(r4)
    41c4:	25 3c       	jmp	$+76     	;abs 0x4210
    L1[i] = plain[i+39];
    41c6:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    41ca:	3f 50 27 00 	add	#39,	r15	;#0x0027
    41ce:	0f 5f       	rla	r15		
    41d0:	0f 5f       	rla	r15		
    41d2:	0f 5f       	rla	r15		
    41d4:	1f 54 82 ff 	add	-126(r4),r15	;0xff82(r4)
    41d8:	2c 4f       	mov	@r15,	r12	
    41da:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    41de:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    41e2:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    41e6:	1b 44 4a fd 	mov	-694(r4),r11	;0xfd4a(r4)
    41ea:	0b 5b       	rla	r11		
    41ec:	0b 5b       	rla	r11		
    41ee:	0b 5b       	rla	r11		
    41f0:	39 40 4a fd 	mov	#-694,	r9	;#0xfd4a
    41f4:	09 54       	add	r4,	r9	
    41f6:	0b 59       	add	r9,	r11	
    41f8:	3b 50 38 00 	add	#56,	r11	;#0x0038
    41fc:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4200:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4204:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4208:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
  u64 L1[25], L2[39], k[2*rounds], fa_2, fa_1, fa_0, fb_2, fb_1, fb_0;
  int i,j;

  for(i=0;i<39;++i) 
    L2[i] = plain[i];
  for(i=0;i<25;++i) 
    420c:	94 53 4a fd 	inc	-694(r4)	;0xfd4a(r4)
    4210:	b4 90 19 00 	cmp	#25,	-694(r4);#0x0019, 0xfd4a(r4)
    4214:	4a fd 
    4216:	d7 3b       	jl	$-80     	;abs 0x41c6
    L1[i] = plain[i+39];

  for(i=0;i<80;++i)
    4218:	84 43 4a fd 	mov	#0,	-694(r4);r3 As==00, 0xfd4a(r4)
    421c:	20 3c       	jmp	$+66     	;abs 0x425e
    k[i]=key[i];
    421e:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4222:	0f 5f       	rla	r15		
    4224:	0f 5f       	rla	r15		
    4226:	0f 5f       	rla	r15		
    4228:	1f 54 86 ff 	add	-122(r4),r15	;0xff86(r4)
    422c:	2c 4f       	mov	@r15,	r12	
    422e:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4232:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4236:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    423a:	1a 44 50 fd 	mov	-688(r4),r10	;0xfd50(r4)
    423e:	1b 44 4a fd 	mov	-694(r4),r11	;0xfd4a(r4)
    4242:	0b 5b       	rla	r11		
    4244:	0b 5b       	rla	r11		
    4246:	0b 5b       	rla	r11		
    4248:	0b 5a       	add	r10,	r11	
    424a:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    424e:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4252:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4256:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
  for(i=0;i<39;++i) 
    L2[i] = plain[i];
  for(i=0;i<25;++i) 
    L1[i] = plain[i+39];

  for(i=0;i<80;++i)
    425a:	94 53 4a fd 	inc	-694(r4)	;0xfd4a(r4)
    425e:	b4 90 50 00 	cmp	#80,	-694(r4);#0x0050, 0xfd4a(r4)
    4262:	4a fd 
    4264:	dc 3b       	jl	$-70     	;abs 0x421e
    k[i]=key[i];
  for(i=80;i<2*rounds;++i)
    4266:	b4 40 50 00 	mov	#80,	-694(r4);#0x0050, 0xfd4a(r4)
    426a:	4a fd 
    426c:	62 3c       	jmp	$+198    	;abs 0x4332
    k[i]=k[i-80] ^ k[i-61] ^ k[i-50] ^ k[i-13] ;
    426e:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4272:	3f 50 b0 ff 	add	#-80,	r15	;#0xffb0
    4276:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    427a:	0f 5f       	rla	r15		
    427c:	0f 5f       	rla	r15		
    427e:	0f 5f       	rla	r15		
    4280:	0f 5e       	add	r14,	r15	
    4282:	28 4f       	mov	@r15,	r8	
    4284:	19 4f 02 00 	mov	2(r15),	r9	;0x0002(r15)
    4288:	1a 4f 04 00 	mov	4(r15),	r10	;0x0004(r15)
    428c:	1b 4f 06 00 	mov	6(r15),	r11	;0x0006(r15)
    4290:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4294:	3f 50 c3 ff 	add	#-61,	r15	;#0xffc3
    4298:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    429c:	0f 5f       	rla	r15		
    429e:	0f 5f       	rla	r15		
    42a0:	0f 5f       	rla	r15		
    42a2:	0f 5e       	add	r14,	r15	
    42a4:	2c 4f       	mov	@r15,	r12	
    42a6:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    42aa:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    42ae:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    42b2:	08 ec       	xor	r12,	r8	
    42b4:	09 ed       	xor	r13,	r9	
    42b6:	0a ee       	xor	r14,	r10	
    42b8:	0b ef       	xor	r15,	r11	
    42ba:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    42be:	3f 50 ce ff 	add	#-50,	r15	;#0xffce
    42c2:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    42c6:	0f 5f       	rla	r15		
    42c8:	0f 5f       	rla	r15		
    42ca:	0f 5f       	rla	r15		
    42cc:	0f 5e       	add	r14,	r15	
    42ce:	2c 4f       	mov	@r15,	r12	
    42d0:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    42d4:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    42d8:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    42dc:	08 ec       	xor	r12,	r8	
    42de:	09 ed       	xor	r13,	r9	
    42e0:	0a ee       	xor	r14,	r10	
    42e2:	0b ef       	xor	r15,	r11	
    42e4:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    42e8:	3f 50 f3 ff 	add	#-13,	r15	;#0xfff3
    42ec:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    42f0:	0f 5f       	rla	r15		
    42f2:	0f 5f       	rla	r15		
    42f4:	0f 5f       	rla	r15		
    42f6:	0f 5e       	add	r14,	r15	
    42f8:	2c 4f       	mov	@r15,	r12	
    42fa:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    42fe:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4302:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4306:	0c e8       	xor	r8,	r12	
    4308:	0d e9       	xor	r9,	r13	
    430a:	0e ea       	xor	r10,	r14	
    430c:	0f eb       	xor	r11,	r15	
    430e:	1a 44 50 fd 	mov	-688(r4),r10	;0xfd50(r4)
    4312:	1b 44 4a fd 	mov	-694(r4),r11	;0xfd4a(r4)
    4316:	0b 5b       	rla	r11		
    4318:	0b 5b       	rla	r11		
    431a:	0b 5b       	rla	r11		
    431c:	0b 5a       	add	r10,	r11	
    431e:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4322:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4326:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    432a:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
  for(i=0;i<25;++i) 
    L1[i] = plain[i+39];

  for(i=0;i<80;++i)
    k[i]=key[i];
  for(i=80;i<2*rounds;++i)
    432e:	94 53 4a fd 	inc	-694(r4)	;0xfd4a(r4)
    4332:	1f 44 88 ff 	mov	-120(r4),r15	;0xff88(r4)
    4336:	0f 5f       	rla	r15		
    4338:	84 9f 4a fd 	cmp	r15,	-694(r4);0xfd4a(r4)
    433c:	98 3b       	jl	$-206    	;abs 0x426e
    k[i]=k[i-80] ^ k[i-61] ^ k[i-50] ^ k[i-13] ;

  for(i=0;i<rounds;++i) {
    433e:	84 43 4a fd 	mov	#0,	-694(r4);r3 As==00, 0xfd4a(r4)
    4342:	30 40 d8 4c 	br	#0x4cd8	
    
    fa_2 = L1[X1_64]   ^ L1[X2_64]   ^ (L1[X3_64] & L1[X4_64])     ^ (L1[X5_64] & IR[i])         ^ k[2*i];
    4346:	94 44 42 fe 	mov	-446(r4),-22(r4)	;0xfe42(r4), 0xffea(r4)
    434a:	ea ff 
    434c:	94 44 44 fe 	mov	-444(r4),-20(r4)	;0xfe44(r4), 0xffec(r4)
    4350:	ec ff 
    4352:	94 44 46 fe 	mov	-442(r4),-18(r4)	;0xfe46(r4), 0xffee(r4)
    4356:	ee ff 
    4358:	94 44 48 fe 	mov	-440(r4),-16(r4)	;0xfe48(r4), 0xfff0(r4)
    435c:	f0 ff 
    435e:	1c 44 fa fd 	mov	-518(r4),r12	;0xfdfa(r4)
    4362:	1d 44 fc fd 	mov	-516(r4),r13	;0xfdfc(r4)
    4366:	1e 44 fe fd 	mov	-514(r4),r14	;0xfdfe(r4)
    436a:	1f 44 00 fe 	mov	-512(r4),r15	;0xfe00(r4)
    436e:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4372:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4376:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    437a:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    437e:	08 ec       	xor	r12,	r8	
    4380:	09 ed       	xor	r13,	r9	
    4382:	0a ee       	xor	r14,	r10	
    4384:	0b ef       	xor	r15,	r11	
    4386:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    438a:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    438e:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4392:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    4396:	94 44 22 fe 	mov	-478(r4),-118(r4);0xfe22(r4), 0xff8a(r4)
    439a:	8a ff 
    439c:	94 44 24 fe 	mov	-476(r4),-116(r4);0xfe24(r4), 0xff8c(r4)
    43a0:	8c ff 
    43a2:	94 44 26 fe 	mov	-474(r4),-114(r4);0xfe26(r4), 0xff8e(r4)
    43a6:	8e ff 
    43a8:	94 44 28 fe 	mov	-472(r4),-112(r4);0xfe28(r4), 0xff90(r4)
    43ac:	90 ff 
    43ae:	1c 44 da fd 	mov	-550(r4),r12	;0xfdda(r4)
    43b2:	1d 44 dc fd 	mov	-548(r4),r13	;0xfddc(r4)
    43b6:	1e 44 de fd 	mov	-546(r4),r14	;0xfdde(r4)
    43ba:	1f 44 e0 fd 	mov	-544(r4),r15	;0xfde0(r4)
    43be:	1c f4 8a ff 	and	-118(r4),r12	;0xff8a(r4)
    43c2:	1d f4 8c ff 	and	-116(r4),r13	;0xff8c(r4)
    43c6:	1e f4 8e ff 	and	-114(r4),r14	;0xff8e(r4)
    43ca:	1f f4 90 ff 	and	-112(r4),r15	;0xff90(r4)
    43ce:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    43d2:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    43d6:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    43da:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    43de:	08 ec       	xor	r12,	r8	
    43e0:	09 ed       	xor	r13,	r9	
    43e2:	0a ee       	xor	r14,	r10	
    43e4:	0b ef       	xor	r15,	r11	
    43e6:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    43ea:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    43ee:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    43f2:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    43f6:	94 44 ca fd 	mov	-566(r4),-110(r4);0xfdca(r4), 0xff92(r4)
    43fa:	92 ff 
    43fc:	94 44 cc fd 	mov	-564(r4),-108(r4);0xfdcc(r4), 0xff94(r4)
    4400:	94 ff 
    4402:	94 44 ce fd 	mov	-562(r4),-106(r4);0xfdce(r4), 0xff96(r4)
    4406:	96 ff 
    4408:	94 44 d0 fd 	mov	-560(r4),-104(r4);0xfdd0(r4), 0xff98(r4)
    440c:	98 ff 
    440e:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4412:	0f 5f       	rla	r15		
    4414:	0f 5f       	rla	r15		
    4416:	0f 5f       	rla	r15		
    4418:	3f 50 8c 58 	add	#22668,	r15	;#0x588c
    441c:	2c 4f       	mov	@r15,	r12	
    441e:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4422:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4426:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    442a:	1c f4 92 ff 	and	-110(r4),r12	;0xff92(r4)
    442e:	1d f4 94 ff 	and	-108(r4),r13	;0xff94(r4)
    4432:	1e f4 96 ff 	and	-106(r4),r14	;0xff96(r4)
    4436:	1f f4 98 ff 	and	-104(r4),r15	;0xff98(r4)
    443a:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    443e:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4442:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4446:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    444a:	08 ec       	xor	r12,	r8	
    444c:	09 ed       	xor	r13,	r9	
    444e:	0a ee       	xor	r14,	r10	
    4450:	0b ef       	xor	r15,	r11	
    4452:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4456:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    445a:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    445e:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    4462:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4466:	0f 5f       	rla	r15		
    4468:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    446c:	0f 5f       	rla	r15		
    446e:	0f 5f       	rla	r15		
    4470:	0f 5f       	rla	r15		
    4472:	0f 5e       	add	r14,	r15	
    4474:	2c 4f       	mov	@r15,	r12	
    4476:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    447a:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    447e:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4482:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4486:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    448a:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    448e:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4492:	08 ec       	xor	r12,	r8	
    4494:	09 ed       	xor	r13,	r9	
    4496:	0a ee       	xor	r14,	r10	
    4498:	0b ef       	xor	r15,	r11	
    449a:	84 48 52 fd 	mov	r8,	-686(r4);0xfd52(r4)
    449e:	84 49 54 fd 	mov	r9,	-684(r4);0xfd54(r4)
    44a2:	84 4a 56 fd 	mov	r10,	-682(r4);0xfd56(r4)
    44a6:	84 4b 58 fd 	mov	r11,	-680(r4);0xfd58(r4)
    fa_1 = L1[X1_64-1] ^ L1[X2_64-1] ^ (L1[X3_64-1] & L1[X4_64-1]) ^ (L1[X5_64-1] & IR[i])       ^ k[2*i];
    44aa:	94 44 3a fe 	mov	-454(r4),-22(r4)	;0xfe3a(r4), 0xffea(r4)
    44ae:	ea ff 
    44b0:	94 44 3c fe 	mov	-452(r4),-20(r4)	;0xfe3c(r4), 0xffec(r4)
    44b4:	ec ff 
    44b6:	94 44 3e fe 	mov	-450(r4),-18(r4)	;0xfe3e(r4), 0xffee(r4)
    44ba:	ee ff 
    44bc:	94 44 40 fe 	mov	-448(r4),-16(r4)	;0xfe40(r4), 0xfff0(r4)
    44c0:	f0 ff 
    44c2:	1c 44 f2 fd 	mov	-526(r4),r12	;0xfdf2(r4)
    44c6:	1d 44 f4 fd 	mov	-524(r4),r13	;0xfdf4(r4)
    44ca:	1e 44 f6 fd 	mov	-522(r4),r14	;0xfdf6(r4)
    44ce:	1f 44 f8 fd 	mov	-520(r4),r15	;0xfdf8(r4)
    44d2:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    44d6:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    44da:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    44de:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    44e2:	08 ec       	xor	r12,	r8	
    44e4:	09 ed       	xor	r13,	r9	
    44e6:	0a ee       	xor	r14,	r10	
    44e8:	0b ef       	xor	r15,	r11	
    44ea:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    44ee:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    44f2:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    44f6:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    44fa:	94 44 1a fe 	mov	-486(r4),-102(r4);0xfe1a(r4), 0xff9a(r4)
    44fe:	9a ff 
    4500:	94 44 1c fe 	mov	-484(r4),-100(r4);0xfe1c(r4), 0xff9c(r4)
    4504:	9c ff 
    4506:	94 44 1e fe 	mov	-482(r4),-98(r4)	;0xfe1e(r4), 0xff9e(r4)
    450a:	9e ff 
    450c:	94 44 20 fe 	mov	-480(r4),-96(r4)	;0xfe20(r4), 0xffa0(r4)
    4510:	a0 ff 
    4512:	1c 44 d2 fd 	mov	-558(r4),r12	;0xfdd2(r4)
    4516:	1d 44 d4 fd 	mov	-556(r4),r13	;0xfdd4(r4)
    451a:	1e 44 d6 fd 	mov	-554(r4),r14	;0xfdd6(r4)
    451e:	1f 44 d8 fd 	mov	-552(r4),r15	;0xfdd8(r4)
    4522:	1c f4 9a ff 	and	-102(r4),r12	;0xff9a(r4)
    4526:	1d f4 9c ff 	and	-100(r4),r13	;0xff9c(r4)
    452a:	1e f4 9e ff 	and	-98(r4),r14	;0xff9e(r4)
    452e:	1f f4 a0 ff 	and	-96(r4),r15	;0xffa0(r4)
    4532:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4536:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    453a:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    453e:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4542:	08 ec       	xor	r12,	r8	
    4544:	09 ed       	xor	r13,	r9	
    4546:	0a ee       	xor	r14,	r10	
    4548:	0b ef       	xor	r15,	r11	
    454a:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    454e:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4552:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4556:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    455a:	94 44 c2 fd 	mov	-574(r4),-94(r4)	;0xfdc2(r4), 0xffa2(r4)
    455e:	a2 ff 
    4560:	94 44 c4 fd 	mov	-572(r4),-92(r4)	;0xfdc4(r4), 0xffa4(r4)
    4564:	a4 ff 
    4566:	94 44 c6 fd 	mov	-570(r4),-90(r4)	;0xfdc6(r4), 0xffa6(r4)
    456a:	a6 ff 
    456c:	94 44 c8 fd 	mov	-568(r4),-88(r4)	;0xfdc8(r4), 0xffa8(r4)
    4570:	a8 ff 
    4572:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4576:	0f 5f       	rla	r15		
    4578:	0f 5f       	rla	r15		
    457a:	0f 5f       	rla	r15		
    457c:	3f 50 8c 58 	add	#22668,	r15	;#0x588c
    4580:	2c 4f       	mov	@r15,	r12	
    4582:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4586:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    458a:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    458e:	1c f4 a2 ff 	and	-94(r4),r12	;0xffa2(r4)
    4592:	1d f4 a4 ff 	and	-92(r4),r13	;0xffa4(r4)
    4596:	1e f4 a6 ff 	and	-90(r4),r14	;0xffa6(r4)
    459a:	1f f4 a8 ff 	and	-88(r4),r15	;0xffa8(r4)
    459e:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    45a2:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    45a6:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    45aa:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    45ae:	08 ec       	xor	r12,	r8	
    45b0:	09 ed       	xor	r13,	r9	
    45b2:	0a ee       	xor	r14,	r10	
    45b4:	0b ef       	xor	r15,	r11	
    45b6:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    45ba:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    45be:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    45c2:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    45c6:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    45ca:	0f 5f       	rla	r15		
    45cc:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    45d0:	0f 5f       	rla	r15		
    45d2:	0f 5f       	rla	r15		
    45d4:	0f 5f       	rla	r15		
    45d6:	0f 5e       	add	r14,	r15	
    45d8:	2c 4f       	mov	@r15,	r12	
    45da:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    45de:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    45e2:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    45e6:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    45ea:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    45ee:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    45f2:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    45f6:	08 ec       	xor	r12,	r8	
    45f8:	09 ed       	xor	r13,	r9	
    45fa:	0a ee       	xor	r14,	r10	
    45fc:	0b ef       	xor	r15,	r11	
    45fe:	84 48 5a fd 	mov	r8,	-678(r4);0xfd5a(r4)
    4602:	84 49 5c fd 	mov	r9,	-676(r4);0xfd5c(r4)
    4606:	84 4a 5e fd 	mov	r10,	-674(r4);0xfd5e(r4)
    460a:	84 4b 60 fd 	mov	r11,	-672(r4);0xfd60(r4)
    fa_0 = L1[X1_64-2] ^ L1[X2_64-2] ^ (L1[X3_64-2] & L1[X4_64-2]) ^ (L1[X5_64-2] & IR[i])       ^ k[2*i];
    460e:	94 44 32 fe 	mov	-462(r4),-22(r4)	;0xfe32(r4), 0xffea(r4)
    4612:	ea ff 
    4614:	94 44 34 fe 	mov	-460(r4),-20(r4)	;0xfe34(r4), 0xffec(r4)
    4618:	ec ff 
    461a:	94 44 36 fe 	mov	-458(r4),-18(r4)	;0xfe36(r4), 0xffee(r4)
    461e:	ee ff 
    4620:	94 44 38 fe 	mov	-456(r4),-16(r4)	;0xfe38(r4), 0xfff0(r4)
    4624:	f0 ff 
    4626:	1c 44 ea fd 	mov	-534(r4),r12	;0xfdea(r4)
    462a:	1d 44 ec fd 	mov	-532(r4),r13	;0xfdec(r4)
    462e:	1e 44 ee fd 	mov	-530(r4),r14	;0xfdee(r4)
    4632:	1f 44 f0 fd 	mov	-528(r4),r15	;0xfdf0(r4)
    4636:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    463a:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    463e:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4642:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4646:	08 ec       	xor	r12,	r8	
    4648:	09 ed       	xor	r13,	r9	
    464a:	0a ee       	xor	r14,	r10	
    464c:	0b ef       	xor	r15,	r11	
    464e:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4652:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4656:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    465a:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    465e:	94 44 12 fe 	mov	-494(r4),-86(r4)	;0xfe12(r4), 0xffaa(r4)
    4662:	aa ff 
    4664:	94 44 14 fe 	mov	-492(r4),-84(r4)	;0xfe14(r4), 0xffac(r4)
    4668:	ac ff 
    466a:	94 44 16 fe 	mov	-490(r4),-82(r4)	;0xfe16(r4), 0xffae(r4)
    466e:	ae ff 
    4670:	94 44 18 fe 	mov	-488(r4),-80(r4)	;0xfe18(r4), 0xffb0(r4)
    4674:	b0 ff 
    4676:	1c 44 ca fd 	mov	-566(r4),r12	;0xfdca(r4)
    467a:	1d 44 cc fd 	mov	-564(r4),r13	;0xfdcc(r4)
    467e:	1e 44 ce fd 	mov	-562(r4),r14	;0xfdce(r4)
    4682:	1f 44 d0 fd 	mov	-560(r4),r15	;0xfdd0(r4)
    4686:	1c f4 aa ff 	and	-86(r4),r12	;0xffaa(r4)
    468a:	1d f4 ac ff 	and	-84(r4),r13	;0xffac(r4)
    468e:	1e f4 ae ff 	and	-82(r4),r14	;0xffae(r4)
    4692:	1f f4 b0 ff 	and	-80(r4),r15	;0xffb0(r4)
    4696:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    469a:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    469e:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    46a2:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    46a6:	08 ec       	xor	r12,	r8	
    46a8:	09 ed       	xor	r13,	r9	
    46aa:	0a ee       	xor	r14,	r10	
    46ac:	0b ef       	xor	r15,	r11	
    46ae:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    46b2:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    46b6:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    46ba:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    46be:	94 44 ba fd 	mov	-582(r4),-78(r4)	;0xfdba(r4), 0xffb2(r4)
    46c2:	b2 ff 
    46c4:	94 44 bc fd 	mov	-580(r4),-76(r4)	;0xfdbc(r4), 0xffb4(r4)
    46c8:	b4 ff 
    46ca:	94 44 be fd 	mov	-578(r4),-74(r4)	;0xfdbe(r4), 0xffb6(r4)
    46ce:	b6 ff 
    46d0:	94 44 c0 fd 	mov	-576(r4),-72(r4)	;0xfdc0(r4), 0xffb8(r4)
    46d4:	b8 ff 
    46d6:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    46da:	0f 5f       	rla	r15		
    46dc:	0f 5f       	rla	r15		
    46de:	0f 5f       	rla	r15		
    46e0:	3f 50 8c 58 	add	#22668,	r15	;#0x588c
    46e4:	2c 4f       	mov	@r15,	r12	
    46e6:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    46ea:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    46ee:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    46f2:	1c f4 b2 ff 	and	-78(r4),r12	;0xffb2(r4)
    46f6:	1d f4 b4 ff 	and	-76(r4),r13	;0xffb4(r4)
    46fa:	1e f4 b6 ff 	and	-74(r4),r14	;0xffb6(r4)
    46fe:	1f f4 b8 ff 	and	-72(r4),r15	;0xffb8(r4)
    4702:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4706:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    470a:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    470e:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4712:	08 ec       	xor	r12,	r8	
    4714:	09 ed       	xor	r13,	r9	
    4716:	0a ee       	xor	r14,	r10	
    4718:	0b ef       	xor	r15,	r11	
    471a:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    471e:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4722:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4726:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    472a:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    472e:	0f 5f       	rla	r15		
    4730:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    4734:	0f 5f       	rla	r15		
    4736:	0f 5f       	rla	r15		
    4738:	0f 5f       	rla	r15		
    473a:	0f 5e       	add	r14,	r15	
    473c:	2c 4f       	mov	@r15,	r12	
    473e:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4742:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4746:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    474a:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    474e:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4752:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4756:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    475a:	08 ec       	xor	r12,	r8	
    475c:	09 ed       	xor	r13,	r9	
    475e:	0a ee       	xor	r14,	r10	
    4760:	0b ef       	xor	r15,	r11	
    4762:	84 48 62 fd 	mov	r8,	-670(r4);0xfd62(r4)
    4766:	84 49 64 fd 	mov	r9,	-668(r4);0xfd64(r4)
    476a:	84 4a 66 fd 	mov	r10,	-666(r4);0xfd66(r4)
    476e:	84 4b 68 fd 	mov	r11,	-664(r4);0xfd68(r4)
    fb_2 = L2[Y1_64]   ^ L2[Y2_64]   ^ (L2[Y3_64] & L2[Y4_64])     ^ (L2[Y5_64] & L2[Y6_64])     ^ k[2*i+1];
    4772:	94 44 7a ff 	mov	-134(r4),-22(r4)	;0xff7a(r4), 0xffea(r4)
    4776:	ea ff 
    4778:	94 44 7c ff 	mov	-132(r4),-20(r4)	;0xff7c(r4), 0xffec(r4)
    477c:	ec ff 
    477e:	94 44 7e ff 	mov	-130(r4),-18(r4)	;0xff7e(r4), 0xffee(r4)
    4782:	ee ff 
    4784:	94 44 80 ff 	mov	-128(r4),-16(r4)	;0xff80(r4), 0xfff0(r4)
    4788:	f0 ff 
    478a:	1c 44 12 ff 	mov	-238(r4),r12	;0xff12(r4)
    478e:	1d 44 14 ff 	mov	-236(r4),r13	;0xff14(r4)
    4792:	1e 44 16 ff 	mov	-234(r4),r14	;0xff16(r4)
    4796:	1f 44 18 ff 	mov	-232(r4),r15	;0xff18(r4)
    479a:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    479e:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    47a2:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    47a6:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    47aa:	08 ec       	xor	r12,	r8	
    47ac:	09 ed       	xor	r13,	r9	
    47ae:	0a ee       	xor	r14,	r10	
    47b0:	0b ef       	xor	r15,	r11	
    47b2:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    47b6:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    47ba:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    47be:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    47c2:	94 44 52 ff 	mov	-174(r4),-70(r4)	;0xff52(r4), 0xffba(r4)
    47c6:	ba ff 
    47c8:	94 44 54 ff 	mov	-172(r4),-68(r4)	;0xff54(r4), 0xffbc(r4)
    47cc:	bc ff 
    47ce:	94 44 56 ff 	mov	-170(r4),-66(r4)	;0xff56(r4), 0xffbe(r4)
    47d2:	be ff 
    47d4:	94 44 58 ff 	mov	-168(r4),-64(r4)	;0xff58(r4), 0xffc0(r4)
    47d8:	c0 ff 
    47da:	1c 44 f2 fe 	mov	-270(r4),r12	;0xfef2(r4)
    47de:	1d 44 f4 fe 	mov	-268(r4),r13	;0xfef4(r4)
    47e2:	1e 44 f6 fe 	mov	-266(r4),r14	;0xfef6(r4)
    47e6:	1f 44 f8 fe 	mov	-264(r4),r15	;0xfef8(r4)
    47ea:	1c f4 ba ff 	and	-70(r4),r12	;0xffba(r4)
    47ee:	1d f4 bc ff 	and	-68(r4),r13	;0xffbc(r4)
    47f2:	1e f4 be ff 	and	-66(r4),r14	;0xffbe(r4)
    47f6:	1f f4 c0 ff 	and	-64(r4),r15	;0xffc0(r4)
    47fa:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    47fe:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4802:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4806:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    480a:	08 ec       	xor	r12,	r8	
    480c:	09 ed       	xor	r13,	r9	
    480e:	0a ee       	xor	r14,	r10	
    4810:	0b ef       	xor	r15,	r11	
    4812:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4816:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    481a:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    481e:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    4822:	94 44 ba fe 	mov	-326(r4),-62(r4)	;0xfeba(r4), 0xffc2(r4)
    4826:	c2 ff 
    4828:	94 44 bc fe 	mov	-324(r4),-60(r4)	;0xfebc(r4), 0xffc4(r4)
    482c:	c4 ff 
    482e:	94 44 be fe 	mov	-322(r4),-58(r4)	;0xfebe(r4), 0xffc6(r4)
    4832:	c6 ff 
    4834:	94 44 c0 fe 	mov	-320(r4),-56(r4)	;0xfec0(r4), 0xffc8(r4)
    4838:	c8 ff 
    483a:	1c 44 92 fe 	mov	-366(r4),r12	;0xfe92(r4)
    483e:	1d 44 94 fe 	mov	-364(r4),r13	;0xfe94(r4)
    4842:	1e 44 96 fe 	mov	-362(r4),r14	;0xfe96(r4)
    4846:	1f 44 98 fe 	mov	-360(r4),r15	;0xfe98(r4)
    484a:	1c f4 c2 ff 	and	-62(r4),r12	;0xffc2(r4)
    484e:	1d f4 c4 ff 	and	-60(r4),r13	;0xffc4(r4)
    4852:	1e f4 c6 ff 	and	-58(r4),r14	;0xffc6(r4)
    4856:	1f f4 c8 ff 	and	-56(r4),r15	;0xffc8(r4)
    485a:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    485e:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4862:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4866:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    486a:	08 ec       	xor	r12,	r8	
    486c:	09 ed       	xor	r13,	r9	
    486e:	0a ee       	xor	r14,	r10	
    4870:	0b ef       	xor	r15,	r11	
    4872:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4876:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    487a:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    487e:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    4882:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4886:	0f 5f       	rla	r15		
    4888:	1f 53       	inc	r15		
    488a:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    488e:	0f 5f       	rla	r15		
    4890:	0f 5f       	rla	r15		
    4892:	0f 5f       	rla	r15		
    4894:	0f 5e       	add	r14,	r15	
    4896:	2c 4f       	mov	@r15,	r12	
    4898:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    489c:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    48a0:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    48a4:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    48a8:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    48ac:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    48b0:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    48b4:	08 ec       	xor	r12,	r8	
    48b6:	09 ed       	xor	r13,	r9	
    48b8:	0a ee       	xor	r14,	r10	
    48ba:	0b ef       	xor	r15,	r11	
    48bc:	84 48 6a fd 	mov	r8,	-662(r4);0xfd6a(r4)
    48c0:	84 49 6c fd 	mov	r9,	-660(r4);0xfd6c(r4)
    48c4:	84 4a 6e fd 	mov	r10,	-658(r4);0xfd6e(r4)
    48c8:	84 4b 70 fd 	mov	r11,	-656(r4);0xfd70(r4)
    fb_1 = L2[Y1_64-1] ^ L2[Y2_64-1] ^ (L2[Y3_64-1] & L2[Y4_64-1]) ^ (L2[Y5_64-1] & L2[Y6_64-1]) ^ k[2*i+1];
    48cc:	94 44 72 ff 	mov	-142(r4),-22(r4)	;0xff72(r4), 0xffea(r4)
    48d0:	ea ff 
    48d2:	94 44 74 ff 	mov	-140(r4),-20(r4)	;0xff74(r4), 0xffec(r4)
    48d6:	ec ff 
    48d8:	94 44 76 ff 	mov	-138(r4),-18(r4)	;0xff76(r4), 0xffee(r4)
    48dc:	ee ff 
    48de:	94 44 78 ff 	mov	-136(r4),-16(r4)	;0xff78(r4), 0xfff0(r4)
    48e2:	f0 ff 
    48e4:	1c 44 0a ff 	mov	-246(r4),r12	;0xff0a(r4)
    48e8:	1d 44 0c ff 	mov	-244(r4),r13	;0xff0c(r4)
    48ec:	1e 44 0e ff 	mov	-242(r4),r14	;0xff0e(r4)
    48f0:	1f 44 10 ff 	mov	-240(r4),r15	;0xff10(r4)
    48f4:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    48f8:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    48fc:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4900:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4904:	08 ec       	xor	r12,	r8	
    4906:	09 ed       	xor	r13,	r9	
    4908:	0a ee       	xor	r14,	r10	
    490a:	0b ef       	xor	r15,	r11	
    490c:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4910:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4914:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4918:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    491c:	94 44 4a ff 	mov	-182(r4),-54(r4)	;0xff4a(r4), 0xffca(r4)
    4920:	ca ff 
    4922:	94 44 4c ff 	mov	-180(r4),-52(r4)	;0xff4c(r4), 0xffcc(r4)
    4926:	cc ff 
    4928:	94 44 4e ff 	mov	-178(r4),-50(r4)	;0xff4e(r4), 0xffce(r4)
    492c:	ce ff 
    492e:	94 44 50 ff 	mov	-176(r4),-48(r4)	;0xff50(r4), 0xffd0(r4)
    4932:	d0 ff 
    4934:	1c 44 ea fe 	mov	-278(r4),r12	;0xfeea(r4)
    4938:	1d 44 ec fe 	mov	-276(r4),r13	;0xfeec(r4)
    493c:	1e 44 ee fe 	mov	-274(r4),r14	;0xfeee(r4)
    4940:	1f 44 f0 fe 	mov	-272(r4),r15	;0xfef0(r4)
    4944:	1c f4 ca ff 	and	-54(r4),r12	;0xffca(r4)
    4948:	1d f4 cc ff 	and	-52(r4),r13	;0xffcc(r4)
    494c:	1e f4 ce ff 	and	-50(r4),r14	;0xffce(r4)
    4950:	1f f4 d0 ff 	and	-48(r4),r15	;0xffd0(r4)
    4954:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4958:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    495c:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4960:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4964:	08 ec       	xor	r12,	r8	
    4966:	09 ed       	xor	r13,	r9	
    4968:	0a ee       	xor	r14,	r10	
    496a:	0b ef       	xor	r15,	r11	
    496c:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4970:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4974:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4978:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    497c:	94 44 b2 fe 	mov	-334(r4),-46(r4)	;0xfeb2(r4), 0xffd2(r4)
    4980:	d2 ff 
    4982:	94 44 b4 fe 	mov	-332(r4),-44(r4)	;0xfeb4(r4), 0xffd4(r4)
    4986:	d4 ff 
    4988:	94 44 b6 fe 	mov	-330(r4),-42(r4)	;0xfeb6(r4), 0xffd6(r4)
    498c:	d6 ff 
    498e:	94 44 b8 fe 	mov	-328(r4),-40(r4)	;0xfeb8(r4), 0xffd8(r4)
    4992:	d8 ff 
    4994:	1c 44 8a fe 	mov	-374(r4),r12	;0xfe8a(r4)
    4998:	1d 44 8c fe 	mov	-372(r4),r13	;0xfe8c(r4)
    499c:	1e 44 8e fe 	mov	-370(r4),r14	;0xfe8e(r4)
    49a0:	1f 44 90 fe 	mov	-368(r4),r15	;0xfe90(r4)
    49a4:	1c f4 d2 ff 	and	-46(r4),r12	;0xffd2(r4)
    49a8:	1d f4 d4 ff 	and	-44(r4),r13	;0xffd4(r4)
    49ac:	1e f4 d6 ff 	and	-42(r4),r14	;0xffd6(r4)
    49b0:	1f f4 d8 ff 	and	-40(r4),r15	;0xffd8(r4)
    49b4:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    49b8:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    49bc:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    49c0:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    49c4:	08 ec       	xor	r12,	r8	
    49c6:	09 ed       	xor	r13,	r9	
    49c8:	0a ee       	xor	r14,	r10	
    49ca:	0b ef       	xor	r15,	r11	
    49cc:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    49d0:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    49d4:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    49d8:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    49dc:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    49e0:	0f 5f       	rla	r15		
    49e2:	1f 53       	inc	r15		
    49e4:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    49e8:	0f 5f       	rla	r15		
    49ea:	0f 5f       	rla	r15		
    49ec:	0f 5f       	rla	r15		
    49ee:	0f 5e       	add	r14,	r15	
    49f0:	2c 4f       	mov	@r15,	r12	
    49f2:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    49f6:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    49fa:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    49fe:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4a02:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4a06:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4a0a:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4a0e:	08 ec       	xor	r12,	r8	
    4a10:	09 ed       	xor	r13,	r9	
    4a12:	0a ee       	xor	r14,	r10	
    4a14:	0b ef       	xor	r15,	r11	
    4a16:	84 48 72 fd 	mov	r8,	-654(r4);0xfd72(r4)
    4a1a:	84 49 74 fd 	mov	r9,	-652(r4);0xfd74(r4)
    4a1e:	84 4a 76 fd 	mov	r10,	-650(r4);0xfd76(r4)
    4a22:	84 4b 78 fd 	mov	r11,	-648(r4);0xfd78(r4)
    fb_0 = L2[Y1_64-2] ^ L2[Y2_64-2] ^ (L2[Y3_64-2] & L2[Y4_64-2]) ^ (L2[Y5_64-2] & L2[Y6_64-2]) ^ k[2*i+1];
    4a26:	94 44 6a ff 	mov	-150(r4),-22(r4)	;0xff6a(r4), 0xffea(r4)
    4a2a:	ea ff 
    4a2c:	94 44 6c ff 	mov	-148(r4),-20(r4)	;0xff6c(r4), 0xffec(r4)
    4a30:	ec ff 
    4a32:	94 44 6e ff 	mov	-146(r4),-18(r4)	;0xff6e(r4), 0xffee(r4)
    4a36:	ee ff 
    4a38:	94 44 70 ff 	mov	-144(r4),-16(r4)	;0xff70(r4), 0xfff0(r4)
    4a3c:	f0 ff 
    4a3e:	1c 44 02 ff 	mov	-254(r4),r12	;0xff02(r4)
    4a42:	1d 44 04 ff 	mov	-252(r4),r13	;0xff04(r4)
    4a46:	1e 44 06 ff 	mov	-250(r4),r14	;0xff06(r4)
    4a4a:	1f 44 08 ff 	mov	-248(r4),r15	;0xff08(r4)
    4a4e:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4a52:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4a56:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4a5a:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4a5e:	08 ec       	xor	r12,	r8	
    4a60:	09 ed       	xor	r13,	r9	
    4a62:	0a ee       	xor	r14,	r10	
    4a64:	0b ef       	xor	r15,	r11	
    4a66:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4a6a:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4a6e:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4a72:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    4a76:	94 44 42 ff 	mov	-190(r4),-38(r4)	;0xff42(r4), 0xffda(r4)
    4a7a:	da ff 
    4a7c:	94 44 44 ff 	mov	-188(r4),-36(r4)	;0xff44(r4), 0xffdc(r4)
    4a80:	dc ff 
    4a82:	94 44 46 ff 	mov	-186(r4),-34(r4)	;0xff46(r4), 0xffde(r4)
    4a86:	de ff 
    4a88:	94 44 48 ff 	mov	-184(r4),-32(r4)	;0xff48(r4), 0xffe0(r4)
    4a8c:	e0 ff 
    4a8e:	1c 44 e2 fe 	mov	-286(r4),r12	;0xfee2(r4)
    4a92:	1d 44 e4 fe 	mov	-284(r4),r13	;0xfee4(r4)
    4a96:	1e 44 e6 fe 	mov	-282(r4),r14	;0xfee6(r4)
    4a9a:	1f 44 e8 fe 	mov	-280(r4),r15	;0xfee8(r4)
    4a9e:	1c f4 da ff 	and	-38(r4),r12	;0xffda(r4)
    4aa2:	1d f4 dc ff 	and	-36(r4),r13	;0xffdc(r4)
    4aa6:	1e f4 de ff 	and	-34(r4),r14	;0xffde(r4)
    4aaa:	1f f4 e0 ff 	and	-32(r4),r15	;0xffe0(r4)
    4aae:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4ab2:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4ab6:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4aba:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4abe:	08 ec       	xor	r12,	r8	
    4ac0:	09 ed       	xor	r13,	r9	
    4ac2:	0a ee       	xor	r14,	r10	
    4ac4:	0b ef       	xor	r15,	r11	
    4ac6:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4aca:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4ace:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4ad2:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    4ad6:	94 44 aa fe 	mov	-342(r4),-30(r4)	;0xfeaa(r4), 0xffe2(r4)
    4ada:	e2 ff 
    4adc:	94 44 ac fe 	mov	-340(r4),-28(r4)	;0xfeac(r4), 0xffe4(r4)
    4ae0:	e4 ff 
    4ae2:	94 44 ae fe 	mov	-338(r4),-26(r4)	;0xfeae(r4), 0xffe6(r4)
    4ae6:	e6 ff 
    4ae8:	94 44 b0 fe 	mov	-336(r4),-24(r4)	;0xfeb0(r4), 0xffe8(r4)
    4aec:	e8 ff 
    4aee:	1c 44 82 fe 	mov	-382(r4),r12	;0xfe82(r4)
    4af2:	1d 44 84 fe 	mov	-380(r4),r13	;0xfe84(r4)
    4af6:	1e 44 86 fe 	mov	-378(r4),r14	;0xfe86(r4)
    4afa:	1f 44 88 fe 	mov	-376(r4),r15	;0xfe88(r4)
    4afe:	1c f4 e2 ff 	and	-30(r4),r12	;0xffe2(r4)
    4b02:	1d f4 e4 ff 	and	-28(r4),r13	;0xffe4(r4)
    4b06:	1e f4 e6 ff 	and	-26(r4),r14	;0xffe6(r4)
    4b0a:	1f f4 e8 ff 	and	-24(r4),r15	;0xffe8(r4)
    4b0e:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4b12:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4b16:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4b1a:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4b1e:	08 ec       	xor	r12,	r8	
    4b20:	09 ed       	xor	r13,	r9	
    4b22:	0a ee       	xor	r14,	r10	
    4b24:	0b ef       	xor	r15,	r11	
    4b26:	84 48 ea ff 	mov	r8,	-22(r4)	;0xffea(r4)
    4b2a:	84 49 ec ff 	mov	r9,	-20(r4)	;0xffec(r4)
    4b2e:	84 4a ee ff 	mov	r10,	-18(r4)	;0xffee(r4)
    4b32:	84 4b f0 ff 	mov	r11,	-16(r4)	;0xfff0(r4)
    4b36:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4b3a:	0f 5f       	rla	r15		
    4b3c:	1f 53       	inc	r15		
    4b3e:	1e 44 50 fd 	mov	-688(r4),r14	;0xfd50(r4)
    4b42:	0f 5f       	rla	r15		
    4b44:	0f 5f       	rla	r15		
    4b46:	0f 5f       	rla	r15		
    4b48:	0f 5e       	add	r14,	r15	
    4b4a:	2c 4f       	mov	@r15,	r12	
    4b4c:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4b50:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4b54:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4b58:	18 44 ea ff 	mov	-22(r4),r8	;0xffea(r4)
    4b5c:	19 44 ec ff 	mov	-20(r4),r9	;0xffec(r4)
    4b60:	1a 44 ee ff 	mov	-18(r4),r10	;0xffee(r4)
    4b64:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfff0(r4)
    4b68:	08 ec       	xor	r12,	r8	
    4b6a:	09 ed       	xor	r13,	r9	
    4b6c:	0a ee       	xor	r14,	r10	
    4b6e:	0b ef       	xor	r15,	r11	
    4b70:	84 48 7a fd 	mov	r8,	-646(r4);0xfd7a(r4)
    4b74:	84 49 7c fd 	mov	r9,	-644(r4);0xfd7c(r4)
    4b78:	84 4a 7e fd 	mov	r10,	-642(r4);0xfd7e(r4)
    4b7c:	84 4b 80 fd 	mov	r11,	-640(r4);0xfd80(r4)

    for(j=24;j>2;--j)
    4b80:	b4 40 18 00 	mov	#24,	-692(r4);#0x0018, 0xfd4c(r4)
    4b84:	4c fd 
    4b86:	29 3c       	jmp	$+84     	;abs 0x4bda
      L1[j] = L1[j-3];
    4b88:	1f 44 4c fd 	mov	-692(r4),r15	;0xfd4c(r4)
    4b8c:	3f 50 fd ff 	add	#-3,	r15	;#0xfffd
    4b90:	0f 5f       	rla	r15		
    4b92:	0f 5f       	rla	r15		
    4b94:	0f 5f       	rla	r15		
    4b96:	39 40 4a fd 	mov	#-694,	r9	;#0xfd4a
    4b9a:	09 54       	add	r4,	r9	
    4b9c:	0f 59       	add	r9,	r15	
    4b9e:	3f 50 38 00 	add	#56,	r15	;#0x0038
    4ba2:	2c 4f       	mov	@r15,	r12	
    4ba4:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4ba8:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4bac:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4bb0:	1b 44 4c fd 	mov	-692(r4),r11	;0xfd4c(r4)
    4bb4:	0b 5b       	rla	r11		
    4bb6:	0b 5b       	rla	r11		
    4bb8:	0b 5b       	rla	r11		
    4bba:	3a 40 4a fd 	mov	#-694,	r10	;#0xfd4a
    4bbe:	0a 54       	add	r4,	r10	
    4bc0:	0b 5a       	add	r10,	r11	
    4bc2:	3b 50 38 00 	add	#56,	r11	;#0x0038
    4bc6:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4bca:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4bce:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4bd2:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
    fa_0 = L1[X1_64-2] ^ L1[X2_64-2] ^ (L1[X3_64-2] & L1[X4_64-2]) ^ (L1[X5_64-2] & IR[i])       ^ k[2*i];
    fb_2 = L2[Y1_64]   ^ L2[Y2_64]   ^ (L2[Y3_64] & L2[Y4_64])     ^ (L2[Y5_64] & L2[Y6_64])     ^ k[2*i+1];
    fb_1 = L2[Y1_64-1] ^ L2[Y2_64-1] ^ (L2[Y3_64-1] & L2[Y4_64-1]) ^ (L2[Y5_64-1] & L2[Y6_64-1]) ^ k[2*i+1];
    fb_0 = L2[Y1_64-2] ^ L2[Y2_64-2] ^ (L2[Y3_64-2] & L2[Y4_64-2]) ^ (L2[Y5_64-2] & L2[Y6_64-2]) ^ k[2*i+1];

    for(j=24;j>2;--j)
    4bd6:	b4 53 4c fd 	add	#-1,	-692(r4);r3 As==11, 0xfd4c(r4)
    4bda:	b4 90 03 00 	cmp	#3,	-692(r4);#0x0003, 0xfd4c(r4)
    4bde:	4c fd 
    4be0:	d3 37       	jge	$-88     	;abs 0x4b88
      L1[j] = L1[j-3];
    for(j=38;j>2;--j)
    4be2:	b4 40 26 00 	mov	#38,	-692(r4);#0x0026, 0xfd4c(r4)
    4be6:	4c fd 
    4be8:	29 3c       	jmp	$+84     	;abs 0x4c3c
      L2[j] = L2[j-3];
    4bea:	1f 44 4c fd 	mov	-692(r4),r15	;0xfd4c(r4)
    4bee:	3f 50 fd ff 	add	#-3,	r15	;#0xfffd
    4bf2:	0f 5f       	rla	r15		
    4bf4:	0f 5f       	rla	r15		
    4bf6:	0f 5f       	rla	r15		
    4bf8:	3b 40 4a fd 	mov	#-694,	r11	;#0xfd4a
    4bfc:	0b 54       	add	r4,	r11	
    4bfe:	0f 5b       	add	r11,	r15	
    4c00:	3f 50 00 01 	add	#256,	r15	;#0x0100
    4c04:	2c 4f       	mov	@r15,	r12	
    4c06:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4c0a:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4c0e:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4c12:	1b 44 4c fd 	mov	-692(r4),r11	;0xfd4c(r4)
    4c16:	0b 5b       	rla	r11		
    4c18:	0b 5b       	rla	r11		
    4c1a:	0b 5b       	rla	r11		
    4c1c:	38 40 4a fd 	mov	#-694,	r8	;#0xfd4a
    4c20:	08 54       	add	r4,	r8	
    4c22:	0b 58       	add	r8,	r11	
    4c24:	3b 50 00 01 	add	#256,	r11	;#0x0100
    4c28:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4c2c:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4c30:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4c34:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
    fb_1 = L2[Y1_64-1] ^ L2[Y2_64-1] ^ (L2[Y3_64-1] & L2[Y4_64-1]) ^ (L2[Y5_64-1] & L2[Y6_64-1]) ^ k[2*i+1];
    fb_0 = L2[Y1_64-2] ^ L2[Y2_64-2] ^ (L2[Y3_64-2] & L2[Y4_64-2]) ^ (L2[Y5_64-2] & L2[Y6_64-2]) ^ k[2*i+1];

    for(j=24;j>2;--j)
      L1[j] = L1[j-3];
    for(j=38;j>2;--j)
    4c38:	b4 53 4c fd 	add	#-1,	-692(r4);r3 As==11, 0xfd4c(r4)
    4c3c:	b4 90 03 00 	cmp	#3,	-692(r4);#0x0003, 0xfd4c(r4)
    4c40:	4c fd 
    4c42:	d3 37       	jge	$-88     	;abs 0x4bea
      L2[j] = L2[j-3];
    L1[2] = fb_2;
    4c44:	94 44 6a fd 	mov	-662(r4),-622(r4);0xfd6a(r4), 0xfd92(r4)
    4c48:	92 fd 
    4c4a:	94 44 6c fd 	mov	-660(r4),-620(r4);0xfd6c(r4), 0xfd94(r4)
    4c4e:	94 fd 
    4c50:	94 44 6e fd 	mov	-658(r4),-618(r4);0xfd6e(r4), 0xfd96(r4)
    4c54:	96 fd 
    4c56:	94 44 70 fd 	mov	-656(r4),-616(r4);0xfd70(r4), 0xfd98(r4)
    4c5a:	98 fd 
    L1[1] = fb_1;
    4c5c:	94 44 72 fd 	mov	-654(r4),-630(r4);0xfd72(r4), 0xfd8a(r4)
    4c60:	8a fd 
    4c62:	94 44 74 fd 	mov	-652(r4),-628(r4);0xfd74(r4), 0xfd8c(r4)
    4c66:	8c fd 
    4c68:	94 44 76 fd 	mov	-650(r4),-626(r4);0xfd76(r4), 0xfd8e(r4)
    4c6c:	8e fd 
    4c6e:	94 44 78 fd 	mov	-648(r4),-624(r4);0xfd78(r4), 0xfd90(r4)
    4c72:	90 fd 
    L1[0] = fb_0;
    4c74:	94 44 7a fd 	mov	-646(r4),-638(r4);0xfd7a(r4), 0xfd82(r4)
    4c78:	82 fd 
    4c7a:	94 44 7c fd 	mov	-644(r4),-636(r4);0xfd7c(r4), 0xfd84(r4)
    4c7e:	84 fd 
    4c80:	94 44 7e fd 	mov	-642(r4),-634(r4);0xfd7e(r4), 0xfd86(r4)
    4c84:	86 fd 
    4c86:	94 44 80 fd 	mov	-640(r4),-632(r4);0xfd80(r4), 0xfd88(r4)
    4c8a:	88 fd 
    L2[2] = fa_2;
    4c8c:	94 44 52 fd 	mov	-686(r4),-422(r4);0xfd52(r4), 0xfe5a(r4)
    4c90:	5a fe 
    4c92:	94 44 54 fd 	mov	-684(r4),-420(r4);0xfd54(r4), 0xfe5c(r4)
    4c96:	5c fe 
    4c98:	94 44 56 fd 	mov	-682(r4),-418(r4);0xfd56(r4), 0xfe5e(r4)
    4c9c:	5e fe 
    4c9e:	94 44 58 fd 	mov	-680(r4),-416(r4);0xfd58(r4), 0xfe60(r4)
    4ca2:	60 fe 
    L2[1] = fa_1;
    4ca4:	94 44 5a fd 	mov	-678(r4),-430(r4);0xfd5a(r4), 0xfe52(r4)
    4ca8:	52 fe 
    4caa:	94 44 5c fd 	mov	-676(r4),-428(r4);0xfd5c(r4), 0xfe54(r4)
    4cae:	54 fe 
    4cb0:	94 44 5e fd 	mov	-674(r4),-426(r4);0xfd5e(r4), 0xfe56(r4)
    4cb4:	56 fe 
    4cb6:	94 44 60 fd 	mov	-672(r4),-424(r4);0xfd60(r4), 0xfe58(r4)
    4cba:	58 fe 
    L2[0] = fa_0;
    4cbc:	94 44 62 fd 	mov	-670(r4),-438(r4);0xfd62(r4), 0xfe4a(r4)
    4cc0:	4a fe 
    4cc2:	94 44 64 fd 	mov	-668(r4),-436(r4);0xfd64(r4), 0xfe4c(r4)
    4cc6:	4c fe 
    4cc8:	94 44 66 fd 	mov	-666(r4),-434(r4);0xfd66(r4), 0xfe4e(r4)
    4ccc:	4e fe 
    4cce:	94 44 68 fd 	mov	-664(r4),-432(r4);0xfd68(r4), 0xfe50(r4)
    4cd2:	50 fe 
  for(i=0;i<80;++i)
    k[i]=key[i];
  for(i=80;i<2*rounds;++i)
    k[i]=k[i-80] ^ k[i-61] ^ k[i-50] ^ k[i-13] ;

  for(i=0;i<rounds;++i) {
    4cd4:	94 53 4a fd 	inc	-694(r4)	;0xfd4a(r4)
    4cd8:	94 94 88 ff 	cmp	-120(r4),-694(r4);0xff88(r4), 0xfd4a(r4)
    4cdc:	4a fd 
    4cde:	02 34       	jge	$+6      	;abs 0x4ce4
    4ce0:	30 40 46 43 	br	#0x4346	
    L2[2] = fa_2;
    L2[1] = fa_1;
    L2[0] = fa_0;
  }

  for(i=0;i<39;++i) 
    4ce4:	84 43 4a fd 	mov	#0,	-694(r4);r3 As==00, 0xfd4a(r4)
    4ce8:	24 3c       	jmp	$+74     	;abs 0x4d32
    cipher[i] = L2[i];
    4cea:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4cee:	0f 5f       	rla	r15		
    4cf0:	0f 5f       	rla	r15		
    4cf2:	0f 5f       	rla	r15		
    4cf4:	1b 44 84 ff 	mov	-124(r4),r11	;0xff84(r4)
    4cf8:	0b 5f       	add	r15,	r11	
    4cfa:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4cfe:	0f 5f       	rla	r15		
    4d00:	0f 5f       	rla	r15		
    4d02:	0f 5f       	rla	r15		
    4d04:	39 40 4a fd 	mov	#-694,	r9	;#0xfd4a
    4d08:	09 54       	add	r4,	r9	
    4d0a:	0f 59       	add	r9,	r15	
    4d0c:	3f 50 00 01 	add	#256,	r15	;#0x0100
    4d10:	2c 4f       	mov	@r15,	r12	
    4d12:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4d16:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4d1a:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4d1e:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4d22:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4d26:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4d2a:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
    L2[2] = fa_2;
    L2[1] = fa_1;
    L2[0] = fa_0;
  }

  for(i=0;i<39;++i) 
    4d2e:	94 53 4a fd 	inc	-694(r4)	;0xfd4a(r4)
    4d32:	b4 90 27 00 	cmp	#39,	-694(r4);#0x0027, 0xfd4a(r4)
    4d36:	4a fd 
    4d38:	d8 3b       	jl	$-78     	;abs 0x4cea
    cipher[i] = L2[i];
  for(i=0;i<25;++i) 
    4d3a:	84 43 4a fd 	mov	#0,	-694(r4);r3 As==00, 0xfd4a(r4)
    4d3e:	26 3c       	jmp	$+78     	;abs 0x4d8c
    cipher[i+39] = L1[i];
    4d40:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4d44:	3f 50 27 00 	add	#39,	r15	;#0x0027
    4d48:	0f 5f       	rla	r15		
    4d4a:	0f 5f       	rla	r15		
    4d4c:	0f 5f       	rla	r15		
    4d4e:	1b 44 84 ff 	mov	-124(r4),r11	;0xff84(r4)
    4d52:	0b 5f       	add	r15,	r11	
    4d54:	1f 44 4a fd 	mov	-694(r4),r15	;0xfd4a(r4)
    4d58:	0f 5f       	rla	r15		
    4d5a:	0f 5f       	rla	r15		
    4d5c:	0f 5f       	rla	r15		
    4d5e:	3a 40 4a fd 	mov	#-694,	r10	;#0xfd4a
    4d62:	0a 54       	add	r4,	r10	
    4d64:	0f 5a       	add	r10,	r15	
    4d66:	3f 50 38 00 	add	#56,	r15	;#0x0038
    4d6a:	2c 4f       	mov	@r15,	r12	
    4d6c:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4d70:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4d74:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4d78:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4d7c:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4d80:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4d84:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
    L2[0] = fa_0;
  }

  for(i=0;i<39;++i) 
    cipher[i] = L2[i];
  for(i=0;i<25;++i) 
    4d88:	94 53 4a fd 	inc	-694(r4)	;0xfd4a(r4)
    4d8c:	b4 90 19 00 	cmp	#25,	-694(r4);#0x0019, 0xfd4a(r4)
    4d90:	4a fd 
    4d92:	d6 3b       	jl	$-82     	;abs 0x4d40
    4d94:	01 46       	mov	r6,	r1	
    cipher[i+39] = L1[i];

}
    4d96:	01 47       	mov	r7,	r1	
    4d98:	31 50 a8 02 	add	#680,	r1	;#0x02a8
    4d9c:	34 41       	pop	r4		
    4d9e:	36 41       	pop	r6		
    4da0:	37 41       	pop	r7		
    4da2:	38 41       	pop	r8		
    4da4:	39 41       	pop	r9		
    4da6:	3a 41       	pop	r10		
    4da8:	3b 41       	pop	r11		
    4daa:	30 41       	ret			

00004dac <katan64_decrypt>:


void katan64_decrypt( const u64 cipher[64], u64 plain[64], const u64 key[80], int rounds ) {
    4dac:	0b 12       	push	r11		
    4dae:	0a 12       	push	r10		
    4db0:	09 12       	push	r9		
    4db2:	08 12       	push	r8		
    4db4:	07 12       	push	r7		
    4db6:	06 12       	push	r6		
    4db8:	04 12       	push	r4		
    4dba:	04 41       	mov	r1,	r4	
    4dbc:	34 50 0e 00 	add	#14,	r4	;#0x000e
    4dc0:	31 50 60 fd 	add	#-672,	r1	;#0xfd60
    4dc4:	84 4f 8a ff 	mov	r15,	-118(r4);0xff8a(r4)
    4dc8:	84 4e 8c ff 	mov	r14,	-116(r4);0xff8c(r4)
    4dcc:	84 4d 8e ff 	mov	r13,	-114(r4);0xff8e(r4)
    4dd0:	84 4c 90 ff 	mov	r12,	-112(r4);0xff90(r4)
  for(i=0;i<39;++i) 
    plain[i] = L2[i];
  for(i=0;i<25;++i) 
    plain[i+39] = L1[i];

}
    4dd4:	07 41       	mov	r1,	r7	
    cipher[i+39] = L1[i];

}


void katan64_decrypt( const u64 cipher[64], u64 plain[64], const u64 key[80], int rounds ) {
    4dd6:	0f 41       	mov	r1,	r15	
    4dd8:	06 4f       	mov	r15,	r6	

  u64 L1[25], L2[39], k[2*rounds], fa_2, fa_1, fa_0, fb_2, fb_1, fb_0;
    4dda:	1f 44 90 ff 	mov	-112(r4),r15	;0xff90(r4)
    4dde:	0f 5f       	rla	r15		
    4de0:	0e 4f       	mov	r15,	r14	
    4de2:	3e 53       	add	#-1,	r14	;r3 As==11
    4de4:	84 4e 56 fd 	mov	r14,	-682(r4);0xfd56(r4)
    4de8:	0e 4f       	mov	r15,	r14	
    4dea:	08 4e       	mov	r14,	r8	
    4dec:	09 43       	clr	r9		
    4dee:	0e 4f       	mov	r15,	r14	
    4df0:	0a 4e       	mov	r14,	r10	
    4df2:	0b 43       	clr	r11		
    4df4:	0f 5f       	rla	r15		
    4df6:	0f 5f       	rla	r15		
    4df8:	0f 5f       	rla	r15		
    4dfa:	1f 53       	inc	r15		
    4dfc:	1f 53       	inc	r15		
    4dfe:	12 c3       	clrc			
    4e00:	0f 10       	rrc	r15		
    4e02:	0f 5f       	rla	r15		
    4e04:	01 8f       	sub	r15,	r1	
    4e06:	0f 41       	mov	r1,	r15	
    4e08:	1f 53       	inc	r15		
    4e0a:	12 c3       	clrc			
    4e0c:	0f 10       	rrc	r15		
    4e0e:	0f 5f       	rla	r15		
    4e10:	84 4f 58 fd 	mov	r15,	-680(r4);0xfd58(r4)
  int i,j;

  
  for(i=0;i<39;++i) 
    4e14:	84 43 52 fd 	mov	#0,	-686(r4);r3 As==00, 0xfd52(r4)
    4e18:	23 3c       	jmp	$+72     	;abs 0x4e60
    L2[i] = cipher[i];
    4e1a:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    4e1e:	0f 5f       	rla	r15		
    4e20:	0f 5f       	rla	r15		
    4e22:	0f 5f       	rla	r15		
    4e24:	1f 54 8a ff 	add	-118(r4),r15	;0xff8a(r4)
    4e28:	2c 4f       	mov	@r15,	r12	
    4e2a:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4e2e:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4e32:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4e36:	1b 44 52 fd 	mov	-686(r4),r11	;0xfd52(r4)
    4e3a:	0b 5b       	rla	r11		
    4e3c:	0b 5b       	rla	r11		
    4e3e:	0b 5b       	rla	r11		
    4e40:	3a 40 52 fd 	mov	#-686,	r10	;#0xfd52
    4e44:	0a 54       	add	r4,	r10	
    4e46:	0b 5a       	add	r10,	r11	
    4e48:	3b 50 00 01 	add	#256,	r11	;#0x0100
    4e4c:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4e50:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4e54:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4e58:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)

  u64 L1[25], L2[39], k[2*rounds], fa_2, fa_1, fa_0, fb_2, fb_1, fb_0;
  int i,j;

  
  for(i=0;i<39;++i) 
    4e5c:	94 53 52 fd 	inc	-686(r4)	;0xfd52(r4)
    4e60:	b4 90 27 00 	cmp	#39,	-686(r4);#0x0027, 0xfd52(r4)
    4e64:	52 fd 
    4e66:	d9 3b       	jl	$-76     	;abs 0x4e1a
    L2[i] = cipher[i];
  for(i=0;i<25;++i) 
    4e68:	84 43 52 fd 	mov	#0,	-686(r4);r3 As==00, 0xfd52(r4)
    4e6c:	25 3c       	jmp	$+76     	;abs 0x4eb8
    L1[i] = cipher[i+39];
    4e6e:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    4e72:	3f 50 27 00 	add	#39,	r15	;#0x0027
    4e76:	0f 5f       	rla	r15		
    4e78:	0f 5f       	rla	r15		
    4e7a:	0f 5f       	rla	r15		
    4e7c:	1f 54 8a ff 	add	-118(r4),r15	;0xff8a(r4)
    4e80:	2c 4f       	mov	@r15,	r12	
    4e82:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4e86:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4e8a:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4e8e:	1b 44 52 fd 	mov	-686(r4),r11	;0xfd52(r4)
    4e92:	0b 5b       	rla	r11		
    4e94:	0b 5b       	rla	r11		
    4e96:	0b 5b       	rla	r11		
    4e98:	3a 40 52 fd 	mov	#-686,	r10	;#0xfd52
    4e9c:	0a 54       	add	r4,	r10	
    4e9e:	0b 5a       	add	r10,	r11	
    4ea0:	3b 50 38 00 	add	#56,	r11	;#0x0038
    4ea4:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4ea8:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4eac:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4eb0:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
  int i,j;

  
  for(i=0;i<39;++i) 
    L2[i] = cipher[i];
  for(i=0;i<25;++i) 
    4eb4:	94 53 52 fd 	inc	-686(r4)	;0xfd52(r4)
    4eb8:	b4 90 19 00 	cmp	#25,	-686(r4);#0x0019, 0xfd52(r4)
    4ebc:	52 fd 
    4ebe:	d7 3b       	jl	$-80     	;abs 0x4e6e
    L1[i] = cipher[i+39];

  for(i=0;i<80;++i)
    4ec0:	84 43 52 fd 	mov	#0,	-686(r4);r3 As==00, 0xfd52(r4)
    4ec4:	20 3c       	jmp	$+66     	;abs 0x4f06
    k[i]=key[i];
    4ec6:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    4eca:	0f 5f       	rla	r15		
    4ecc:	0f 5f       	rla	r15		
    4ece:	0f 5f       	rla	r15		
    4ed0:	1f 54 8e ff 	add	-114(r4),r15	;0xff8e(r4)
    4ed4:	2c 4f       	mov	@r15,	r12	
    4ed6:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4eda:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4ede:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4ee2:	1a 44 58 fd 	mov	-680(r4),r10	;0xfd58(r4)
    4ee6:	1b 44 52 fd 	mov	-686(r4),r11	;0xfd52(r4)
    4eea:	0b 5b       	rla	r11		
    4eec:	0b 5b       	rla	r11		
    4eee:	0b 5b       	rla	r11		
    4ef0:	0b 5a       	add	r10,	r11	
    4ef2:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4ef6:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4efa:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4efe:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
  for(i=0;i<39;++i) 
    L2[i] = cipher[i];
  for(i=0;i<25;++i) 
    L1[i] = cipher[i+39];

  for(i=0;i<80;++i)
    4f02:	94 53 52 fd 	inc	-686(r4)	;0xfd52(r4)
    4f06:	b4 90 50 00 	cmp	#80,	-686(r4);#0x0050, 0xfd52(r4)
    4f0a:	52 fd 
    4f0c:	dc 3b       	jl	$-70     	;abs 0x4ec6
    k[i]=key[i];
  for(i=80;i<2*rounds;++i)
    4f0e:	b4 40 50 00 	mov	#80,	-686(r4);#0x0050, 0xfd52(r4)
    4f12:	52 fd 
    4f14:	62 3c       	jmp	$+198    	;abs 0x4fda
    k[i]=k[i-80] ^ k[i-61] ^ k[i-50] ^ k[i-13];
    4f16:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    4f1a:	3f 50 b0 ff 	add	#-80,	r15	;#0xffb0
    4f1e:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    4f22:	0f 5f       	rla	r15		
    4f24:	0f 5f       	rla	r15		
    4f26:	0f 5f       	rla	r15		
    4f28:	0f 5e       	add	r14,	r15	
    4f2a:	28 4f       	mov	@r15,	r8	
    4f2c:	19 4f 02 00 	mov	2(r15),	r9	;0x0002(r15)
    4f30:	1a 4f 04 00 	mov	4(r15),	r10	;0x0004(r15)
    4f34:	1b 4f 06 00 	mov	6(r15),	r11	;0x0006(r15)
    4f38:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    4f3c:	3f 50 c3 ff 	add	#-61,	r15	;#0xffc3
    4f40:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    4f44:	0f 5f       	rla	r15		
    4f46:	0f 5f       	rla	r15		
    4f48:	0f 5f       	rla	r15		
    4f4a:	0f 5e       	add	r14,	r15	
    4f4c:	2c 4f       	mov	@r15,	r12	
    4f4e:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4f52:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4f56:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4f5a:	08 ec       	xor	r12,	r8	
    4f5c:	09 ed       	xor	r13,	r9	
    4f5e:	0a ee       	xor	r14,	r10	
    4f60:	0b ef       	xor	r15,	r11	
    4f62:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    4f66:	3f 50 ce ff 	add	#-50,	r15	;#0xffce
    4f6a:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    4f6e:	0f 5f       	rla	r15		
    4f70:	0f 5f       	rla	r15		
    4f72:	0f 5f       	rla	r15		
    4f74:	0f 5e       	add	r14,	r15	
    4f76:	2c 4f       	mov	@r15,	r12	
    4f78:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4f7c:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4f80:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4f84:	08 ec       	xor	r12,	r8	
    4f86:	09 ed       	xor	r13,	r9	
    4f88:	0a ee       	xor	r14,	r10	
    4f8a:	0b ef       	xor	r15,	r11	
    4f8c:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    4f90:	3f 50 f3 ff 	add	#-13,	r15	;#0xfff3
    4f94:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    4f98:	0f 5f       	rla	r15		
    4f9a:	0f 5f       	rla	r15		
    4f9c:	0f 5f       	rla	r15		
    4f9e:	0f 5e       	add	r14,	r15	
    4fa0:	2c 4f       	mov	@r15,	r12	
    4fa2:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    4fa6:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    4faa:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    4fae:	0c e8       	xor	r8,	r12	
    4fb0:	0d e9       	xor	r9,	r13	
    4fb2:	0e ea       	xor	r10,	r14	
    4fb4:	0f eb       	xor	r11,	r15	
    4fb6:	1a 44 58 fd 	mov	-680(r4),r10	;0xfd58(r4)
    4fba:	1b 44 52 fd 	mov	-686(r4),r11	;0xfd52(r4)
    4fbe:	0b 5b       	rla	r11		
    4fc0:	0b 5b       	rla	r11		
    4fc2:	0b 5b       	rla	r11		
    4fc4:	0b 5a       	add	r10,	r11	
    4fc6:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    4fca:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    4fce:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    4fd2:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
  for(i=0;i<25;++i) 
    L1[i] = cipher[i+39];

  for(i=0;i<80;++i)
    k[i]=key[i];
  for(i=80;i<2*rounds;++i)
    4fd6:	94 53 52 fd 	inc	-686(r4)	;0xfd52(r4)
    4fda:	1f 44 90 ff 	mov	-112(r4),r15	;0xff90(r4)
    4fde:	0f 5f       	rla	r15		
    4fe0:	84 9f 52 fd 	cmp	r15,	-686(r4);0xfd52(r4)
    4fe4:	98 3b       	jl	$-206    	;abs 0x4f16
    k[i]=k[i-80] ^ k[i-61] ^ k[i-50] ^ k[i-13];

  for(i=rounds-1;i>=0;--i) {
    4fe6:	1e 44 90 ff 	mov	-112(r4),r14	;0xff90(r4)
    4fea:	3e 53       	add	#-1,	r14	;r3 As==11
    4fec:	84 4e 52 fd 	mov	r14,	-686(r4);0xfd52(r4)
    4ff0:	30 40 b2 56 	br	#0x56b2	

    fb_2 = L1[2];    
    4ff4:	94 44 9a fd 	mov	-614(r4),-678(r4);0xfd9a(r4), 0xfd5a(r4)
    4ff8:	5a fd 
    4ffa:	94 44 9c fd 	mov	-612(r4),-676(r4);0xfd9c(r4), 0xfd5c(r4)
    4ffe:	5c fd 
    5000:	94 44 9e fd 	mov	-610(r4),-674(r4);0xfd9e(r4), 0xfd5e(r4)
    5004:	5e fd 
    5006:	94 44 a0 fd 	mov	-608(r4),-672(r4);0xfda0(r4), 0xfd60(r4)
    500a:	60 fd 
    fb_1 = L1[1];    
    500c:	94 44 92 fd 	mov	-622(r4),-670(r4);0xfd92(r4), 0xfd62(r4)
    5010:	62 fd 
    5012:	94 44 94 fd 	mov	-620(r4),-668(r4);0xfd94(r4), 0xfd64(r4)
    5016:	64 fd 
    5018:	94 44 96 fd 	mov	-618(r4),-666(r4);0xfd96(r4), 0xfd66(r4)
    501c:	66 fd 
    501e:	94 44 98 fd 	mov	-616(r4),-664(r4);0xfd98(r4), 0xfd68(r4)
    5022:	68 fd 
    fb_0 = L1[0];    
    5024:	94 44 8a fd 	mov	-630(r4),-662(r4);0xfd8a(r4), 0xfd6a(r4)
    5028:	6a fd 
    502a:	94 44 8c fd 	mov	-628(r4),-660(r4);0xfd8c(r4), 0xfd6c(r4)
    502e:	6c fd 
    5030:	94 44 8e fd 	mov	-626(r4),-658(r4);0xfd8e(r4), 0xfd6e(r4)
    5034:	6e fd 
    5036:	94 44 90 fd 	mov	-624(r4),-656(r4);0xfd90(r4), 0xfd70(r4)
    503a:	70 fd 
    fa_2 = L2[2];
    503c:	94 44 62 fe 	mov	-414(r4),-654(r4);0xfe62(r4), 0xfd72(r4)
    5040:	72 fd 
    5042:	94 44 64 fe 	mov	-412(r4),-652(r4);0xfe64(r4), 0xfd74(r4)
    5046:	74 fd 
    5048:	94 44 66 fe 	mov	-410(r4),-650(r4);0xfe66(r4), 0xfd76(r4)
    504c:	76 fd 
    504e:	94 44 68 fe 	mov	-408(r4),-648(r4);0xfe68(r4), 0xfd78(r4)
    5052:	78 fd 
    fa_1 = L2[1];
    5054:	94 44 5a fe 	mov	-422(r4),-646(r4);0xfe5a(r4), 0xfd7a(r4)
    5058:	7a fd 
    505a:	94 44 5c fe 	mov	-420(r4),-644(r4);0xfe5c(r4), 0xfd7c(r4)
    505e:	7c fd 
    5060:	94 44 5e fe 	mov	-418(r4),-642(r4);0xfe5e(r4), 0xfd7e(r4)
    5064:	7e fd 
    5066:	94 44 60 fe 	mov	-416(r4),-640(r4);0xfe60(r4), 0xfd80(r4)
    506a:	80 fd 
    fa_0 = L2[0];
    506c:	94 44 52 fe 	mov	-430(r4),-638(r4);0xfe52(r4), 0xfd82(r4)
    5070:	82 fd 
    5072:	94 44 54 fe 	mov	-428(r4),-636(r4);0xfe54(r4), 0xfd84(r4)
    5076:	84 fd 
    5078:	94 44 56 fe 	mov	-426(r4),-634(r4);0xfe56(r4), 0xfd86(r4)
    507c:	86 fd 
    507e:	94 44 58 fe 	mov	-424(r4),-632(r4);0xfe58(r4), 0xfd88(r4)
    5082:	88 fd 
    for(j=0;j<22;++j)
    5084:	84 43 54 fd 	mov	#0,	-684(r4);r3 As==00, 0xfd54(r4)
    5088:	29 3c       	jmp	$+84     	;abs 0x50dc
      L1[j] = L1[j+3];
    508a:	1f 44 54 fd 	mov	-684(r4),r15	;0xfd54(r4)
    508e:	3f 50 03 00 	add	#3,	r15	;#0x0003
    5092:	0f 5f       	rla	r15		
    5094:	0f 5f       	rla	r15		
    5096:	0f 5f       	rla	r15		
    5098:	3a 40 52 fd 	mov	#-686,	r10	;#0xfd52
    509c:	0a 54       	add	r4,	r10	
    509e:	0f 5a       	add	r10,	r15	
    50a0:	3f 50 38 00 	add	#56,	r15	;#0x0038
    50a4:	2c 4f       	mov	@r15,	r12	
    50a6:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    50aa:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    50ae:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    50b2:	1b 44 54 fd 	mov	-684(r4),r11	;0xfd54(r4)
    50b6:	0b 5b       	rla	r11		
    50b8:	0b 5b       	rla	r11		
    50ba:	0b 5b       	rla	r11		
    50bc:	3a 40 52 fd 	mov	#-686,	r10	;#0xfd52
    50c0:	0a 54       	add	r4,	r10	
    50c2:	0b 5a       	add	r10,	r11	
    50c4:	3b 50 38 00 	add	#56,	r11	;#0x0038
    50c8:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    50cc:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    50d0:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    50d4:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
    fb_1 = L1[1];    
    fb_0 = L1[0];    
    fa_2 = L2[2];
    fa_1 = L2[1];
    fa_0 = L2[0];
    for(j=0;j<22;++j)
    50d8:	94 53 54 fd 	inc	-684(r4)	;0xfd54(r4)
    50dc:	b4 90 16 00 	cmp	#22,	-684(r4);#0x0016, 0xfd54(r4)
    50e0:	54 fd 
    50e2:	d3 3b       	jl	$-88     	;abs 0x508a
      L1[j] = L1[j+3];
    for(j=0;j<36;++j)
    50e4:	84 43 54 fd 	mov	#0,	-684(r4);r3 As==00, 0xfd54(r4)
    50e8:	29 3c       	jmp	$+84     	;abs 0x513c
      L2[j] = L2[j+3];
    50ea:	1f 44 54 fd 	mov	-684(r4),r15	;0xfd54(r4)
    50ee:	3f 50 03 00 	add	#3,	r15	;#0x0003
    50f2:	0f 5f       	rla	r15		
    50f4:	0f 5f       	rla	r15		
    50f6:	0f 5f       	rla	r15		
    50f8:	3e 40 52 fd 	mov	#-686,	r14	;#0xfd52
    50fc:	0e 54       	add	r4,	r14	
    50fe:	0f 5e       	add	r14,	r15	
    5100:	3f 50 00 01 	add	#256,	r15	;#0x0100
    5104:	2c 4f       	mov	@r15,	r12	
    5106:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    510a:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    510e:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    5112:	1b 44 54 fd 	mov	-684(r4),r11	;0xfd54(r4)
    5116:	0b 5b       	rla	r11		
    5118:	0b 5b       	rla	r11		
    511a:	0b 5b       	rla	r11		
    511c:	3a 40 52 fd 	mov	#-686,	r10	;#0xfd52
    5120:	0a 54       	add	r4,	r10	
    5122:	0b 5a       	add	r10,	r11	
    5124:	3b 50 00 01 	add	#256,	r11	;#0x0100
    5128:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    512c:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    5130:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    5134:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
    fa_2 = L2[2];
    fa_1 = L2[1];
    fa_0 = L2[0];
    for(j=0;j<22;++j)
      L1[j] = L1[j+3];
    for(j=0;j<36;++j)
    5138:	94 53 54 fd 	inc	-684(r4)	;0xfd54(r4)
    513c:	b4 90 24 00 	cmp	#36,	-684(r4);#0x0024, 0xfd54(r4)
    5140:	54 fd 
    5142:	d3 3b       	jl	$-88     	;abs 0x50ea
      L2[j] = L2[j+3];

    L1[X1_64]   = fa_2 ^ L1[X2_64]   ^ (L1[X3_64] & L1[X4_64])     ^ (L1[X5_64] & IR[i])         ^ k[2*i];
    5144:	1c 44 02 fe 	mov	-510(r4),r12	;0xfe02(r4)
    5148:	1d 44 04 fe 	mov	-508(r4),r13	;0xfe04(r4)
    514c:	1e 44 06 fe 	mov	-506(r4),r14	;0xfe06(r4)
    5150:	1f 44 08 fe 	mov	-504(r4),r15	;0xfe08(r4)
    5154:	08 4c       	mov	r12,	r8	
    5156:	09 4d       	mov	r13,	r9	
    5158:	0a 4e       	mov	r14,	r10	
    515a:	0b 4f       	mov	r15,	r11	
    515c:	18 e4 72 fd 	xor	-654(r4),r8	;0xfd72(r4)
    5160:	19 e4 74 fd 	xor	-652(r4),r9	;0xfd74(r4)
    5164:	1a e4 76 fd 	xor	-650(r4),r10	;0xfd76(r4)
    5168:	1b e4 78 fd 	xor	-648(r4),r11	;0xfd78(r4)
    516c:	94 44 2a fe 	mov	-470(r4),-110(r4);0xfe2a(r4), 0xff92(r4)
    5170:	92 ff 
    5172:	94 44 2c fe 	mov	-468(r4),-108(r4);0xfe2c(r4), 0xff94(r4)
    5176:	94 ff 
    5178:	94 44 2e fe 	mov	-466(r4),-106(r4);0xfe2e(r4), 0xff96(r4)
    517c:	96 ff 
    517e:	94 44 30 fe 	mov	-464(r4),-104(r4);0xfe30(r4), 0xff98(r4)
    5182:	98 ff 
    5184:	1c 44 e2 fd 	mov	-542(r4),r12	;0xfde2(r4)
    5188:	1d 44 e4 fd 	mov	-540(r4),r13	;0xfde4(r4)
    518c:	1e 44 e6 fd 	mov	-538(r4),r14	;0xfde6(r4)
    5190:	1f 44 e8 fd 	mov	-536(r4),r15	;0xfde8(r4)
    5194:	1c f4 92 ff 	and	-110(r4),r12	;0xff92(r4)
    5198:	1d f4 94 ff 	and	-108(r4),r13	;0xff94(r4)
    519c:	1e f4 96 ff 	and	-106(r4),r14	;0xff96(r4)
    51a0:	1f f4 98 ff 	and	-104(r4),r15	;0xff98(r4)
    51a4:	08 ec       	xor	r12,	r8	
    51a6:	09 ed       	xor	r13,	r9	
    51a8:	0a ee       	xor	r14,	r10	
    51aa:	0b ef       	xor	r15,	r11	
    51ac:	94 44 d2 fd 	mov	-558(r4),-102(r4);0xfdd2(r4), 0xff9a(r4)
    51b0:	9a ff 
    51b2:	94 44 d4 fd 	mov	-556(r4),-100(r4);0xfdd4(r4), 0xff9c(r4)
    51b6:	9c ff 
    51b8:	94 44 d6 fd 	mov	-554(r4),-98(r4)	;0xfdd6(r4), 0xff9e(r4)
    51bc:	9e ff 
    51be:	94 44 d8 fd 	mov	-552(r4),-96(r4)	;0xfdd8(r4), 0xffa0(r4)
    51c2:	a0 ff 
    51c4:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    51c8:	0f 5f       	rla	r15		
    51ca:	0f 5f       	rla	r15		
    51cc:	0f 5f       	rla	r15		
    51ce:	3f 50 8c 58 	add	#22668,	r15	;#0x588c
    51d2:	2c 4f       	mov	@r15,	r12	
    51d4:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    51d8:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    51dc:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    51e0:	1c f4 9a ff 	and	-102(r4),r12	;0xff9a(r4)
    51e4:	1d f4 9c ff 	and	-100(r4),r13	;0xff9c(r4)
    51e8:	1e f4 9e ff 	and	-98(r4),r14	;0xff9e(r4)
    51ec:	1f f4 a0 ff 	and	-96(r4),r15	;0xffa0(r4)
    51f0:	08 ec       	xor	r12,	r8	
    51f2:	09 ed       	xor	r13,	r9	
    51f4:	0a ee       	xor	r14,	r10	
    51f6:	0b ef       	xor	r15,	r11	
    51f8:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    51fc:	0f 5f       	rla	r15		
    51fe:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    5202:	0f 5f       	rla	r15		
    5204:	0f 5f       	rla	r15		
    5206:	0f 5f       	rla	r15		
    5208:	0f 5e       	add	r14,	r15	
    520a:	2c 4f       	mov	@r15,	r12	
    520c:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    5210:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    5214:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    5218:	0c e8       	xor	r8,	r12	
    521a:	0d e9       	xor	r9,	r13	
    521c:	0e ea       	xor	r10,	r14	
    521e:	0f eb       	xor	r11,	r15	
    5220:	84 4c 4a fe 	mov	r12,	-438(r4);0xfe4a(r4)
    5224:	84 4d 4c fe 	mov	r13,	-436(r4);0xfe4c(r4)
    5228:	84 4e 4e fe 	mov	r14,	-434(r4);0xfe4e(r4)
    522c:	84 4f 50 fe 	mov	r15,	-432(r4);0xfe50(r4)
    L1[X1_64-1] = fa_1 ^ L1[X2_64-1] ^ (L1[X3_64-1] & L1[X4_64-1]) ^ (L1[X5_64-1] & IR[i])       ^ k[2*i];
    5230:	1c 44 fa fd 	mov	-518(r4),r12	;0xfdfa(r4)
    5234:	1d 44 fc fd 	mov	-516(r4),r13	;0xfdfc(r4)
    5238:	1e 44 fe fd 	mov	-514(r4),r14	;0xfdfe(r4)
    523c:	1f 44 00 fe 	mov	-512(r4),r15	;0xfe00(r4)
    5240:	08 4c       	mov	r12,	r8	
    5242:	09 4d       	mov	r13,	r9	
    5244:	0a 4e       	mov	r14,	r10	
    5246:	0b 4f       	mov	r15,	r11	
    5248:	18 e4 7a fd 	xor	-646(r4),r8	;0xfd7a(r4)
    524c:	19 e4 7c fd 	xor	-644(r4),r9	;0xfd7c(r4)
    5250:	1a e4 7e fd 	xor	-642(r4),r10	;0xfd7e(r4)
    5254:	1b e4 80 fd 	xor	-640(r4),r11	;0xfd80(r4)
    5258:	94 44 22 fe 	mov	-478(r4),-94(r4)	;0xfe22(r4), 0xffa2(r4)
    525c:	a2 ff 
    525e:	94 44 24 fe 	mov	-476(r4),-92(r4)	;0xfe24(r4), 0xffa4(r4)
    5262:	a4 ff 
    5264:	94 44 26 fe 	mov	-474(r4),-90(r4)	;0xfe26(r4), 0xffa6(r4)
    5268:	a6 ff 
    526a:	94 44 28 fe 	mov	-472(r4),-88(r4)	;0xfe28(r4), 0xffa8(r4)
    526e:	a8 ff 
    5270:	1c 44 da fd 	mov	-550(r4),r12	;0xfdda(r4)
    5274:	1d 44 dc fd 	mov	-548(r4),r13	;0xfddc(r4)
    5278:	1e 44 de fd 	mov	-546(r4),r14	;0xfdde(r4)
    527c:	1f 44 e0 fd 	mov	-544(r4),r15	;0xfde0(r4)
    5280:	1c f4 a2 ff 	and	-94(r4),r12	;0xffa2(r4)
    5284:	1d f4 a4 ff 	and	-92(r4),r13	;0xffa4(r4)
    5288:	1e f4 a6 ff 	and	-90(r4),r14	;0xffa6(r4)
    528c:	1f f4 a8 ff 	and	-88(r4),r15	;0xffa8(r4)
    5290:	08 ec       	xor	r12,	r8	
    5292:	09 ed       	xor	r13,	r9	
    5294:	0a ee       	xor	r14,	r10	
    5296:	0b ef       	xor	r15,	r11	
    5298:	94 44 ca fd 	mov	-566(r4),-86(r4)	;0xfdca(r4), 0xffaa(r4)
    529c:	aa ff 
    529e:	94 44 cc fd 	mov	-564(r4),-84(r4)	;0xfdcc(r4), 0xffac(r4)
    52a2:	ac ff 
    52a4:	94 44 ce fd 	mov	-562(r4),-82(r4)	;0xfdce(r4), 0xffae(r4)
    52a8:	ae ff 
    52aa:	94 44 d0 fd 	mov	-560(r4),-80(r4)	;0xfdd0(r4), 0xffb0(r4)
    52ae:	b0 ff 
    52b0:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    52b4:	0f 5f       	rla	r15		
    52b6:	0f 5f       	rla	r15		
    52b8:	0f 5f       	rla	r15		
    52ba:	3f 50 8c 58 	add	#22668,	r15	;#0x588c
    52be:	2c 4f       	mov	@r15,	r12	
    52c0:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    52c4:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    52c8:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    52cc:	1c f4 aa ff 	and	-86(r4),r12	;0xffaa(r4)
    52d0:	1d f4 ac ff 	and	-84(r4),r13	;0xffac(r4)
    52d4:	1e f4 ae ff 	and	-82(r4),r14	;0xffae(r4)
    52d8:	1f f4 b0 ff 	and	-80(r4),r15	;0xffb0(r4)
    52dc:	08 ec       	xor	r12,	r8	
    52de:	09 ed       	xor	r13,	r9	
    52e0:	0a ee       	xor	r14,	r10	
    52e2:	0b ef       	xor	r15,	r11	
    52e4:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    52e8:	0f 5f       	rla	r15		
    52ea:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    52ee:	0f 5f       	rla	r15		
    52f0:	0f 5f       	rla	r15		
    52f2:	0f 5f       	rla	r15		
    52f4:	0f 5e       	add	r14,	r15	
    52f6:	2c 4f       	mov	@r15,	r12	
    52f8:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    52fc:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    5300:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    5304:	0c e8       	xor	r8,	r12	
    5306:	0d e9       	xor	r9,	r13	
    5308:	0e ea       	xor	r10,	r14	
    530a:	0f eb       	xor	r11,	r15	
    530c:	84 4c 42 fe 	mov	r12,	-446(r4);0xfe42(r4)
    5310:	84 4d 44 fe 	mov	r13,	-444(r4);0xfe44(r4)
    5314:	84 4e 46 fe 	mov	r14,	-442(r4);0xfe46(r4)
    5318:	84 4f 48 fe 	mov	r15,	-440(r4);0xfe48(r4)
    L1[X1_64-2] = fa_0 ^ L1[X2_64-2] ^ (L1[X3_64-2] & L1[X4_64-2]) ^ (L1[X5_64-2] & IR[i])       ^ k[2*i];
    531c:	1c 44 f2 fd 	mov	-526(r4),r12	;0xfdf2(r4)
    5320:	1d 44 f4 fd 	mov	-524(r4),r13	;0xfdf4(r4)
    5324:	1e 44 f6 fd 	mov	-522(r4),r14	;0xfdf6(r4)
    5328:	1f 44 f8 fd 	mov	-520(r4),r15	;0xfdf8(r4)
    532c:	08 4c       	mov	r12,	r8	
    532e:	09 4d       	mov	r13,	r9	
    5330:	0a 4e       	mov	r14,	r10	
    5332:	0b 4f       	mov	r15,	r11	
    5334:	18 e4 82 fd 	xor	-638(r4),r8	;0xfd82(r4)
    5338:	19 e4 84 fd 	xor	-636(r4),r9	;0xfd84(r4)
    533c:	1a e4 86 fd 	xor	-634(r4),r10	;0xfd86(r4)
    5340:	1b e4 88 fd 	xor	-632(r4),r11	;0xfd88(r4)
    5344:	94 44 1a fe 	mov	-486(r4),-78(r4)	;0xfe1a(r4), 0xffb2(r4)
    5348:	b2 ff 
    534a:	94 44 1c fe 	mov	-484(r4),-76(r4)	;0xfe1c(r4), 0xffb4(r4)
    534e:	b4 ff 
    5350:	94 44 1e fe 	mov	-482(r4),-74(r4)	;0xfe1e(r4), 0xffb6(r4)
    5354:	b6 ff 
    5356:	94 44 20 fe 	mov	-480(r4),-72(r4)	;0xfe20(r4), 0xffb8(r4)
    535a:	b8 ff 
    535c:	1c 44 d2 fd 	mov	-558(r4),r12	;0xfdd2(r4)
    5360:	1d 44 d4 fd 	mov	-556(r4),r13	;0xfdd4(r4)
    5364:	1e 44 d6 fd 	mov	-554(r4),r14	;0xfdd6(r4)
    5368:	1f 44 d8 fd 	mov	-552(r4),r15	;0xfdd8(r4)
    536c:	1c f4 b2 ff 	and	-78(r4),r12	;0xffb2(r4)
    5370:	1d f4 b4 ff 	and	-76(r4),r13	;0xffb4(r4)
    5374:	1e f4 b6 ff 	and	-74(r4),r14	;0xffb6(r4)
    5378:	1f f4 b8 ff 	and	-72(r4),r15	;0xffb8(r4)
    537c:	08 ec       	xor	r12,	r8	
    537e:	09 ed       	xor	r13,	r9	
    5380:	0a ee       	xor	r14,	r10	
    5382:	0b ef       	xor	r15,	r11	
    5384:	94 44 c2 fd 	mov	-574(r4),-70(r4)	;0xfdc2(r4), 0xffba(r4)
    5388:	ba ff 
    538a:	94 44 c4 fd 	mov	-572(r4),-68(r4)	;0xfdc4(r4), 0xffbc(r4)
    538e:	bc ff 
    5390:	94 44 c6 fd 	mov	-570(r4),-66(r4)	;0xfdc6(r4), 0xffbe(r4)
    5394:	be ff 
    5396:	94 44 c8 fd 	mov	-568(r4),-64(r4)	;0xfdc8(r4), 0xffc0(r4)
    539a:	c0 ff 
    539c:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    53a0:	0f 5f       	rla	r15		
    53a2:	0f 5f       	rla	r15		
    53a4:	0f 5f       	rla	r15		
    53a6:	3f 50 8c 58 	add	#22668,	r15	;#0x588c
    53aa:	2c 4f       	mov	@r15,	r12	
    53ac:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    53b0:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    53b4:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    53b8:	1c f4 ba ff 	and	-70(r4),r12	;0xffba(r4)
    53bc:	1d f4 bc ff 	and	-68(r4),r13	;0xffbc(r4)
    53c0:	1e f4 be ff 	and	-66(r4),r14	;0xffbe(r4)
    53c4:	1f f4 c0 ff 	and	-64(r4),r15	;0xffc0(r4)
    53c8:	08 ec       	xor	r12,	r8	
    53ca:	09 ed       	xor	r13,	r9	
    53cc:	0a ee       	xor	r14,	r10	
    53ce:	0b ef       	xor	r15,	r11	
    53d0:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    53d4:	0f 5f       	rla	r15		
    53d6:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    53da:	0f 5f       	rla	r15		
    53dc:	0f 5f       	rla	r15		
    53de:	0f 5f       	rla	r15		
    53e0:	0f 5e       	add	r14,	r15	
    53e2:	2c 4f       	mov	@r15,	r12	
    53e4:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    53e8:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    53ec:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    53f0:	0c e8       	xor	r8,	r12	
    53f2:	0d e9       	xor	r9,	r13	
    53f4:	0e ea       	xor	r10,	r14	
    53f6:	0f eb       	xor	r11,	r15	
    53f8:	84 4c 3a fe 	mov	r12,	-454(r4);0xfe3a(r4)
    53fc:	84 4d 3c fe 	mov	r13,	-452(r4);0xfe3c(r4)
    5400:	84 4e 3e fe 	mov	r14,	-450(r4);0xfe3e(r4)
    5404:	84 4f 40 fe 	mov	r15,	-448(r4);0xfe40(r4)
    L2[Y1_64]   = fb_2 ^ L2[Y2_64]   ^ (L2[Y3_64] & L2[Y4_64])     ^ (L2[Y5_64] & L2[Y6_64])     ^ k[2*i+1];
    5408:	1c 44 1a ff 	mov	-230(r4),r12	;0xff1a(r4)
    540c:	1d 44 1c ff 	mov	-228(r4),r13	;0xff1c(r4)
    5410:	1e 44 1e ff 	mov	-226(r4),r14	;0xff1e(r4)
    5414:	1f 44 20 ff 	mov	-224(r4),r15	;0xff20(r4)
    5418:	08 4c       	mov	r12,	r8	
    541a:	09 4d       	mov	r13,	r9	
    541c:	0a 4e       	mov	r14,	r10	
    541e:	0b 4f       	mov	r15,	r11	
    5420:	18 e4 5a fd 	xor	-678(r4),r8	;0xfd5a(r4)
    5424:	19 e4 5c fd 	xor	-676(r4),r9	;0xfd5c(r4)
    5428:	1a e4 5e fd 	xor	-674(r4),r10	;0xfd5e(r4)
    542c:	1b e4 60 fd 	xor	-672(r4),r11	;0xfd60(r4)
    5430:	94 44 5a ff 	mov	-166(r4),-62(r4)	;0xff5a(r4), 0xffc2(r4)
    5434:	c2 ff 
    5436:	94 44 5c ff 	mov	-164(r4),-60(r4)	;0xff5c(r4), 0xffc4(r4)
    543a:	c4 ff 
    543c:	94 44 5e ff 	mov	-162(r4),-58(r4)	;0xff5e(r4), 0xffc6(r4)
    5440:	c6 ff 
    5442:	94 44 60 ff 	mov	-160(r4),-56(r4)	;0xff60(r4), 0xffc8(r4)
    5446:	c8 ff 
    5448:	1c 44 fa fe 	mov	-262(r4),r12	;0xfefa(r4)
    544c:	1d 44 fc fe 	mov	-260(r4),r13	;0xfefc(r4)
    5450:	1e 44 fe fe 	mov	-258(r4),r14	;0xfefe(r4)
    5454:	1f 44 00 ff 	mov	-256(r4),r15	;0xff00(r4)
    5458:	1c f4 c2 ff 	and	-62(r4),r12	;0xffc2(r4)
    545c:	1d f4 c4 ff 	and	-60(r4),r13	;0xffc4(r4)
    5460:	1e f4 c6 ff 	and	-58(r4),r14	;0xffc6(r4)
    5464:	1f f4 c8 ff 	and	-56(r4),r15	;0xffc8(r4)
    5468:	08 ec       	xor	r12,	r8	
    546a:	09 ed       	xor	r13,	r9	
    546c:	0a ee       	xor	r14,	r10	
    546e:	0b ef       	xor	r15,	r11	
    5470:	94 44 c2 fe 	mov	-318(r4),-54(r4)	;0xfec2(r4), 0xffca(r4)
    5474:	ca ff 
    5476:	94 44 c4 fe 	mov	-316(r4),-52(r4)	;0xfec4(r4), 0xffcc(r4)
    547a:	cc ff 
    547c:	94 44 c6 fe 	mov	-314(r4),-50(r4)	;0xfec6(r4), 0xffce(r4)
    5480:	ce ff 
    5482:	94 44 c8 fe 	mov	-312(r4),-48(r4)	;0xfec8(r4), 0xffd0(r4)
    5486:	d0 ff 
    5488:	1c 44 9a fe 	mov	-358(r4),r12	;0xfe9a(r4)
    548c:	1d 44 9c fe 	mov	-356(r4),r13	;0xfe9c(r4)
    5490:	1e 44 9e fe 	mov	-354(r4),r14	;0xfe9e(r4)
    5494:	1f 44 a0 fe 	mov	-352(r4),r15	;0xfea0(r4)
    5498:	1c f4 ca ff 	and	-54(r4),r12	;0xffca(r4)
    549c:	1d f4 cc ff 	and	-52(r4),r13	;0xffcc(r4)
    54a0:	1e f4 ce ff 	and	-50(r4),r14	;0xffce(r4)
    54a4:	1f f4 d0 ff 	and	-48(r4),r15	;0xffd0(r4)
    54a8:	08 ec       	xor	r12,	r8	
    54aa:	09 ed       	xor	r13,	r9	
    54ac:	0a ee       	xor	r14,	r10	
    54ae:	0b ef       	xor	r15,	r11	
    54b0:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    54b4:	0f 5f       	rla	r15		
    54b6:	1f 53       	inc	r15		
    54b8:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    54bc:	0f 5f       	rla	r15		
    54be:	0f 5f       	rla	r15		
    54c0:	0f 5f       	rla	r15		
    54c2:	0f 5e       	add	r14,	r15	
    54c4:	2c 4f       	mov	@r15,	r12	
    54c6:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    54ca:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    54ce:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    54d2:	0c e8       	xor	r8,	r12	
    54d4:	0d e9       	xor	r9,	r13	
    54d6:	0e ea       	xor	r10,	r14	
    54d8:	0f eb       	xor	r11,	r15	
    54da:	84 4c 82 ff 	mov	r12,	-126(r4);0xff82(r4)
    54de:	84 4d 84 ff 	mov	r13,	-124(r4);0xff84(r4)
    54e2:	84 4e 86 ff 	mov	r14,	-122(r4);0xff86(r4)
    54e6:	84 4f 88 ff 	mov	r15,	-120(r4);0xff88(r4)
    L2[Y1_64-1] = fb_1 ^ L2[Y2_64-1] ^ (L2[Y3_64-1] & L2[Y4_64-1]) ^ (L2[Y5_64-1] & L2[Y6_64-1]) ^ k[2*i+1];
    54ea:	1c 44 12 ff 	mov	-238(r4),r12	;0xff12(r4)
    54ee:	1d 44 14 ff 	mov	-236(r4),r13	;0xff14(r4)
    54f2:	1e 44 16 ff 	mov	-234(r4),r14	;0xff16(r4)
    54f6:	1f 44 18 ff 	mov	-232(r4),r15	;0xff18(r4)
    54fa:	08 4c       	mov	r12,	r8	
    54fc:	09 4d       	mov	r13,	r9	
    54fe:	0a 4e       	mov	r14,	r10	
    5500:	0b 4f       	mov	r15,	r11	
    5502:	18 e4 62 fd 	xor	-670(r4),r8	;0xfd62(r4)
    5506:	19 e4 64 fd 	xor	-668(r4),r9	;0xfd64(r4)
    550a:	1a e4 66 fd 	xor	-666(r4),r10	;0xfd66(r4)
    550e:	1b e4 68 fd 	xor	-664(r4),r11	;0xfd68(r4)
    5512:	94 44 52 ff 	mov	-174(r4),-46(r4)	;0xff52(r4), 0xffd2(r4)
    5516:	d2 ff 
    5518:	94 44 54 ff 	mov	-172(r4),-44(r4)	;0xff54(r4), 0xffd4(r4)
    551c:	d4 ff 
    551e:	94 44 56 ff 	mov	-170(r4),-42(r4)	;0xff56(r4), 0xffd6(r4)
    5522:	d6 ff 
    5524:	94 44 58 ff 	mov	-168(r4),-40(r4)	;0xff58(r4), 0xffd8(r4)
    5528:	d8 ff 
    552a:	1c 44 f2 fe 	mov	-270(r4),r12	;0xfef2(r4)
    552e:	1d 44 f4 fe 	mov	-268(r4),r13	;0xfef4(r4)
    5532:	1e 44 f6 fe 	mov	-266(r4),r14	;0xfef6(r4)
    5536:	1f 44 f8 fe 	mov	-264(r4),r15	;0xfef8(r4)
    553a:	1c f4 d2 ff 	and	-46(r4),r12	;0xffd2(r4)
    553e:	1d f4 d4 ff 	and	-44(r4),r13	;0xffd4(r4)
    5542:	1e f4 d6 ff 	and	-42(r4),r14	;0xffd6(r4)
    5546:	1f f4 d8 ff 	and	-40(r4),r15	;0xffd8(r4)
    554a:	08 ec       	xor	r12,	r8	
    554c:	09 ed       	xor	r13,	r9	
    554e:	0a ee       	xor	r14,	r10	
    5550:	0b ef       	xor	r15,	r11	
    5552:	94 44 ba fe 	mov	-326(r4),-38(r4)	;0xfeba(r4), 0xffda(r4)
    5556:	da ff 
    5558:	94 44 bc fe 	mov	-324(r4),-36(r4)	;0xfebc(r4), 0xffdc(r4)
    555c:	dc ff 
    555e:	94 44 be fe 	mov	-322(r4),-34(r4)	;0xfebe(r4), 0xffde(r4)
    5562:	de ff 
    5564:	94 44 c0 fe 	mov	-320(r4),-32(r4)	;0xfec0(r4), 0xffe0(r4)
    5568:	e0 ff 
    556a:	1c 44 92 fe 	mov	-366(r4),r12	;0xfe92(r4)
    556e:	1d 44 94 fe 	mov	-364(r4),r13	;0xfe94(r4)
    5572:	1e 44 96 fe 	mov	-362(r4),r14	;0xfe96(r4)
    5576:	1f 44 98 fe 	mov	-360(r4),r15	;0xfe98(r4)
    557a:	1c f4 da ff 	and	-38(r4),r12	;0xffda(r4)
    557e:	1d f4 dc ff 	and	-36(r4),r13	;0xffdc(r4)
    5582:	1e f4 de ff 	and	-34(r4),r14	;0xffde(r4)
    5586:	1f f4 e0 ff 	and	-32(r4),r15	;0xffe0(r4)
    558a:	08 ec       	xor	r12,	r8	
    558c:	09 ed       	xor	r13,	r9	
    558e:	0a ee       	xor	r14,	r10	
    5590:	0b ef       	xor	r15,	r11	
    5592:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    5596:	0f 5f       	rla	r15		
    5598:	1f 53       	inc	r15		
    559a:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    559e:	0f 5f       	rla	r15		
    55a0:	0f 5f       	rla	r15		
    55a2:	0f 5f       	rla	r15		
    55a4:	0f 5e       	add	r14,	r15	
    55a6:	2c 4f       	mov	@r15,	r12	
    55a8:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    55ac:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    55b0:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    55b4:	0c e8       	xor	r8,	r12	
    55b6:	0d e9       	xor	r9,	r13	
    55b8:	0e ea       	xor	r10,	r14	
    55ba:	0f eb       	xor	r11,	r15	
    55bc:	84 4c 7a ff 	mov	r12,	-134(r4);0xff7a(r4)
    55c0:	84 4d 7c ff 	mov	r13,	-132(r4);0xff7c(r4)
    55c4:	84 4e 7e ff 	mov	r14,	-130(r4);0xff7e(r4)
    55c8:	84 4f 80 ff 	mov	r15,	-128(r4);0xff80(r4)
    L2[Y1_64-2] = fb_0 ^ L2[Y2_64-2] ^ (L2[Y3_64-2] & L2[Y4_64-2]) ^ (L2[Y5_64-2] & L2[Y6_64-2]) ^ k[2*i+1];
    55cc:	1c 44 0a ff 	mov	-246(r4),r12	;0xff0a(r4)
    55d0:	1d 44 0c ff 	mov	-244(r4),r13	;0xff0c(r4)
    55d4:	1e 44 0e ff 	mov	-242(r4),r14	;0xff0e(r4)
    55d8:	1f 44 10 ff 	mov	-240(r4),r15	;0xff10(r4)
    55dc:	08 4c       	mov	r12,	r8	
    55de:	09 4d       	mov	r13,	r9	
    55e0:	0a 4e       	mov	r14,	r10	
    55e2:	0b 4f       	mov	r15,	r11	
    55e4:	18 e4 6a fd 	xor	-662(r4),r8	;0xfd6a(r4)
    55e8:	19 e4 6c fd 	xor	-660(r4),r9	;0xfd6c(r4)
    55ec:	1a e4 6e fd 	xor	-658(r4),r10	;0xfd6e(r4)
    55f0:	1b e4 70 fd 	xor	-656(r4),r11	;0xfd70(r4)
    55f4:	94 44 4a ff 	mov	-182(r4),-30(r4)	;0xff4a(r4), 0xffe2(r4)
    55f8:	e2 ff 
    55fa:	94 44 4c ff 	mov	-180(r4),-28(r4)	;0xff4c(r4), 0xffe4(r4)
    55fe:	e4 ff 
    5600:	94 44 4e ff 	mov	-178(r4),-26(r4)	;0xff4e(r4), 0xffe6(r4)
    5604:	e6 ff 
    5606:	94 44 50 ff 	mov	-176(r4),-24(r4)	;0xff50(r4), 0xffe8(r4)
    560a:	e8 ff 
    560c:	1c 44 ea fe 	mov	-278(r4),r12	;0xfeea(r4)
    5610:	1d 44 ec fe 	mov	-276(r4),r13	;0xfeec(r4)
    5614:	1e 44 ee fe 	mov	-274(r4),r14	;0xfeee(r4)
    5618:	1f 44 f0 fe 	mov	-272(r4),r15	;0xfef0(r4)
    561c:	1c f4 e2 ff 	and	-30(r4),r12	;0xffe2(r4)
    5620:	1d f4 e4 ff 	and	-28(r4),r13	;0xffe4(r4)
    5624:	1e f4 e6 ff 	and	-26(r4),r14	;0xffe6(r4)
    5628:	1f f4 e8 ff 	and	-24(r4),r15	;0xffe8(r4)
    562c:	08 ec       	xor	r12,	r8	
    562e:	09 ed       	xor	r13,	r9	
    5630:	0a ee       	xor	r14,	r10	
    5632:	0b ef       	xor	r15,	r11	
    5634:	94 44 b2 fe 	mov	-334(r4),-22(r4)	;0xfeb2(r4), 0xffea(r4)
    5638:	ea ff 
    563a:	94 44 b4 fe 	mov	-332(r4),-20(r4)	;0xfeb4(r4), 0xffec(r4)
    563e:	ec ff 
    5640:	94 44 b6 fe 	mov	-330(r4),-18(r4)	;0xfeb6(r4), 0xffee(r4)
    5644:	ee ff 
    5646:	94 44 b8 fe 	mov	-328(r4),-16(r4)	;0xfeb8(r4), 0xfff0(r4)
    564a:	f0 ff 
    564c:	1c 44 8a fe 	mov	-374(r4),r12	;0xfe8a(r4)
    5650:	1d 44 8c fe 	mov	-372(r4),r13	;0xfe8c(r4)
    5654:	1e 44 8e fe 	mov	-370(r4),r14	;0xfe8e(r4)
    5658:	1f 44 90 fe 	mov	-368(r4),r15	;0xfe90(r4)
    565c:	1c f4 ea ff 	and	-22(r4),r12	;0xffea(r4)
    5660:	1d f4 ec ff 	and	-20(r4),r13	;0xffec(r4)
    5664:	1e f4 ee ff 	and	-18(r4),r14	;0xffee(r4)
    5668:	1f f4 f0 ff 	and	-16(r4),r15	;0xfff0(r4)
    566c:	08 ec       	xor	r12,	r8	
    566e:	09 ed       	xor	r13,	r9	
    5670:	0a ee       	xor	r14,	r10	
    5672:	0b ef       	xor	r15,	r11	
    5674:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    5678:	0f 5f       	rla	r15		
    567a:	1f 53       	inc	r15		
    567c:	1e 44 58 fd 	mov	-680(r4),r14	;0xfd58(r4)
    5680:	0f 5f       	rla	r15		
    5682:	0f 5f       	rla	r15		
    5684:	0f 5f       	rla	r15		
    5686:	0f 5e       	add	r14,	r15	
    5688:	2c 4f       	mov	@r15,	r12	
    568a:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    568e:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    5692:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    5696:	0c e8       	xor	r8,	r12	
    5698:	0d e9       	xor	r9,	r13	
    569a:	0e ea       	xor	r10,	r14	
    569c:	0f eb       	xor	r11,	r15	
    569e:	84 4c 72 ff 	mov	r12,	-142(r4);0xff72(r4)
    56a2:	84 4d 74 ff 	mov	r13,	-140(r4);0xff74(r4)
    56a6:	84 4e 76 ff 	mov	r14,	-138(r4);0xff76(r4)
    56aa:	84 4f 78 ff 	mov	r15,	-136(r4);0xff78(r4)
  for(i=0;i<80;++i)
    k[i]=key[i];
  for(i=80;i<2*rounds;++i)
    k[i]=k[i-80] ^ k[i-61] ^ k[i-50] ^ k[i-13];

  for(i=rounds-1;i>=0;--i) {
    56ae:	b4 53 52 fd 	add	#-1,	-686(r4);r3 As==11, 0xfd52(r4)
    56b2:	84 93 52 fd 	tst	-686(r4)	;0xfd52(r4)
    56b6:	02 38       	jl	$+6      	;abs 0x56bc
    56b8:	30 40 f4 4f 	br	#0x4ff4	
    L2[Y1_64-1] = fb_1 ^ L2[Y2_64-1] ^ (L2[Y3_64-1] & L2[Y4_64-1]) ^ (L2[Y5_64-1] & L2[Y6_64-1]) ^ k[2*i+1];
    L2[Y1_64-2] = fb_0 ^ L2[Y2_64-2] ^ (L2[Y3_64-2] & L2[Y4_64-2]) ^ (L2[Y5_64-2] & L2[Y6_64-2]) ^ k[2*i+1];

  }
  
  for(i=0;i<39;++i) 
    56bc:	84 43 52 fd 	mov	#0,	-686(r4);r3 As==00, 0xfd52(r4)
    56c0:	24 3c       	jmp	$+74     	;abs 0x570a
    plain[i] = L2[i];
    56c2:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    56c6:	0f 5f       	rla	r15		
    56c8:	0f 5f       	rla	r15		
    56ca:	0f 5f       	rla	r15		
    56cc:	1b 44 8c ff 	mov	-116(r4),r11	;0xff8c(r4)
    56d0:	0b 5f       	add	r15,	r11	
    56d2:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    56d6:	0f 5f       	rla	r15		
    56d8:	0f 5f       	rla	r15		
    56da:	0f 5f       	rla	r15		
    56dc:	3e 40 52 fd 	mov	#-686,	r14	;#0xfd52
    56e0:	0e 54       	add	r4,	r14	
    56e2:	0f 5e       	add	r14,	r15	
    56e4:	3f 50 00 01 	add	#256,	r15	;#0x0100
    56e8:	2c 4f       	mov	@r15,	r12	
    56ea:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    56ee:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    56f2:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    56f6:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    56fa:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    56fe:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    5702:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)
    L2[Y1_64-1] = fb_1 ^ L2[Y2_64-1] ^ (L2[Y3_64-1] & L2[Y4_64-1]) ^ (L2[Y5_64-1] & L2[Y6_64-1]) ^ k[2*i+1];
    L2[Y1_64-2] = fb_0 ^ L2[Y2_64-2] ^ (L2[Y3_64-2] & L2[Y4_64-2]) ^ (L2[Y5_64-2] & L2[Y6_64-2]) ^ k[2*i+1];

  }
  
  for(i=0;i<39;++i) 
    5706:	94 53 52 fd 	inc	-686(r4)	;0xfd52(r4)
    570a:	b4 90 27 00 	cmp	#39,	-686(r4);#0x0027, 0xfd52(r4)
    570e:	52 fd 
    5710:	d8 3b       	jl	$-78     	;abs 0x56c2
    plain[i] = L2[i];
  for(i=0;i<25;++i) 
    5712:	84 43 52 fd 	mov	#0,	-686(r4);r3 As==00, 0xfd52(r4)
    5716:	26 3c       	jmp	$+78     	;abs 0x5764
    plain[i+39] = L1[i];
    5718:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    571c:	3f 50 27 00 	add	#39,	r15	;#0x0027
    5720:	0f 5f       	rla	r15		
    5722:	0f 5f       	rla	r15		
    5724:	0f 5f       	rla	r15		
    5726:	1b 44 8c ff 	mov	-116(r4),r11	;0xff8c(r4)
    572a:	0b 5f       	add	r15,	r11	
    572c:	1f 44 52 fd 	mov	-686(r4),r15	;0xfd52(r4)
    5730:	0f 5f       	rla	r15		
    5732:	0f 5f       	rla	r15		
    5734:	0f 5f       	rla	r15		
    5736:	3a 40 52 fd 	mov	#-686,	r10	;#0xfd52
    573a:	0a 54       	add	r4,	r10	
    573c:	0f 5a       	add	r10,	r15	
    573e:	3f 50 38 00 	add	#56,	r15	;#0x0038
    5742:	2c 4f       	mov	@r15,	r12	
    5744:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    5748:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    574c:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    5750:	8b 4c 00 00 	mov	r12,	0(r11)	;0x0000(r11)
    5754:	8b 4d 02 00 	mov	r13,	2(r11)	;0x0002(r11)
    5758:	8b 4e 04 00 	mov	r14,	4(r11)	;0x0004(r11)
    575c:	8b 4f 06 00 	mov	r15,	6(r11)	;0x0006(r11)

  }
  
  for(i=0;i<39;++i) 
    plain[i] = L2[i];
  for(i=0;i<25;++i) 
    5760:	94 53 52 fd 	inc	-686(r4)	;0xfd52(r4)
    5764:	b4 90 19 00 	cmp	#25,	-686(r4);#0x0019, 0xfd52(r4)
    5768:	52 fd 
    576a:	d6 3b       	jl	$-82     	;abs 0x5718
    576c:	01 46       	mov	r6,	r1	
    plain[i+39] = L1[i];

}
    576e:	01 47       	mov	r7,	r1	
    5770:	31 50 a0 02 	add	#672,	r1	;#0x02a0
    5774:	34 41       	pop	r4		
    5776:	36 41       	pop	r6		
    5778:	37 41       	pop	r7		
    577a:	38 41       	pop	r8		
    577c:	39 41       	pop	r9		
    577e:	3a 41       	pop	r10		
    5780:	3b 41       	pop	r11		
    5782:	30 41       	ret			

00005784 <delay>:
/**************************************************/
/********************* DELAY **********************/
/**************************************************/

void delay(unsigned int d) 
{
    5784:	04 12       	push	r4		
    5786:	04 41       	mov	r1,	r4	
    5788:	24 53       	incd	r4		
    578a:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    578e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    5792:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    5796:	0d 3c       	jmp	$+28     	;abs 0x57b2
    {
      for (i = 0; i<d; i++) 
    5798:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    579c:	04 3c       	jmp	$+10     	;abs 0x57a6
	{
	  nop();
    579e:	03 43       	nop			
	  nop();
    57a0:	03 43       	nop			
void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    {
      for (i = 0; i<d; i++) 
    57a2:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    57a6:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    57aa:	f8 ff 
    57ac:	f8 2b       	jnc	$-14     	;abs 0x579e
/**************************************************/

void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    57ae:	94 53 fa ff 	inc	-6(r4)		;0xfffa(r4)
    57b2:	b4 90 ff 00 	cmp	#255,	-6(r4)	;#0x00ff, 0xfffa(r4)
    57b6:	fa ff 
    57b8:	ef 2b       	jnc	$-32     	;abs 0x5798
	{
	  nop();
	  nop();
	}
    }
}
    57ba:	31 50 06 00 	add	#6,	r1	;#0x0006
    57be:	34 41       	pop	r4		
    57c0:	30 41       	ret			

000057c2 <uart1_init>:

#define UART1_BIT_RX (1 << UART1_PIN_RX)
#define UART1_BIT_TX (1 << UART1_PIN_TX)

int uart1_init()
{
    57c2:	04 12       	push	r4		
    57c4:	04 41       	mov	r1,	r4	
    57c6:	24 53       	incd	r4		

  WDTCTL = WDTPW + WDTHOLD;
    57c8:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    57cc:	20 01 

  P1IE   = 0x00;        // Interrupt enable
    57ce:	c2 43 25 00 	mov.b	#0,	&0x0025	;r3 As==00
  P2IE   = 0x00;        // 0:disable 1:enable
    57d2:	c2 43 2d 00 	mov.b	#0,	&0x002d	;r3 As==00

  //Init of MSP430 Usart1 pins
  P3SEL |= (UART1_BIT_RX | UART1_BIT_TX);
    57d6:	5f 42 1b 00 	mov.b	&0x001b,r15	
    57da:	7f d0 c0 ff 	bis.b	#-64,	r15	;#0xffc0
    57de:	c2 4f 1b 00 	mov.b	r15,	&0x001b	

  //Init of USART1 Module
  U1ME  |= UTXE1|URXE1;           //Enable USART1 transmiter and receiver (UART mode)
    57e2:	5f 42 05 00 	mov.b	&0x0005,r15	
    57e6:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    57ea:	c2 4f 05 00 	mov.b	r15,	&0x0005	
  
  U1CTL  = SWRST;                 //reset
    57ee:	d2 43 78 00 	mov.b	#1,	&0x0078	;r3 As==01
  U1CTL  = CHAR;                  //init & release reset
    57f2:	f2 40 10 00 	mov.b	#16,	&0x0078	;#0x0010
    57f6:	78 00 
  
  U1TCTL = SSEL1 | TXEPT;        //use SMCLK 
    57f8:	f2 40 21 00 	mov.b	#33,	&0x0079	;#0x0021
    57fc:	79 00 
  U1RCTL = 0;
    57fe:	c2 43 7a 00 	mov.b	#0,	&0x007a	;r3 As==00
  // 38400 @ SMCLK 1MHz
#define U1BR1_INIT        0
#define U1BR0_INIT        0x1B
#define U1MCTL_INIT       0x03
  
  U1BR1  = U1BR1_INIT;
    5802:	c2 43 7d 00 	mov.b	#0,	&0x007d	;r3 As==00
  U1BR0  = U1BR0_INIT;
    5806:	f2 40 1b 00 	mov.b	#27,	&0x007c	;#0x001b
    580a:	7c 00 
  U1MCTL = U1MCTL_INIT;
    580c:	f2 40 03 00 	mov.b	#3,	&0x007b	;#0x0003
    5810:	7b 00 

  delay(0x800);
    5812:	3f 40 00 08 	mov	#2048,	r15	;#0x0800
    5816:	b0 12 84 57 	call	#0x5784	
  return 0;
    581a:	0f 43       	clr	r15		
}
    581c:	34 41       	pop	r4		
    581e:	30 41       	ret			

00005820 <uart1_putchar>:

int uart1_putchar(int c)
{
    5820:	04 12       	push	r4		
    5822:	04 41       	mov	r1,	r4	
    5824:	24 53       	incd	r4		
    5826:	21 83       	decd	r1		
    5828:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  U1TXBUF = c;
    582c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5830:	4f 4f       	mov.b	r15,	r15	
    5832:	c2 4f 7f 00 	mov.b	r15,	&0x007f	
  while ((U1TCTL & TXEPT) != TXEPT);
    5836:	03 43       	nop			
    5838:	5f 42 79 00 	mov.b	&0x0079,r15	
    583c:	4f 4f       	mov.b	r15,	r15	
    583e:	1f f3       	and	#1,	r15	;r3 As==01
    5840:	0f 93       	tst	r15		
    5842:	fa 27       	jz	$-10     	;abs 0x5838
  return (unsigned char)c;
    5844:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5848:	4f 4f       	mov.b	r15,	r15	
    584a:	4f 4f       	mov.b	r15,	r15	
}
    584c:	21 53       	incd	r1		
    584e:	34 41       	pop	r4		
    5850:	30 41       	ret			

00005852 <putchar>:
/**************************************************/
/******************** PUT CHAR *********************/
/**************************************************/

int putchar(int c)
{
    5852:	04 12       	push	r4		
    5854:	04 41       	mov	r1,	r4	
    5856:	24 53       	incd	r4		
    5858:	21 83       	decd	r1		
    585a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  return uart1_putchar(c);
    585e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5862:	b0 12 20 58 	call	#0x5820	
}
    5866:	21 53       	incd	r1		
    5868:	34 41       	pop	r4		
    586a:	30 41       	ret			

0000586c <start_encrypt>:
/******************** END EXPE*********************/
/**************************************************/

void
start_encrypt()
{
    586c:	04 12       	push	r4		
    586e:	04 41       	mov	r1,	r4	
    5870:	24 53       	incd	r4		
  ;
}
    5872:	34 41       	pop	r4		
    5874:	30 41       	ret			

00005876 <start_decrypt>:
void
start_decrypt()
{
    5876:	04 12       	push	r4		
    5878:	04 41       	mov	r1,	r4	
    587a:	24 53       	incd	r4		
  ;
}
    587c:	34 41       	pop	r4		
    587e:	30 41       	ret			

00005880 <end_expe>:


void
end_expe()
{
    5880:	04 12       	push	r4		
    5882:	04 41       	mov	r1,	r4	
    5884:	24 53       	incd	r4		
  ;
}
    5886:	34 41       	pop	r4		
    5888:	30 41       	ret			

0000588a <_unexpected_>:
    588a:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 41     .A.A.A.A.A.A.A.A
    fff0:	00 41 00 41 00 41 00 41 00 41 00 41 00 41 00 40     .A.A.A.A.A.A.A.@
