
present.elf:     file format elf32-msp430

SYMBOL TABLE:
00004000 l    d  .text	00000000 .text
000052f4 l    d  .rodata	00000000 .rodata
00001100 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 present_size.c
000040b0 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 tools.c
000052ba g     F .text	0000001a putchar
00000057 g       *ABS*	00000000 __BCSCTL1
0000005a g       *ABS*	00000000 __CACTL2
00000174 g       *ABS*	00000000 __TACCR1
00005314 g     O .rodata	00000010 decBox3
00000084 g       *ABS*	00000000 __ADC12MCTL4
00000000 g       *ABS*	00000000 __data_size
0000015a g       *ABS*	00000000 __ADC12MEM13
00000052 g       *ABS*	00000000 __I2CNDAT
000040b0  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00000024 g       *ABS*	00000000 __P1IES
0000007b g       *ABS*	00000000 __U1MCTL
000001f6 g       *ABS*	00000000 __DMA2SZ
000040b0  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
000052f4 g     O .rodata	00000020 sBox4
00000076 g       *ABS*	00000000 __I2CDRW
000048d8 g     F .text	00000914 Decrypt
0000007e g       *ABS*	00000000 __U1RXBUF
00000138 g       *ABS*	00000000 __OP2
00000076 g       *ABS*	00000000 __U0RXBUF
000001a4 g       *ABS*	00000000 __ADC12IFG
0000012e g       *ABS*	00000000 __TAIV
000001e6 g       *ABS*	00000000 __DMA0SZ
00000000 g       .vectors	00000000 _efartext
0000007c g       *ABS*	00000000 __U1BR0
00000130 g       *ABS*	00000000 __MPY
00000001 g       *ABS*	00000000 __IE2
0000013a g       *ABS*	00000000 __RESLO
00000136 g       *ABS*	00000000 __MACS
00000087 g       *ABS*	00000000 __ADC12MCTL7
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
00005344 g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
0000001d g       *ABS*	00000000 __P4OUT
000001f4 g       *ABS*	00000000 __DMA2DA
00000000 g       *ABS*	00000000 __bss_size
00000081 g       *ABS*	00000000 __ADC12MCTL1
0000522a g     F .text	0000005e uart1_init
00000152 g       *ABS*	00000000 __ADC12MEM9
00004000  w      .text	00000000 __watchdog_support
000040aa  w      .text	00000000 __stop_progExec__
00000050 g       *ABS*	00000000 __I2CIE
0000002d g       *ABS*	00000000 __P2IE
000001e4 g       *ABS*	00000000 __DMA0DA
00000192 g       *ABS*	00000000 __TBCCR0
000040b0  w      .text	00000000 __isr_11
00000186 g       *ABS*	00000000 __TBCCTL2
000052e8 g     F .text	0000000a end_expe
00000025 g       *ABS*	00000000 __P1IE
000001a0 g       *ABS*	00000000 __ADC12CTL0
00000072 g       *ABS*	00000000 __I2CDCTL
00000073 g       *ABS*	00000000 __U0MCTL
0000007a g       *ABS*	00000000 __U1RCTL
00000082 g       *ABS*	00000000 __ADC12MCTL2
0000019c g       *ABS*	00000000 __TBCCR5
00000035 g       *ABS*	00000000 __P6OUT
00000034 g       *ABS*	00000000 __P6IN
000001c8 g       *ABS*	00000000 __DAC12_0DAT
00000182 g       *ABS*	00000000 __TBCCTL0
0000019e g       *ABS*	00000000 __TBCCR6
000040b0  w      .text	00000000 __isr_5
00005324 g     O .rodata	00000020 invsBox4
00005344 g       *ABS*	00000000 __data_load_start
000040b0 g       .text	00000000 __dtors_end
000001ea g       *ABS*	00000000 __DMA1SA
00000088 g       *ABS*	00000000 __ADC12MCTL8
00000166 g       *ABS*	00000000 __TACCTL2
000001f0 g       *ABS*	00000000 __DMA2CTL
000040b0  w      .text	00000000 __isr_2
00000156 g       *ABS*	00000000 __ADC12MEM11
00000160 g       *ABS*	00000000 __TACTL
00000158 g       *ABS*	00000000 __ADC12MEM12
00000071 g       *ABS*	00000000 __I2CTCTL
0000012c g       *ABS*	00000000 __FCTL3
000040b0  w      .text	00000000 __isr_10
00000148 g       *ABS*	00000000 __ADC12MEM4
0000011a g       *ABS*	00000000 __I2CSA
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
0000008d g       *ABS*	00000000 __ADC12MCTL13
0000014c g       *ABS*	00000000 __ADC12MEM6
00000023 g       *ABS*	00000000 __P1IFG
0000013c g       *ABS*	00000000 __RESHI
00000072 g       *ABS*	00000000 __U0RCTL
00000172 g       *ABS*	00000000 __TACCR0
00000071 g       *ABS*	00000000 __U0TCTL
00000056 g       *ABS*	00000000 __DCOCTL
00000085 g       *ABS*	00000000 __ADC12MCTL5
00000003 g       *ABS*	00000000 __IFG2
00000005 g       *ABS*	00000000 __ME2
00001100 g     O .noinit	00000002 __wdt_clear_value
00000079 g       *ABS*	00000000 __U1TCTL
0000001b g       *ABS*	00000000 __P3SEL
000001e0 g       *ABS*	00000000 __DMA0CTL
000040b0  w      .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
00000028 g       *ABS*	00000000 __P2IN
0000014e g       *ABS*	00000000 __ADC12MEM7
00000184 g       *ABS*	00000000 __TBCCTL1
0000005b g       *ABS*	00000000 __CAPD
00000075 g       *ABS*	00000000 __I2CSCLL
000040b0  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00004028  w      .text	00000000 __do_clear_bss
0000008f g       *ABS*	00000000 __ADC12MCTL15
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
0000015c g       *ABS*	00000000 __ADC12MEM14
00000026 g       *ABS*	00000000 __P1SEL
00000198 g       *ABS*	00000000 __TBCCR3
00000080 g       *ABS*	00000000 __ADC12MCTL0
00000140 g       *ABS*	00000000 __ADC12MEM0
00000074 g       *ABS*	00000000 __U0BR0
00000051 g       *ABS*	00000000 __I2CIFG
000052f2  w      .text	00000000 _unexpected_
000040b0  w      .text	00000000 __isr_8
0000014a g       *ABS*	00000000 __ADC12MEM5
00000070 g       *ABS*	00000000 __U0CTL
0000018a g       *ABS*	00000000 __TBCCTL4
00000073 g       *ABS*	00000000 __I2CPSC
0000008e g       *ABS*	00000000 __ADC12MCTL14
000040b0  w      .text	00000000 __isr_3
000001a6 g       *ABS*	00000000 __ADC12IE
00005288 g     F .text	00000032 uart1_putchar
00000144 g       *ABS*	00000000 __ADC12MEM2
000001ee g       *ABS*	00000000 __DMA1SZ
00000033 g       *ABS*	00000000 __P5SEL
00000030 g       *ABS*	00000000 __P5IN
00004000  w      .text	00000000 _reset_vector__
000040b0 g       .text	00000000 __ctors_start
000040b0  w      .text	00000000 __isr_12
00000036 g       *ABS*	00000000 __P6DIR
00000018 g       *ABS*	00000000 __P3IN
00004010  w      .text	00000000 __do_copy_data
00000150 g       *ABS*	00000000 __ADC12MEM8
00000142 g       *ABS*	00000000 __ADC12MEM1
00001100 g       .rodata	00000000 __bss_start
0000007d g       *ABS*	00000000 __U1BR1
0000403e g     F .text	0000006c main
00000176 g       *ABS*	00000000 __TACCR2
0000019a g       *ABS*	00000000 __TBCCR4
000040b0  w      .text	00000000 __isr_13
00000078 g       *ABS*	00000000 __U1CTL
000001e2 g       *ABS*	00000000 __DMA0SA
00000170 g       *ABS*	00000000 __TAR
00000124 g       *ABS*	00000000 __DMACTL1
0000001e g       *ABS*	00000000 __P4DIR
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
00000154 g       *ABS*	00000000 __ADC12MEM10
000001f2 g       *ABS*	00000000 __DMA2SA
0000002a g       *ABS*	00000000 __P2DIR
00000089 g       *ABS*	00000000 __ADC12MCTL9
0000008a g       *ABS*	00000000 __ADC12MCTL10
000051ec g     F .text	0000003e delay
00000032 g       *ABS*	00000000 __P5DIR
000001c2 g       *ABS*	00000000 __DAC12_1CTL
000001a2 g       *ABS*	00000000 __ADC12CTL1
000001a8 g       *ABS*	00000000 __ADC12IV
000001e8 g       *ABS*	00000000 __DMA1CTL
00000075 g       *ABS*	00000000 __U0BR1
000040b0  w      .text	00000000 __isr_9
0000018c g       *ABS*	00000000 __TBCCTL5
0000400c  w      .text	00000000 __init_stack
00000086 g       *ABS*	00000000 __ADC12MCTL6
00000188 g       *ABS*	00000000 __TBCCTL3
00000019 g       *ABS*	00000000 __P3OUT
000001ca g       *ABS*	00000000 __DAC12_1DAT
000040b0 g       .text	00000000 __dtors_start
000040b0  w      .text	00000000 __isr_6
000040b0 g       .text	00000000 __ctors_end
00000132 g       *ABS*	00000000 __MPYS
0000011c g       *ABS*	00000000 __I2CIV
00000004 g       *ABS*	00000000 __ME1
00003900 g       *ABS*	00000000 __stack
00000037 g       *ABS*	00000000 __P6SEL
000040b0  w      .text	00000000 __isr_1
0000008c g       *ABS*	00000000 __ADC12MCTL12
00001100 g       .rodata	00000000 _edata
00000077 g       *ABS*	00000000 __U0TXBUF
00001102 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
0000011e g       *ABS*	00000000 __TBIV
000001c0 g       *ABS*	00000000 __DAC12_0CTL
000052d4 g     F .text	0000000a start_encrypt
0000015e g       *ABS*	00000000 __ADC12MEM15
00000134 g       *ABS*	00000000 __MAC
00000058 g       *ABS*	00000000 __BCSCTL2
000040aa  w      .text	00000000 _endless_loop__
00000122 g       *ABS*	00000000 __DMACTL0
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
00000146 g       *ABS*	00000000 __ADC12MEM3
00000076 g       *ABS*	00000000 __I2CDRB
00000118 g       *ABS*	00000000 __I2COA
00000164 g       *ABS*	00000000 __TACCTL1
0000007f g       *ABS*	00000000 __U1TXBUF
00000055 g       *ABS*	00000000 __SVSCTL
00004010  w      .text	00000000 __low_level_init
000052de g     F .text	0000000a start_decrypt
00001100 g       .rodata	00000000 __data_start
0000018e g       *ABS*	00000000 __TBCCTL6
00000074 g       *ABS*	00000000 __I2CSCLH
000001ec g       *ABS*	00000000 __DMA1DA
00000120 g       *ABS*	00000000 __WDTCTL
00000083 g       *ABS*	00000000 __ADC12MCTL3
00000000 g       *ABS*	00000000 __IE1
00000059 g       *ABS*	00000000 __CACTL1
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
000040b4 g     F .text	00000824 Encrypt
0000008b g       *ABS*	00000000 __ADC12MCTL11
0000013e g       *ABS*	00000000 __SUMEXT
00000031 g       *ABS*	00000000 __P5OUT



Disassembly of section .text:

00004000 <__watchdog_support>:
    4000:	55 42 20 01 	mov.b	&0x0120,r5	
    4004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    4008:	82 45 00 11 	mov	r5,	&0x1100	

0000400c <__init_stack>:
    400c:	31 40 00 39 	mov	#14592,	r1	;#0x3900

00004010 <__do_copy_data>:
    4010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    4014:	0f 93       	tst	r15		
    4016:	08 24       	jz	$+18     	;abs 0x4028
    4018:	92 42 00 11 	mov	&0x1100,&0x0120	
    401c:	20 01 
    401e:	2f 83       	decd	r15		
    4020:	9f 4f 44 53 	mov	21316(r15),4352(r15);0x5344(r15), 0x1100(r15)
    4024:	00 11 
    4026:	f8 23       	jnz	$-14     	;abs 0x4018

00004028 <__do_clear_bss>:
    4028:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    402c:	0f 93       	tst	r15		
    402e:	07 24       	jz	$+16     	;abs 0x403e
    4030:	92 42 00 11 	mov	&0x1100,&0x0120	
    4034:	20 01 
    4036:	1f 83       	dec	r15		
    4038:	cf 43 00 11 	mov.b	#0,	4352(r15);r3 As==00, 0x1100(r15)
    403c:	f9 23       	jnz	$-12     	;abs 0x4030

0000403e <main>:
}



int main(void)
{
    403e:	04 41       	mov	r1,	r4	
    4040:	24 53       	incd	r4		
    4042:	31 50 ee ff 	add	#-18,	r1	;#0xffee
	#ifdef PRINT
	uart1_init();
#endif
// Input values
	u16 key[5]={0x780,0x0890,0xa120,0x0140,0x0000};
    4046:	b4 40 80 07 	mov	#1920,	-20(r4)	;#0x0780, 0xffec(r4)
    404a:	ec ff 
    404c:	b4 40 90 08 	mov	#2192,	-18(r4)	;#0x0890, 0xffee(r4)
    4050:	ee ff 
    4052:	b4 40 20 a1 	mov	#-24288,-16(r4)	;#0xa120, 0xfff0(r4)
    4056:	f0 ff 
    4058:	b4 40 40 01 	mov	#320,	-14(r4)	;#0x0140, 0xfff2(r4)
    405c:	f2 ff 
    405e:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
	u16 state[4]={0x8700,0x0104,0x4567,0xffff};
    4062:	b4 40 00 87 	mov	#-30976,-10(r4)	;#0x8700, 0xfff6(r4)
    4066:	f6 ff 
    4068:	b4 40 04 01 	mov	#260,	-8(r4)	;#0x0104, 0xfff8(r4)
    406c:	f8 ff 
    406e:	b4 40 67 45 	mov	#17767,	-6(r4)	;#0x4567, 0xfffa(r4)
    4072:	fa ff 
    4074:	b4 43 fc ff 	mov	#-1,	-4(r4)	;r3 As==11, 0xfffc(r4)
	START_ENCRYPT();
    4078:	b0 12 d4 52 	call	#0x52d4	
	Encrypt(state,key);
    407c:	0f 44       	mov	r4,	r15	
    407e:	3f 50 f6 ff 	add	#-10,	r15	;#0xfff6
    4082:	0e 44       	mov	r4,	r14	
    4084:	3e 50 ec ff 	add	#-20,	r14	;#0xffec
    4088:	b0 12 b4 40 	call	#0x40b4	
	START_DECRYPT();
    408c:	b0 12 de 52 	call	#0x52de	
	Decrypt(state,key);
    4090:	0f 44       	mov	r4,	r15	
    4092:	3f 50 f6 ff 	add	#-10,	r15	;#0xfff6
    4096:	0e 44       	mov	r4,	r14	
    4098:	3e 50 ec ff 	add	#-20,	r14	;#0xffec
    409c:	b0 12 d8 48 	call	#0x48d8	
	
#ifdef PRINT
	ps(state);
	printf("\nFIN\n");
#endif
	END_EXPE();
    40a0:	b0 12 e8 52 	call	#0x52e8	

	return 0;
    40a4:	0f 43       	clr	r15		
}
    40a6:	31 50 12 00 	add	#18,	r1	;#0x0012

000040aa <__stop_progExec__>:
    40aa:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    40ae:	fd 3f       	jmp	$-4      	;abs 0x40aa

000040b0 <__ctors_end>:
    40b0:	30 40 f2 52 	br	#0x52f2	

000040b4 <Encrypt>:
		return;
}
#endif

 void Encrypt(u16 *state, u16 *aKey)
{	
    40b4:	04 12       	push	r4		
    40b6:	04 41       	mov	r1,	r4	
    40b8:	24 53       	incd	r4		
    40ba:	31 50 e0 ff 	add	#-32,	r1	;#0xffe0
    40be:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    40c2:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)

// counter
	u16 round=1;
    40c6:	94 43 de ff 	mov	#1,	-34(r4)	;r3 As==01, 0xffde(r4)
// Variables pLayer
	u16 temp_0;
	u16 temp_1;
	u16 temp_2;
	u16 temp_3;
	u16 j=1;
    40ca:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8(r4)
	s16 position;
	s16 reste;
	u16 key[5];

	key[4] = aKey[4];
    40ce:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40d2:	1f 4f 08 00 	mov	8(r15),	r15	;0x0008(r15)
    40d6:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
	key[3] = aKey[3];
    40da:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40de:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    40e2:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
	key[2] = aKey[2];
    40e6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40ea:	1f 4f 04 00 	mov	4(r15),	r15	;0x0004(r15)
    40ee:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
	key[1] = aKey[1];
    40f2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40f6:	1f 4f 02 00 	mov	2(r15),	r15	;0x0002(r15)
    40fa:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
	key[0] = aKey[0];
    40fe:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4102:	2f 4f       	mov	@r15,	r15	
    4104:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
	for(round=1;round<32;round++)
    4108:	94 43 de ff 	mov	#1,	-34(r4)	;r3 As==01, 0xffde(r4)
    410c:	30 40 64 48 	br	#0x4864	
	{
//	****************** addRoundkey *************************
		state[3] ^= key[4];
    4110:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4114:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4118:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    411c:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4120:	2d 4e       	mov	@r14,	r13	
    4122:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    4126:	0e ed       	xor	r13,	r14	
    4128:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[2] ^= key[3];
    412c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4130:	2f 52       	add	#4,	r15	;r2 As==10
    4132:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4136:	2e 52       	add	#4,	r14	;r2 As==10
    4138:	2d 4e       	mov	@r14,	r13	
    413a:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    413e:	0e ed       	xor	r13,	r14	
    4140:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[1] ^= key[2];
    4144:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4148:	2f 53       	incd	r15		
    414a:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    414e:	2e 53       	incd	r14		
    4150:	2d 4e       	mov	@r14,	r13	
    4152:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfff4(r4)
    4156:	0e ed       	xor	r13,	r14	
    4158:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[0] ^= key[1];
    415c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4160:	2e 4f       	mov	@r15,	r14	
    4162:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    4166:	0e ef       	xor	r15,	r14	
    4168:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    416c:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
//	****************** addRoundkey End *********************
//	******************* sBox *******************************
        temp=0;
    4170:	84 43 ec ff 	mov	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
        temp |= (u16)(sBox4[(state[0]&0xF)]);
    4174:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4178:	2f 4f       	mov	@r15,	r15	
    417a:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    417e:	0f 5f       	rla	r15		
    4180:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4184:	2f 4f       	mov	@r15,	r15	
    4186:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[0]>>=4)&0xF]<<4);
    418a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    418e:	2f 4f       	mov	@r15,	r15	
    4190:	12 c3       	clrc			
    4192:	0f 10       	rrc	r15		
    4194:	12 c3       	clrc			
    4196:	0f 10       	rrc	r15		
    4198:	12 c3       	clrc			
    419a:	0f 10       	rrc	r15		
    419c:	12 c3       	clrc			
    419e:	0f 10       	rrc	r15		
    41a0:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    41a4:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    41a8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    41ac:	2f 4f       	mov	@r15,	r15	
    41ae:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    41b2:	0f 5f       	rla	r15		
    41b4:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    41b8:	2f 4f       	mov	@r15,	r15	
    41ba:	0f 5f       	rla	r15		
    41bc:	0f 5f       	rla	r15		
    41be:	0f 5f       	rla	r15		
    41c0:	0f 5f       	rla	r15		
    41c2:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[0]>>=4)&0xF]<<8);
    41c6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    41ca:	2f 4f       	mov	@r15,	r15	
    41cc:	12 c3       	clrc			
    41ce:	0f 10       	rrc	r15		
    41d0:	12 c3       	clrc			
    41d2:	0f 10       	rrc	r15		
    41d4:	12 c3       	clrc			
    41d6:	0f 10       	rrc	r15		
    41d8:	12 c3       	clrc			
    41da:	0f 10       	rrc	r15		
    41dc:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    41e0:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    41e4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    41e8:	2f 4f       	mov	@r15,	r15	
    41ea:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    41ee:	0f 5f       	rla	r15		
    41f0:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    41f4:	2f 4f       	mov	@r15,	r15	
    41f6:	4f 4f       	mov.b	r15,	r15	
    41f8:	8f 10       	swpb	r15		
    41fa:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[0]>>=4)&0xF]<<12);
    41fe:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4202:	2f 4f       	mov	@r15,	r15	
    4204:	12 c3       	clrc			
    4206:	0f 10       	rrc	r15		
    4208:	12 c3       	clrc			
    420a:	0f 10       	rrc	r15		
    420c:	12 c3       	clrc			
    420e:	0f 10       	rrc	r15		
    4210:	12 c3       	clrc			
    4212:	0f 10       	rrc	r15		
    4214:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4218:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    421c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4220:	2f 4f       	mov	@r15,	r15	
    4222:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4226:	0f 5f       	rla	r15		
    4228:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    422c:	2f 4f       	mov	@r15,	r15	
    422e:	4f 4f       	mov.b	r15,	r15	
    4230:	8f 10       	swpb	r15		
    4232:	0f 5f       	rla	r15		
    4234:	0f 5f       	rla	r15		
    4236:	0f 5f       	rla	r15		
    4238:	0f 5f       	rla	r15		
    423a:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		state[0]=temp;
    423e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4242:	9f 44 ec ff 	mov	-20(r4),0(r15)	;0xffec(r4), 0x0000(r15)
    4246:	00 00 
		
        temp=0;
    4248:	84 43 ec ff 	mov	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
        temp |= (u16)(sBox4[(state[1]&0xF)]);
    424c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4250:	2f 53       	incd	r15		
    4252:	2f 4f       	mov	@r15,	r15	
    4254:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4258:	0f 5f       	rla	r15		
    425a:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    425e:	2f 4f       	mov	@r15,	r15	
    4260:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[1]>>=4)&0xF]<<4);
    4264:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4268:	2e 53       	incd	r14		
    426a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    426e:	2f 53       	incd	r15		
    4270:	2f 4f       	mov	@r15,	r15	
    4272:	12 c3       	clrc			
    4274:	0f 10       	rrc	r15		
    4276:	12 c3       	clrc			
    4278:	0f 10       	rrc	r15		
    427a:	12 c3       	clrc			
    427c:	0f 10       	rrc	r15		
    427e:	12 c3       	clrc			
    4280:	0f 10       	rrc	r15		
    4282:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4286:	2f 4e       	mov	@r14,	r15	
    4288:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    428c:	0f 5f       	rla	r15		
    428e:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4292:	2f 4f       	mov	@r15,	r15	
    4294:	0f 5f       	rla	r15		
    4296:	0f 5f       	rla	r15		
    4298:	0f 5f       	rla	r15		
    429a:	0f 5f       	rla	r15		
    429c:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[1]>>=4)&0xF]<<8);
    42a0:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    42a4:	2e 53       	incd	r14		
    42a6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    42aa:	2f 53       	incd	r15		
    42ac:	2f 4f       	mov	@r15,	r15	
    42ae:	12 c3       	clrc			
    42b0:	0f 10       	rrc	r15		
    42b2:	12 c3       	clrc			
    42b4:	0f 10       	rrc	r15		
    42b6:	12 c3       	clrc			
    42b8:	0f 10       	rrc	r15		
    42ba:	12 c3       	clrc			
    42bc:	0f 10       	rrc	r15		
    42be:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    42c2:	2f 4e       	mov	@r14,	r15	
    42c4:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    42c8:	0f 5f       	rla	r15		
    42ca:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    42ce:	2f 4f       	mov	@r15,	r15	
    42d0:	4f 4f       	mov.b	r15,	r15	
    42d2:	8f 10       	swpb	r15		
    42d4:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[1]>>=4)&0xF]<<12);
    42d8:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    42dc:	2e 53       	incd	r14		
    42de:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    42e2:	2f 53       	incd	r15		
    42e4:	2f 4f       	mov	@r15,	r15	
    42e6:	12 c3       	clrc			
    42e8:	0f 10       	rrc	r15		
    42ea:	12 c3       	clrc			
    42ec:	0f 10       	rrc	r15		
    42ee:	12 c3       	clrc			
    42f0:	0f 10       	rrc	r15		
    42f2:	12 c3       	clrc			
    42f4:	0f 10       	rrc	r15		
    42f6:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    42fa:	2f 4e       	mov	@r14,	r15	
    42fc:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4300:	0f 5f       	rla	r15		
    4302:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4306:	2f 4f       	mov	@r15,	r15	
    4308:	4f 4f       	mov.b	r15,	r15	
    430a:	8f 10       	swpb	r15		
    430c:	0f 5f       	rla	r15		
    430e:	0f 5f       	rla	r15		
    4310:	0f 5f       	rla	r15		
    4312:	0f 5f       	rla	r15		
    4314:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		state[1]=temp;
    4318:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    431c:	2f 53       	incd	r15		
    431e:	9f 44 ec ff 	mov	-20(r4),0(r15)	;0xffec(r4), 0x0000(r15)
    4322:	00 00 
		
		temp=0;
    4324:	84 43 ec ff 	mov	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
        temp |= (u16)(sBox4[(state[2]&0xF)]);
    4328:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    432c:	2f 52       	add	#4,	r15	;r2 As==10
    432e:	2f 4f       	mov	@r15,	r15	
    4330:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4334:	0f 5f       	rla	r15		
    4336:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    433a:	2f 4f       	mov	@r15,	r15	
    433c:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[2]>>=4)&0xF]<<4);
    4340:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4344:	2e 52       	add	#4,	r14	;r2 As==10
    4346:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    434a:	2f 52       	add	#4,	r15	;r2 As==10
    434c:	2f 4f       	mov	@r15,	r15	
    434e:	12 c3       	clrc			
    4350:	0f 10       	rrc	r15		
    4352:	12 c3       	clrc			
    4354:	0f 10       	rrc	r15		
    4356:	12 c3       	clrc			
    4358:	0f 10       	rrc	r15		
    435a:	12 c3       	clrc			
    435c:	0f 10       	rrc	r15		
    435e:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4362:	2f 4e       	mov	@r14,	r15	
    4364:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4368:	0f 5f       	rla	r15		
    436a:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    436e:	2f 4f       	mov	@r15,	r15	
    4370:	0f 5f       	rla	r15		
    4372:	0f 5f       	rla	r15		
    4374:	0f 5f       	rla	r15		
    4376:	0f 5f       	rla	r15		
    4378:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[2]>>=4)&0xF]<<8);
    437c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4380:	2e 52       	add	#4,	r14	;r2 As==10
    4382:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4386:	2f 52       	add	#4,	r15	;r2 As==10
    4388:	2f 4f       	mov	@r15,	r15	
    438a:	12 c3       	clrc			
    438c:	0f 10       	rrc	r15		
    438e:	12 c3       	clrc			
    4390:	0f 10       	rrc	r15		
    4392:	12 c3       	clrc			
    4394:	0f 10       	rrc	r15		
    4396:	12 c3       	clrc			
    4398:	0f 10       	rrc	r15		
    439a:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    439e:	2f 4e       	mov	@r14,	r15	
    43a0:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    43a4:	0f 5f       	rla	r15		
    43a6:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    43aa:	2f 4f       	mov	@r15,	r15	
    43ac:	4f 4f       	mov.b	r15,	r15	
    43ae:	8f 10       	swpb	r15		
    43b0:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[2]>>=4)&0xF]<<12);
    43b4:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    43b8:	2e 52       	add	#4,	r14	;r2 As==10
    43ba:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43be:	2f 52       	add	#4,	r15	;r2 As==10
    43c0:	2f 4f       	mov	@r15,	r15	
    43c2:	12 c3       	clrc			
    43c4:	0f 10       	rrc	r15		
    43c6:	12 c3       	clrc			
    43c8:	0f 10       	rrc	r15		
    43ca:	12 c3       	clrc			
    43cc:	0f 10       	rrc	r15		
    43ce:	12 c3       	clrc			
    43d0:	0f 10       	rrc	r15		
    43d2:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    43d6:	2f 4e       	mov	@r14,	r15	
    43d8:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    43dc:	0f 5f       	rla	r15		
    43de:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    43e2:	2f 4f       	mov	@r15,	r15	
    43e4:	4f 4f       	mov.b	r15,	r15	
    43e6:	8f 10       	swpb	r15		
    43e8:	0f 5f       	rla	r15		
    43ea:	0f 5f       	rla	r15		
    43ec:	0f 5f       	rla	r15		
    43ee:	0f 5f       	rla	r15		
    43f0:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		state[2]=temp;
    43f4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43f8:	2f 52       	add	#4,	r15	;r2 As==10
    43fa:	9f 44 ec ff 	mov	-20(r4),0(r15)	;0xffec(r4), 0x0000(r15)
    43fe:	00 00 
		
		temp=0;
    4400:	84 43 ec ff 	mov	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
        temp |= (u16)(sBox4[(state[3]&0xF)]);
    4404:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4408:	3f 50 06 00 	add	#6,	r15	;#0x0006
    440c:	2f 4f       	mov	@r15,	r15	
    440e:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4412:	0f 5f       	rla	r15		
    4414:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4418:	2f 4f       	mov	@r15,	r15	
    441a:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[3]>>=4)&0xF]<<4);
    441e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4422:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4426:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    442a:	3f 50 06 00 	add	#6,	r15	;#0x0006
    442e:	2f 4f       	mov	@r15,	r15	
    4430:	12 c3       	clrc			
    4432:	0f 10       	rrc	r15		
    4434:	12 c3       	clrc			
    4436:	0f 10       	rrc	r15		
    4438:	12 c3       	clrc			
    443a:	0f 10       	rrc	r15		
    443c:	12 c3       	clrc			
    443e:	0f 10       	rrc	r15		
    4440:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4444:	2f 4e       	mov	@r14,	r15	
    4446:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    444a:	0f 5f       	rla	r15		
    444c:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4450:	2f 4f       	mov	@r15,	r15	
    4452:	0f 5f       	rla	r15		
    4454:	0f 5f       	rla	r15		
    4456:	0f 5f       	rla	r15		
    4458:	0f 5f       	rla	r15		
    445a:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[3]>>=4)&0xF]<<8);
    445e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4462:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4466:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    446a:	3f 50 06 00 	add	#6,	r15	;#0x0006
    446e:	2f 4f       	mov	@r15,	r15	
    4470:	12 c3       	clrc			
    4472:	0f 10       	rrc	r15		
    4474:	12 c3       	clrc			
    4476:	0f 10       	rrc	r15		
    4478:	12 c3       	clrc			
    447a:	0f 10       	rrc	r15		
    447c:	12 c3       	clrc			
    447e:	0f 10       	rrc	r15		
    4480:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4484:	2f 4e       	mov	@r14,	r15	
    4486:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    448a:	0f 5f       	rla	r15		
    448c:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4490:	2f 4f       	mov	@r15,	r15	
    4492:	4f 4f       	mov.b	r15,	r15	
    4494:	8f 10       	swpb	r15		
    4496:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		temp |= (u16)(sBox4[(state[3]>>=4)&0xF]<<12);
    449a:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    449e:	3e 50 06 00 	add	#6,	r14	;#0x0006
    44a2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    44a6:	3f 50 06 00 	add	#6,	r15	;#0x0006
    44aa:	2f 4f       	mov	@r15,	r15	
    44ac:	12 c3       	clrc			
    44ae:	0f 10       	rrc	r15		
    44b0:	12 c3       	clrc			
    44b2:	0f 10       	rrc	r15		
    44b4:	12 c3       	clrc			
    44b6:	0f 10       	rrc	r15		
    44b8:	12 c3       	clrc			
    44ba:	0f 10       	rrc	r15		
    44bc:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    44c0:	2f 4e       	mov	@r14,	r15	
    44c2:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    44c6:	0f 5f       	rla	r15		
    44c8:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    44cc:	2f 4f       	mov	@r15,	r15	
    44ce:	4f 4f       	mov.b	r15,	r15	
    44d0:	8f 10       	swpb	r15		
    44d2:	0f 5f       	rla	r15		
    44d4:	0f 5f       	rla	r15		
    44d6:	0f 5f       	rla	r15		
    44d8:	0f 5f       	rla	r15		
    44da:	84 df ec ff 	bis	r15,	-20(r4)	;0xffec(r4)
		state[3]=temp;
    44de:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    44e2:	3f 50 06 00 	add	#6,	r15	;#0x0006
    44e6:	9f 44 ec ff 	mov	-20(r4),0(r15)	;0xffec(r4), 0x0000(r15)
    44ea:	00 00 
//	******************* sBox End ***************************
//	******************* pLayer *****************************
	
		position=-16;
    44ec:	b4 40 f0 ff 	mov	#-16,	-22(r4)	;#0xfff0, 0xffea(r4)
    44f0:	ea ff 
		temp_0=0;temp_1=0;temp_2=0;temp_3=0;
    44f2:	84 43 e0 ff 	mov	#0,	-32(r4)	;r3 As==00, 0xffe0(r4)
    44f6:	84 43 e2 ff 	mov	#0,	-30(r4)	;r3 As==00, 0xffe2(r4)
    44fa:	84 43 e4 ff 	mov	#0,	-28(r4)	;r3 As==00, 0xffe4(r4)
    44fe:	84 43 e6 ff 	mov	#0,	-26(r4)	;r3 As==00, 0xffe6(r4)
		for(j=0;j<64;j++)
    4502:	84 43 e8 ff 	mov	#0,	-24(r4)	;r3 As==00, 0xffe8(r4)
    4506:	d9 3c       	jmp	$+436    	;abs 0x46ba
		{

			if(j==63)
    4508:	b4 90 3f 00 	cmp	#63,	-24(r4)	;#0x003f, 0xffe8(r4)
    450c:	e8 ff 
    450e:	04 20       	jnz	$+10     	;abs 0x4518
			{
				position = 63;
    4510:	b4 40 3f 00 	mov	#63,	-22(r4)	;#0x003f, 0xffea(r4)
    4514:	ea ff 
    4516:	16 3c       	jmp	$+46     	;abs 0x4544
			}
			else
			{		
				reste=63-position;
    4518:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    451c:	0e 4f       	mov	r15,	r14	
    451e:	1e 84 ea ff 	sub	-22(r4),r14	;0xffea(r4)
    4522:	84 4e ee ff 	mov	r14,	-18(r4)	;0xffee(r4)
				if(reste>16)
    4526:	b4 90 11 00 	cmp	#17,	-18(r4)	;#0x0011, 0xffee(r4)
    452a:	ee ff 
    452c:	04 38       	jl	$+10     	;abs 0x4536
				{
					position+=16;
    452e:	b4 50 10 00 	add	#16,	-22(r4)	;#0x0010, 0xffea(r4)
    4532:	ea ff 
    4534:	07 3c       	jmp	$+16     	;abs 0x4544
				}
				else
				{
					position=16-reste;
    4536:	3f 40 10 00 	mov	#16,	r15	;#0x0010
    453a:	0e 4f       	mov	r15,	r14	
    453c:	1e 84 ee ff 	sub	-18(r4),r14	;0xffee(r4)
    4540:	84 4e ea ff 	mov	r14,	-22(r4)	;0xffea(r4)
				}
			}
					
			if(state[0] & 0x01)
    4544:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4548:	2f 4f       	mov	@r15,	r15	
    454a:	1f f3       	and	#1,	r15	;r3 As==01
    454c:	4f 4f       	mov.b	r15,	r15	
    454e:	4f 93       	tst.b	r15		
    4550:	4d 24       	jz	$+156    	;abs 0x45ec
			{
				if(position<=15)
    4552:	b4 90 10 00 	cmp	#16,	-22(r4)	;#0x0010, 0xffea(r4)
    4556:	ea ff 
    4558:	0f 34       	jge	$+32     	;abs 0x4578
				{temp_0|=(u16)0x01<<position;}
    455a:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    455e:	1f 43       	mov	#1,	r15	;r3 As==01
    4560:	4e 4e       	mov.b	r14,	r14	
    4562:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    4566:	4e 93       	tst.b	r14		
    4568:	04 24       	jz	$+10     	;abs 0x4572
    456a:	0f 5f       	rla	r15		
    456c:	7e 53       	add.b	#-1,	r14	;r3 As==11
    456e:	4e 93       	tst.b	r14		
    4570:	fc 23       	jnz	$-6      	;abs 0x456a
    4572:	84 df e0 ff 	bis	r15,	-32(r4)	;0xffe0(r4)
    4576:	3a 3c       	jmp	$+118    	;abs 0x45ec
				else if(position<=31)
    4578:	b4 90 20 00 	cmp	#32,	-22(r4)	;#0x0020, 0xffea(r4)
    457c:	ea ff 
    457e:	11 34       	jge	$+36     	;abs 0x45a2
				{temp_1|=(u16)0x01<<(position&0xF);}
    4580:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    4584:	3e f0 0f 00 	and	#15,	r14	;#0x000f
    4588:	1f 43       	mov	#1,	r15	;r3 As==01
    458a:	4e 4e       	mov.b	r14,	r14	
    458c:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    4590:	4e 93       	tst.b	r14		
    4592:	04 24       	jz	$+10     	;abs 0x459c
    4594:	0f 5f       	rla	r15		
    4596:	7e 53       	add.b	#-1,	r14	;r3 As==11
    4598:	4e 93       	tst.b	r14		
    459a:	fc 23       	jnz	$-6      	;abs 0x4594
    459c:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
    45a0:	25 3c       	jmp	$+76     	;abs 0x45ec
				else if(position<=47)
    45a2:	b4 90 30 00 	cmp	#48,	-22(r4)	;#0x0030, 0xffea(r4)
    45a6:	ea ff 
    45a8:	11 34       	jge	$+36     	;abs 0x45cc
				{temp_2|=(u16)0x01<<(position&0xF);}
    45aa:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    45ae:	3e f0 0f 00 	and	#15,	r14	;#0x000f
    45b2:	1f 43       	mov	#1,	r15	;r3 As==01
    45b4:	4e 4e       	mov.b	r14,	r14	
    45b6:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    45ba:	4e 93       	tst.b	r14		
    45bc:	04 24       	jz	$+10     	;abs 0x45c6
    45be:	0f 5f       	rla	r15		
    45c0:	7e 53       	add.b	#-1,	r14	;r3 As==11
    45c2:	4e 93       	tst.b	r14		
    45c4:	fc 23       	jnz	$-6      	;abs 0x45be
    45c6:	84 df e4 ff 	bis	r15,	-28(r4)	;0xffe4(r4)
    45ca:	10 3c       	jmp	$+34     	;abs 0x45ec
				else
				{temp_3|=(u16)0x01<<(position&0xF);}
    45cc:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    45d0:	3e f0 0f 00 	and	#15,	r14	;#0x000f
    45d4:	1f 43       	mov	#1,	r15	;r3 As==01
    45d6:	4e 4e       	mov.b	r14,	r14	
    45d8:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    45dc:	4e 93       	tst.b	r14		
    45de:	04 24       	jz	$+10     	;abs 0x45e8
    45e0:	0f 5f       	rla	r15		
    45e2:	7e 53       	add.b	#-1,	r14	;r3 As==11
    45e4:	4e 93       	tst.b	r14		
    45e6:	fc 23       	jnz	$-6      	;abs 0x45e0
    45e8:	84 df e6 ff 	bis	r15,	-26(r4)	;0xffe6(r4)
			}

			state[0]>>=1;
    45ec:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    45f0:	2f 4f       	mov	@r15,	r15	
    45f2:	12 c3       	clrc			
    45f4:	0f 10       	rrc	r15		
    45f6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    45fa:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
			if(state[1]&0x0001) state[0]|=0x8000;
    45fe:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4602:	2f 53       	incd	r15		
    4604:	2f 4f       	mov	@r15,	r15	
    4606:	1f f3       	and	#1,	r15	;r3 As==01
    4608:	4f 4f       	mov.b	r15,	r15	
    460a:	4f 93       	tst.b	r15		
    460c:	0a 24       	jz	$+22     	;abs 0x4622
    460e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4612:	2f 4f       	mov	@r15,	r15	
    4614:	0e 4f       	mov	r15,	r14	
    4616:	3e d0 00 80 	bis	#-32768,r14	;#0x8000
    461a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    461e:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			
			state[1]>>=1;
    4622:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4626:	2e 53       	incd	r14		
    4628:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    462c:	2f 53       	incd	r15		
    462e:	2f 4f       	mov	@r15,	r15	
    4630:	12 c3       	clrc			
    4632:	0f 10       	rrc	r15		
    4634:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
			if(state[2]&0x0001) state[1]|=0x8000;
    4638:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    463c:	2f 52       	add	#4,	r15	;r2 As==10
    463e:	2f 4f       	mov	@r15,	r15	
    4640:	1f f3       	and	#1,	r15	;r3 As==01
    4642:	4f 4f       	mov.b	r15,	r15	
    4644:	4f 93       	tst.b	r15		
    4646:	0b 24       	jz	$+24     	;abs 0x465e
    4648:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    464c:	2f 53       	incd	r15		
    464e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4652:	2e 53       	incd	r14		
    4654:	2e 4e       	mov	@r14,	r14	
    4656:	3e d0 00 80 	bis	#-32768,r14	;#0x8000
    465a:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			
			state[2]>>=1;
    465e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4662:	2e 52       	add	#4,	r14	;r2 As==10
    4664:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4668:	2f 52       	add	#4,	r15	;r2 As==10
    466a:	2f 4f       	mov	@r15,	r15	
    466c:	12 c3       	clrc			
    466e:	0f 10       	rrc	r15		
    4670:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
			if(state[3]&0x0001) state[2]|=0x8000;
    4674:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4678:	3f 50 06 00 	add	#6,	r15	;#0x0006
    467c:	2f 4f       	mov	@r15,	r15	
    467e:	1f f3       	and	#1,	r15	;r3 As==01
    4680:	4f 4f       	mov.b	r15,	r15	
    4682:	4f 93       	tst.b	r15		
    4684:	0b 24       	jz	$+24     	;abs 0x469c
    4686:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    468a:	2f 52       	add	#4,	r15	;r2 As==10
    468c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4690:	2e 52       	add	#4,	r14	;r2 As==10
    4692:	2e 4e       	mov	@r14,	r14	
    4694:	3e d0 00 80 	bis	#-32768,r14	;#0x8000
    4698:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			
			state[3]>>=1;
    469c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    46a0:	3e 50 06 00 	add	#6,	r14	;#0x0006
    46a4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    46a8:	3f 50 06 00 	add	#6,	r15	;#0x0006
    46ac:	2f 4f       	mov	@r15,	r15	
    46ae:	12 c3       	clrc			
    46b0:	0f 10       	rrc	r15		
    46b2:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
//	******************* sBox End ***************************
//	******************* pLayer *****************************
	
		position=-16;
		temp_0=0;temp_1=0;temp_2=0;temp_3=0;
		for(j=0;j<64;j++)
    46b6:	94 53 e8 ff 	inc	-24(r4)	;0xffe8(r4)
    46ba:	b4 90 40 00 	cmp	#64,	-24(r4)	;#0x0040, 0xffe8(r4)
    46be:	e8 ff 
    46c0:	23 2b       	jnc	$-440    	;abs 0x4508
			if(state[3]&0x0001) state[2]|=0x8000;
			
			state[3]>>=1;
		}

		state[3]=temp_3;
    46c2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    46c6:	3f 50 06 00 	add	#6,	r15	;#0x0006
    46ca:	9f 44 e6 ff 	mov	-26(r4),0(r15)	;0xffe6(r4), 0x0000(r15)
    46ce:	00 00 
		state[2]=temp_2;
    46d0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    46d4:	2f 52       	add	#4,	r15	;r2 As==10
    46d6:	9f 44 e4 ff 	mov	-28(r4),0(r15)	;0xffe4(r4), 0x0000(r15)
    46da:	00 00 
		state[1]=temp_1;
    46dc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    46e0:	2f 53       	incd	r15		
    46e2:	9f 44 e2 ff 	mov	-30(r4),0(r15)	;0xffe2(r4), 0x0000(r15)
    46e6:	00 00 
		state[0]=temp_0;
    46e8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    46ec:	9f 44 e0 ff 	mov	-32(r4),0(r15)	;0xffe0(r4), 0x0000(r15)
    46f0:	00 00 
		
//	******************* pLayer End *************************
//	******************* Key Scheduling *********************
		// <<61 ==(rot)== >>19	
		temp_0 = key[0];
    46f2:	94 44 f0 ff 	mov	-16(r4),-32(r4)	;0xfff0(r4), 0xffe0(r4)
    46f6:	e0 ff 
		temp_1 = key[1];
    46f8:	94 44 f2 ff 	mov	-14(r4),-30(r4)	;0xfff2(r4), 0xffe2(r4)
    46fc:	e2 ff 
		
		key[0]=key[1]>>3;
    46fe:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    4702:	12 c3       	clrc			
    4704:	0f 10       	rrc	r15		
    4706:	12 c3       	clrc			
    4708:	0f 10       	rrc	r15		
    470a:	12 c3       	clrc			
    470c:	0f 10       	rrc	r15		
    470e:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		key[0]|=decBox3[key[2]&0x07];
    4712:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    4716:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    471a:	3f f0 07 00 	and	#7,	r15	;#0x0007
    471e:	0f 5f       	rla	r15		
    4720:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    4724:	2f 4f       	mov	@r15,	r15	
    4726:	0f de       	bis	r14,	r15	
    4728:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		
		key[1]=key[2]>>3;
    472c:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    4730:	12 c3       	clrc			
    4732:	0f 10       	rrc	r15		
    4734:	12 c3       	clrc			
    4736:	0f 10       	rrc	r15		
    4738:	12 c3       	clrc			
    473a:	0f 10       	rrc	r15		
    473c:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
		key[1]|=decBox3[key[3]&0x07];
    4740:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    4744:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    4748:	3f f0 07 00 	and	#7,	r15	;#0x0007
    474c:	0f 5f       	rla	r15		
    474e:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    4752:	2f 4f       	mov	@r15,	r15	
    4754:	0f de       	bis	r14,	r15	
    4756:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
		
		key[2]=key[3]>>3;
    475a:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    475e:	12 c3       	clrc			
    4760:	0f 10       	rrc	r15		
    4762:	12 c3       	clrc			
    4764:	0f 10       	rrc	r15		
    4766:	12 c3       	clrc			
    4768:	0f 10       	rrc	r15		
    476a:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
		key[2]|=decBox3[key[4]&0x07];
    476e:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfff4(r4)
    4772:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    4776:	3f f0 07 00 	and	#7,	r15	;#0x0007
    477a:	0f 5f       	rla	r15		
    477c:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    4780:	2f 4f       	mov	@r15,	r15	
    4782:	0f de       	bis	r14,	r15	
    4784:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
		
		key[3]=key[4]>>3;
    4788:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    478c:	12 c3       	clrc			
    478e:	0f 10       	rrc	r15		
    4790:	12 c3       	clrc			
    4792:	0f 10       	rrc	r15		
    4794:	12 c3       	clrc			
    4796:	0f 10       	rrc	r15		
    4798:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
		key[3]|=decBox3[temp_0&0x07];
    479c:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    47a0:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffe0(r4)
    47a4:	3f f0 07 00 	and	#7,	r15	;#0x0007
    47a8:	0f 5f       	rla	r15		
    47aa:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    47ae:	2f 4f       	mov	@r15,	r15	
    47b0:	0f de       	bis	r14,	r15	
    47b2:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
		
		key[4]=temp_0>>3;
    47b6:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffe0(r4)
    47ba:	12 c3       	clrc			
    47bc:	0f 10       	rrc	r15		
    47be:	12 c3       	clrc			
    47c0:	0f 10       	rrc	r15		
    47c2:	12 c3       	clrc			
    47c4:	0f 10       	rrc	r15		
    47c6:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
		key[4]|=decBox3[temp_1&0x07];
    47ca:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    47ce:	1f 44 e2 ff 	mov	-30(r4),r15	;0xffe2(r4)
    47d2:	3f f0 07 00 	and	#7,	r15	;#0x0007
    47d6:	0f 5f       	rla	r15		
    47d8:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    47dc:	2f 4f       	mov	@r15,	r15	
    47de:	0f de       	bis	r14,	r15	
    47e0:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
		
		//sBox
		temp = key[4]>>12;
    47e4:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    47e8:	8f 10       	swpb	r15		
    47ea:	4f 4f       	mov.b	r15,	r15	
    47ec:	84 4f ec ff 	mov	r15,	-20(r4)	;0xffec(r4)
    47f0:	12 c3       	clrc			
    47f2:	14 10 ec ff 	rrc	-20(r4)	;0xffec(r4)
    47f6:	12 c3       	clrc			
    47f8:	14 10 ec ff 	rrc	-20(r4)	;0xffec(r4)
    47fc:	12 c3       	clrc			
    47fe:	14 10 ec ff 	rrc	-20(r4)	;0xffec(r4)
    4802:	12 c3       	clrc			
    4804:	14 10 ec ff 	rrc	-20(r4)	;0xffec(r4)
		key[4] &= 0x0FFF;
    4808:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    480c:	3f f0 ff 0f 	and	#4095,	r15	;#0x0fff
    4810:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
		key[4] |= sBox4[temp]<<12;
    4814:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    4818:	1f 44 ec ff 	mov	-20(r4),r15	;0xffec(r4)
    481c:	0f 5f       	rla	r15		
    481e:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4822:	2f 4f       	mov	@r15,	r15	
    4824:	4f 4f       	mov.b	r15,	r15	
    4826:	8f 10       	swpb	r15		
    4828:	0f 5f       	rla	r15		
    482a:	0f 5f       	rla	r15		
    482c:	0f 5f       	rla	r15		
    482e:	0f 5f       	rla	r15		
    4830:	0f de       	bis	r14,	r15	
    4832:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
		
		//Permutation
		if(round&0x01)key[0] ^= 0x8000;  
    4836:	1f 44 de ff 	mov	-34(r4),r15	;0xffde(r4)
    483a:	1f f3       	and	#1,	r15	;r3 As==01
    483c:	4f 4f       	mov.b	r15,	r15	
    483e:	4f 93       	tst.b	r15		
    4840:	06 24       	jz	$+14     	;abs 0x484e
    4842:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    4846:	3f e0 00 80 	xor	#-32768,r15	;#0x8000
    484a:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		key[1] ^= ( round >> 1 );
    484e:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    4852:	1f 44 de ff 	mov	-34(r4),r15	;0xffde(r4)
    4856:	12 c3       	clrc			
    4858:	0f 10       	rrc	r15		
    485a:	0f ee       	xor	r14,	r15	
    485c:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
	key[4] = aKey[4];
	key[3] = aKey[3];
	key[2] = aKey[2];
	key[1] = aKey[1];
	key[0] = aKey[0];
	for(round=1;round<32;round++)
    4860:	94 53 de ff 	inc	-34(r4)	;0xffde(r4)
    4864:	b4 90 20 00 	cmp	#32,	-34(r4)	;#0x0020, 0xffde(r4)
    4868:	de ff 
    486a:	02 2c       	jc	$+6      	;abs 0x4870
    486c:	30 40 10 41 	br	#0x4110	
		if(round&0x01)key[0] ^= 0x8000;  
		key[1] ^= ( round >> 1 );
//	******************* Key Scheduling End*********************
	}
//	****************** addRoundkey *************************
 	state[3] ^= key[4];
    4870:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4874:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4878:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    487c:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4880:	2d 4e       	mov	@r14,	r13	
    4882:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    4886:	0e ed       	xor	r13,	r14	
    4888:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[2] ^= key[3];
    488c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4890:	2f 52       	add	#4,	r15	;r2 As==10
    4892:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4896:	2e 52       	add	#4,	r14	;r2 As==10
    4898:	2d 4e       	mov	@r14,	r13	
    489a:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    489e:	0e ed       	xor	r13,	r14	
    48a0:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[1] ^= key[2];
    48a4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48a8:	2f 53       	incd	r15		
    48aa:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    48ae:	2e 53       	incd	r14		
    48b0:	2d 4e       	mov	@r14,	r13	
    48b2:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfff4(r4)
    48b6:	0e ed       	xor	r13,	r14	
    48b8:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[0] ^= key[1];
    48bc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48c0:	2e 4f       	mov	@r15,	r14	
    48c2:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    48c6:	0e ef       	xor	r15,	r14	
    48c8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48cc:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)

//	****************** addRoundkey End *********************
	return;
}
    48d0:	31 50 20 00 	add	#32,	r1	;#0x0020
    48d4:	34 41       	pop	r4		
    48d6:	30 41       	ret			

000048d8 <Decrypt>:


 void Decrypt(u16 *state, u16 *aKey)
{	
    48d8:	04 12       	push	r4		
    48da:	04 41       	mov	r1,	r4	
    48dc:	24 53       	incd	r4		
    48de:	31 50 e8 fe 	add	#-280,	r1	;#0xfee8
    48e2:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    48e6:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
	u16 temp_1;
	u16 temp_2;
	u16 temp_3;
	s16 position;
	
	key[4] = aKey[4];
    48ea:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    48ee:	1f 4f 08 00 	mov	8(r15),	r15	;0x0008(r15)
    48f2:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
	key[3] = aKey[3];
    48f6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    48fa:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    48fe:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
	key[2] = aKey[2];
    4902:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4906:	1f 4f 04 00 	mov	4(r15),	r15	;0x0004(r15)
    490a:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
	key[1] = aKey[1];
    490e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4912:	1f 4f 02 00 	mov	2(r15),	r15	;0x0002(r15)
    4916:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
	key[0] = aKey[0];
    491a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    491e:	2f 4f       	mov	@r15,	r15	
    4920:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)

//	****************** Key Scheduling **********************
		for(round=1;round<32;round++)
    4924:	94 43 e6 fe 	mov	#1,	-282(r4);r3 As==01, 0xfee6(r4)
    4928:	f9 3c       	jmp	$+500    	;abs 0x4b1c
		{
			// <<61 ==(rot)== >>19	
			temp_0 = key[0];
    492a:	94 44 f0 ff 	mov	-16(r4),-278(r4);0xfff0(r4), 0xfeea(r4)
    492e:	ea fe 
			temp_1 = key[1];
    4930:	94 44 f2 ff 	mov	-14(r4),-276(r4);0xfff2(r4), 0xfeec(r4)
    4934:	ec fe 
		
			key[0]=key[1]>>3;
    4936:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    493a:	12 c3       	clrc			
    493c:	0f 10       	rrc	r15		
    493e:	12 c3       	clrc			
    4940:	0f 10       	rrc	r15		
    4942:	12 c3       	clrc			
    4944:	0f 10       	rrc	r15		
    4946:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
			key[0]|=decBox3[key[2]&0x07];
    494a:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    494e:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    4952:	3f f0 07 00 	and	#7,	r15	;#0x0007
    4956:	0f 5f       	rla	r15		
    4958:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    495c:	2f 4f       	mov	@r15,	r15	
    495e:	0f de       	bis	r14,	r15	
    4960:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		
			key[1]=key[2]>>3;
    4964:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    4968:	12 c3       	clrc			
    496a:	0f 10       	rrc	r15		
    496c:	12 c3       	clrc			
    496e:	0f 10       	rrc	r15		
    4970:	12 c3       	clrc			
    4972:	0f 10       	rrc	r15		
    4974:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
			key[1]|=decBox3[key[3]&0x07];
    4978:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    497c:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    4980:	3f f0 07 00 	and	#7,	r15	;#0x0007
    4984:	0f 5f       	rla	r15		
    4986:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    498a:	2f 4f       	mov	@r15,	r15	
    498c:	0f de       	bis	r14,	r15	
    498e:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
		
			key[2]=key[3]>>3;
    4992:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    4996:	12 c3       	clrc			
    4998:	0f 10       	rrc	r15		
    499a:	12 c3       	clrc			
    499c:	0f 10       	rrc	r15		
    499e:	12 c3       	clrc			
    49a0:	0f 10       	rrc	r15		
    49a2:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
			key[2]|=decBox3[key[4]&0x07];
    49a6:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfff4(r4)
    49aa:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    49ae:	3f f0 07 00 	and	#7,	r15	;#0x0007
    49b2:	0f 5f       	rla	r15		
    49b4:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    49b8:	2f 4f       	mov	@r15,	r15	
    49ba:	0f de       	bis	r14,	r15	
    49bc:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
		
			key[3]=key[4]>>3;
    49c0:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    49c4:	12 c3       	clrc			
    49c6:	0f 10       	rrc	r15		
    49c8:	12 c3       	clrc			
    49ca:	0f 10       	rrc	r15		
    49cc:	12 c3       	clrc			
    49ce:	0f 10       	rrc	r15		
    49d0:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
			key[3]|=decBox3[temp_0&0x07];
    49d4:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    49d8:	1f 44 ea fe 	mov	-278(r4),r15	;0xfeea(r4)
    49dc:	3f f0 07 00 	and	#7,	r15	;#0x0007
    49e0:	0f 5f       	rla	r15		
    49e2:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    49e6:	2f 4f       	mov	@r15,	r15	
    49e8:	0f de       	bis	r14,	r15	
    49ea:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
		
			key[4]=temp_0>>3;
    49ee:	1f 44 ea fe 	mov	-278(r4),r15	;0xfeea(r4)
    49f2:	12 c3       	clrc			
    49f4:	0f 10       	rrc	r15		
    49f6:	12 c3       	clrc			
    49f8:	0f 10       	rrc	r15		
    49fa:	12 c3       	clrc			
    49fc:	0f 10       	rrc	r15		
    49fe:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
			key[4]|=decBox3[temp_1&0x07];
    4a02:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    4a06:	1f 44 ec fe 	mov	-276(r4),r15	;0xfeec(r4)
    4a0a:	3f f0 07 00 	and	#7,	r15	;#0x0007
    4a0e:	0f 5f       	rla	r15		
    4a10:	3f 50 14 53 	add	#21268,	r15	;#0x5314
    4a14:	2f 4f       	mov	@r15,	r15	
    4a16:	0f de       	bis	r14,	r15	
    4a18:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
		
			//sBox
			temp = key[4]>>12;
    4a1c:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    4a20:	8f 10       	swpb	r15		
    4a22:	4f 4f       	mov.b	r15,	r15	
    4a24:	84 4f f4 fe 	mov	r15,	-268(r4);0xfef4(r4)
    4a28:	12 c3       	clrc			
    4a2a:	14 10 f4 fe 	rrc	-268(r4)	;0xfef4(r4)
    4a2e:	12 c3       	clrc			
    4a30:	14 10 f4 fe 	rrc	-268(r4)	;0xfef4(r4)
    4a34:	12 c3       	clrc			
    4a36:	14 10 f4 fe 	rrc	-268(r4)	;0xfef4(r4)
    4a3a:	12 c3       	clrc			
    4a3c:	14 10 f4 fe 	rrc	-268(r4)	;0xfef4(r4)
			key[4] &= 0x0FFF;
    4a40:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    4a44:	3f f0 ff 0f 	and	#4095,	r15	;#0x0fff
    4a48:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
			key[4] |= sBox4[temp]<<12;
    4a4c:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    4a50:	1f 44 f4 fe 	mov	-268(r4),r15	;0xfef4(r4)
    4a54:	0f 5f       	rla	r15		
    4a56:	3f 50 f4 52 	add	#21236,	r15	;#0x52f4
    4a5a:	2f 4f       	mov	@r15,	r15	
    4a5c:	4f 4f       	mov.b	r15,	r15	
    4a5e:	8f 10       	swpb	r15		
    4a60:	0f 5f       	rla	r15		
    4a62:	0f 5f       	rla	r15		
    4a64:	0f 5f       	rla	r15		
    4a66:	0f 5f       	rla	r15		
    4a68:	0f de       	bis	r14,	r15	
    4a6a:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
		
			//Permutation
			if(round&0x01)key[0] ^= 0x8000;  
    4a6e:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4a72:	1f f3       	and	#1,	r15	;r3 As==01
    4a74:	4f 4f       	mov.b	r15,	r15	
    4a76:	4f 93       	tst.b	r15		
    4a78:	06 24       	jz	$+14     	;abs 0x4a86
    4a7a:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    4a7e:	3f e0 00 80 	xor	#-32768,r15	;#0x8000
    4a82:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
			key[1] ^= ( round >> 1 );
    4a86:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    4a8a:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4a8e:	12 c3       	clrc			
    4a90:	0f 10       	rrc	r15		
    4a92:	0f ee       	xor	r14,	r15	
    4a94:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
			
			subkey[round-1][3] = key[4];
    4a98:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4a9c:	3f 53       	add	#-1,	r15	;r3 As==11
    4a9e:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    4aa2:	0f 5f       	rla	r15		
    4aa4:	0f 5f       	rla	r15		
    4aa6:	0f 5f       	rla	r15		
    4aa8:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4aac:	0c 54       	add	r4,	r12	
    4aae:	0f 5c       	add	r12,	r15	
    4ab0:	3f 50 18 00 	add	#24,	r15	;#0x0018
    4ab4:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			subkey[round-1][2] = key[3];
    4ab8:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4abc:	3f 53       	add	#-1,	r15	;r3 As==11
    4abe:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    4ac2:	0f 5f       	rla	r15		
    4ac4:	0f 5f       	rla	r15		
    4ac6:	0f 5f       	rla	r15		
    4ac8:	3d 40 e6 fe 	mov	#-282,	r13	;#0xfee6
    4acc:	0d 54       	add	r4,	r13	
    4ace:	0f 5d       	add	r13,	r15	
    4ad0:	3f 50 16 00 	add	#22,	r15	;#0x0016
    4ad4:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			subkey[round-1][1] = key[2];
    4ad8:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4adc:	3f 53       	add	#-1,	r15	;r3 As==11
    4ade:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfff4(r4)
    4ae2:	0f 5f       	rla	r15		
    4ae4:	0f 5f       	rla	r15		
    4ae6:	0f 5f       	rla	r15		
    4ae8:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4aec:	0c 54       	add	r4,	r12	
    4aee:	0f 5c       	add	r12,	r15	
    4af0:	3f 50 14 00 	add	#20,	r15	;#0x0014
    4af4:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			subkey[round-1][0] = key[1];
    4af8:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4afc:	3f 53       	add	#-1,	r15	;r3 As==11
    4afe:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    4b02:	0f 5f       	rla	r15		
    4b04:	0f 5f       	rla	r15		
    4b06:	0f 5f       	rla	r15		
    4b08:	3d 40 e6 fe 	mov	#-282,	r13	;#0xfee6
    4b0c:	0d 54       	add	r4,	r13	
    4b0e:	0f 5d       	add	r13,	r15	
    4b10:	3f 50 12 00 	add	#18,	r15	;#0x0012
    4b14:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	key[2] = aKey[2];
	key[1] = aKey[1];
	key[0] = aKey[0];

//	****************** Key Scheduling **********************
		for(round=1;round<32;round++)
    4b18:	94 53 e6 fe 	inc	-282(r4)	;0xfee6(r4)
    4b1c:	b4 90 20 00 	cmp	#32,	-282(r4);#0x0020, 0xfee6(r4)
    4b20:	e6 fe 
    4b22:	03 2b       	jnc	$-504    	;abs 0x492a
			subkey[round-1][0] = key[1];
		}
		
//	****************** Key Scheduling End ******************

		for(round=31;round>0;round--)
    4b24:	b4 40 1f 00 	mov	#31,	-282(r4);#0x001f, 0xfee6(r4)
    4b28:	e6 fe 
    4b2a:	30 40 68 51 	br	#0x5168	
		{
//	****************** addRoundkey *************************
		state[3] ^= subkey[round-1][3];
    4b2e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4b32:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4b36:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b3a:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4b3e:	2d 4f       	mov	@r15,	r13	
    4b40:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4b44:	3f 53       	add	#-1,	r15	;r3 As==11
    4b46:	0f 5f       	rla	r15		
    4b48:	0f 5f       	rla	r15		
    4b4a:	0f 5f       	rla	r15		
    4b4c:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4b50:	0c 54       	add	r4,	r12	
    4b52:	0f 5c       	add	r12,	r15	
    4b54:	3f 50 18 00 	add	#24,	r15	;#0x0018
    4b58:	2f 4f       	mov	@r15,	r15	
    4b5a:	0f ed       	xor	r13,	r15	
    4b5c:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[2] ^= subkey[round-1][2];
    4b60:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4b64:	2e 52       	add	#4,	r14	;r2 As==10
    4b66:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b6a:	2f 52       	add	#4,	r15	;r2 As==10
    4b6c:	2d 4f       	mov	@r15,	r13	
    4b6e:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4b72:	3f 53       	add	#-1,	r15	;r3 As==11
    4b74:	0f 5f       	rla	r15		
    4b76:	0f 5f       	rla	r15		
    4b78:	0f 5f       	rla	r15		
    4b7a:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4b7e:	0c 54       	add	r4,	r12	
    4b80:	0f 5c       	add	r12,	r15	
    4b82:	3f 50 16 00 	add	#22,	r15	;#0x0016
    4b86:	2f 4f       	mov	@r15,	r15	
    4b88:	0f ed       	xor	r13,	r15	
    4b8a:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[1] ^= subkey[round-1][1];
    4b8e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4b92:	2e 53       	incd	r14		
    4b94:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b98:	2f 53       	incd	r15		
    4b9a:	2d 4f       	mov	@r15,	r13	
    4b9c:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4ba0:	3f 53       	add	#-1,	r15	;r3 As==11
    4ba2:	0f 5f       	rla	r15		
    4ba4:	0f 5f       	rla	r15		
    4ba6:	0f 5f       	rla	r15		
    4ba8:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4bac:	0c 54       	add	r4,	r12	
    4bae:	0f 5c       	add	r12,	r15	
    4bb0:	3f 50 14 00 	add	#20,	r15	;#0x0014
    4bb4:	2f 4f       	mov	@r15,	r15	
    4bb6:	0f ed       	xor	r13,	r15	
    4bb8:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[0] ^= subkey[round-1][0];
    4bbc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4bc0:	2e 4f       	mov	@r15,	r14	
    4bc2:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4bc6:	3f 53       	add	#-1,	r15	;r3 As==11
    4bc8:	0f 5f       	rla	r15		
    4bca:	0f 5f       	rla	r15		
    4bcc:	0f 5f       	rla	r15		
    4bce:	3d 40 e6 fe 	mov	#-282,	r13	;#0xfee6
    4bd2:	0d 54       	add	r4,	r13	
    4bd4:	0f 5d       	add	r13,	r15	
    4bd6:	3f 50 12 00 	add	#18,	r15	;#0x0012
    4bda:	2f 4f       	mov	@r15,	r15	
    4bdc:	0e ef       	xor	r15,	r14	
    4bde:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4be2:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
//	****************** addRoundkey End *********************
//	******************* pLayer *****************************
			
		position=-4;
    4be6:	b4 40 fc ff 	mov	#-4,	-270(r4);#0xfffc, 0xfef2(r4)
    4bea:	f2 fe 
		u16 reste=0;
    4bec:	84 43 f6 fe 	mov	#0,	-266(r4);r3 As==00, 0xfef6(r4)
		temp_0=0;temp_1=0;temp_2=0;temp_3=0;
    4bf0:	84 43 ea fe 	mov	#0,	-278(r4);r3 As==00, 0xfeea(r4)
    4bf4:	84 43 ec fe 	mov	#0,	-276(r4);r3 As==00, 0xfeec(r4)
    4bf8:	84 43 ee fe 	mov	#0,	-274(r4);r3 As==00, 0xfeee(r4)
    4bfc:	84 43 f0 fe 	mov	#0,	-272(r4);r3 As==00, 0xfef0(r4)
		for(j=0;j<64;j++)
    4c00:	84 43 e8 fe 	mov	#0,	-280(r4);r3 As==00, 0xfee8(r4)
    4c04:	d5 3c       	jmp	$+428    	;abs 0x4db0
		{
			if(j==63)
    4c06:	b4 90 3f 00 	cmp	#63,	-280(r4);#0x003f, 0xfee8(r4)
    4c0a:	e8 fe 
    4c0c:	04 20       	jnz	$+10     	;abs 0x4c16
			{
				position = 63;
    4c0e:	b4 40 3f 00 	mov	#63,	-270(r4);#0x003f, 0xfef2(r4)
    4c12:	f2 fe 
    4c14:	12 3c       	jmp	$+38     	;abs 0x4c3a
			}
			else
			{		
				reste=63-position;
    4c16:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    4c1a:	1f 84 f2 fe 	sub	-270(r4),r15	;0xfef2(r4)
    4c1e:	84 4f f6 fe 	mov	r15,	-266(r4);0xfef6(r4)
				if(reste>4)
    4c22:	b4 90 05 00 	cmp	#5,	-266(r4);#0x0005, 0xfef6(r4)
    4c26:	f6 fe 
    4c28:	03 28       	jnc	$+8      	;abs 0x4c30
				{
					position+=4;
    4c2a:	a4 52 f2 fe 	add	#4,	-270(r4);r2 As==10, 0xfef2(r4)
    4c2e:	05 3c       	jmp	$+12     	;abs 0x4c3a
				}
				else
				{
					position=4-reste;
    4c30:	2f 42       	mov	#4,	r15	;r2 As==10
    4c32:	1f 84 f6 fe 	sub	-266(r4),r15	;0xfef6(r4)
    4c36:	84 4f f2 fe 	mov	r15,	-270(r4);0xfef2(r4)
				}
			}
			
			if(state[0] & 0x01)
    4c3a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c3e:	2f 4f       	mov	@r15,	r15	
    4c40:	1f f3       	and	#1,	r15	;r3 As==01
    4c42:	4f 4f       	mov.b	r15,	r15	
    4c44:	4f 93       	tst.b	r15		
    4c46:	4d 24       	jz	$+156    	;abs 0x4ce2
			{
				if(position<=15)
    4c48:	b4 90 10 00 	cmp	#16,	-270(r4);#0x0010, 0xfef2(r4)
    4c4c:	f2 fe 
    4c4e:	0f 34       	jge	$+32     	;abs 0x4c6e
				{temp_0|=(u16)0x01<<position;}
    4c50:	1e 44 f2 fe 	mov	-270(r4),r14	;0xfef2(r4)
    4c54:	1f 43       	mov	#1,	r15	;r3 As==01
    4c56:	4e 4e       	mov.b	r14,	r14	
    4c58:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    4c5c:	4e 93       	tst.b	r14		
    4c5e:	04 24       	jz	$+10     	;abs 0x4c68
    4c60:	0f 5f       	rla	r15		
    4c62:	7e 53       	add.b	#-1,	r14	;r3 As==11
    4c64:	4e 93       	tst.b	r14		
    4c66:	fc 23       	jnz	$-6      	;abs 0x4c60
    4c68:	84 df ea fe 	bis	r15,	-278(r4);0xfeea(r4)
    4c6c:	3a 3c       	jmp	$+118    	;abs 0x4ce2
				else if(position<=31)
    4c6e:	b4 90 20 00 	cmp	#32,	-270(r4);#0x0020, 0xfef2(r4)
    4c72:	f2 fe 
    4c74:	11 34       	jge	$+36     	;abs 0x4c98
				{temp_1|=(u16)0x01<<(position&0xF);}
    4c76:	1e 44 f2 fe 	mov	-270(r4),r14	;0xfef2(r4)
    4c7a:	3e f0 0f 00 	and	#15,	r14	;#0x000f
    4c7e:	1f 43       	mov	#1,	r15	;r3 As==01
    4c80:	4e 4e       	mov.b	r14,	r14	
    4c82:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    4c86:	4e 93       	tst.b	r14		
    4c88:	04 24       	jz	$+10     	;abs 0x4c92
    4c8a:	0f 5f       	rla	r15		
    4c8c:	7e 53       	add.b	#-1,	r14	;r3 As==11
    4c8e:	4e 93       	tst.b	r14		
    4c90:	fc 23       	jnz	$-6      	;abs 0x4c8a
    4c92:	84 df ec fe 	bis	r15,	-276(r4);0xfeec(r4)
    4c96:	25 3c       	jmp	$+76     	;abs 0x4ce2
				else if(position<=47)
    4c98:	b4 90 30 00 	cmp	#48,	-270(r4);#0x0030, 0xfef2(r4)
    4c9c:	f2 fe 
    4c9e:	11 34       	jge	$+36     	;abs 0x4cc2
				{temp_2|=(u16)0x01<<(position&0xF);}
    4ca0:	1e 44 f2 fe 	mov	-270(r4),r14	;0xfef2(r4)
    4ca4:	3e f0 0f 00 	and	#15,	r14	;#0x000f
    4ca8:	1f 43       	mov	#1,	r15	;r3 As==01
    4caa:	4e 4e       	mov.b	r14,	r14	
    4cac:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    4cb0:	4e 93       	tst.b	r14		
    4cb2:	04 24       	jz	$+10     	;abs 0x4cbc
    4cb4:	0f 5f       	rla	r15		
    4cb6:	7e 53       	add.b	#-1,	r14	;r3 As==11
    4cb8:	4e 93       	tst.b	r14		
    4cba:	fc 23       	jnz	$-6      	;abs 0x4cb4
    4cbc:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
    4cc0:	10 3c       	jmp	$+34     	;abs 0x4ce2
				else
				{temp_3|=(u16)0x01<<(position&0xF);}
    4cc2:	1e 44 f2 fe 	mov	-270(r4),r14	;0xfef2(r4)
    4cc6:	3e f0 0f 00 	and	#15,	r14	;#0x000f
    4cca:	1f 43       	mov	#1,	r15	;r3 As==01
    4ccc:	4e 4e       	mov.b	r14,	r14	
    4cce:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    4cd2:	4e 93       	tst.b	r14		
    4cd4:	04 24       	jz	$+10     	;abs 0x4cde
    4cd6:	0f 5f       	rla	r15		
    4cd8:	7e 53       	add.b	#-1,	r14	;r3 As==11
    4cda:	4e 93       	tst.b	r14		
    4cdc:	fc 23       	jnz	$-6      	;abs 0x4cd6
    4cde:	84 df f0 fe 	bis	r15,	-272(r4);0xfef0(r4)
			}

			state[0]>>=1;
    4ce2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ce6:	2f 4f       	mov	@r15,	r15	
    4ce8:	12 c3       	clrc			
    4cea:	0f 10       	rrc	r15		
    4cec:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4cf0:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
			if(state[1]&0x0001) state[0]|=0x8000;
    4cf4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cf8:	2f 53       	incd	r15		
    4cfa:	2f 4f       	mov	@r15,	r15	
    4cfc:	1f f3       	and	#1,	r15	;r3 As==01
    4cfe:	4f 4f       	mov.b	r15,	r15	
    4d00:	4f 93       	tst.b	r15		
    4d02:	0a 24       	jz	$+22     	;abs 0x4d18
    4d04:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d08:	2f 4f       	mov	@r15,	r15	
    4d0a:	0e 4f       	mov	r15,	r14	
    4d0c:	3e d0 00 80 	bis	#-32768,r14	;#0x8000
    4d10:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d14:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			
			state[1]>>=1;
    4d18:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4d1c:	2e 53       	incd	r14		
    4d1e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d22:	2f 53       	incd	r15		
    4d24:	2f 4f       	mov	@r15,	r15	
    4d26:	12 c3       	clrc			
    4d28:	0f 10       	rrc	r15		
    4d2a:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
			if(state[2]&0x0001) state[1]|=0x8000;
    4d2e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d32:	2f 52       	add	#4,	r15	;r2 As==10
    4d34:	2f 4f       	mov	@r15,	r15	
    4d36:	1f f3       	and	#1,	r15	;r3 As==01
    4d38:	4f 4f       	mov.b	r15,	r15	
    4d3a:	4f 93       	tst.b	r15		
    4d3c:	0b 24       	jz	$+24     	;abs 0x4d54
    4d3e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d42:	2f 53       	incd	r15		
    4d44:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4d48:	2e 53       	incd	r14		
    4d4a:	2e 4e       	mov	@r14,	r14	
    4d4c:	3e d0 00 80 	bis	#-32768,r14	;#0x8000
    4d50:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			
			state[2]>>=1;
    4d54:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4d58:	2e 52       	add	#4,	r14	;r2 As==10
    4d5a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d5e:	2f 52       	add	#4,	r15	;r2 As==10
    4d60:	2f 4f       	mov	@r15,	r15	
    4d62:	12 c3       	clrc			
    4d64:	0f 10       	rrc	r15		
    4d66:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
			if(state[3]&0x0001) state[2]|=0x8000;
    4d6a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d6e:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4d72:	2f 4f       	mov	@r15,	r15	
    4d74:	1f f3       	and	#1,	r15	;r3 As==01
    4d76:	4f 4f       	mov.b	r15,	r15	
    4d78:	4f 93       	tst.b	r15		
    4d7a:	0b 24       	jz	$+24     	;abs 0x4d92
    4d7c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d80:	2f 52       	add	#4,	r15	;r2 As==10
    4d82:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4d86:	2e 52       	add	#4,	r14	;r2 As==10
    4d88:	2e 4e       	mov	@r14,	r14	
    4d8a:	3e d0 00 80 	bis	#-32768,r14	;#0x8000
    4d8e:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			
			state[3]>>=1;
    4d92:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4d96:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4d9a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d9e:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4da2:	2f 4f       	mov	@r15,	r15	
    4da4:	12 c3       	clrc			
    4da6:	0f 10       	rrc	r15		
    4da8:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
//	******************* pLayer *****************************
			
		position=-4;
		u16 reste=0;
		temp_0=0;temp_1=0;temp_2=0;temp_3=0;
		for(j=0;j<64;j++)
    4dac:	94 53 e8 fe 	inc	-280(r4)	;0xfee8(r4)
    4db0:	b4 90 40 00 	cmp	#64,	-280(r4);#0x0040, 0xfee8(r4)
    4db4:	e8 fe 
    4db6:	27 2b       	jnc	$-432    	;abs 0x4c06
			state[2]>>=1;
			if(state[3]&0x0001) state[2]|=0x8000;
			
			state[3]>>=1;
		}
		state[3]=temp_3;
    4db8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4dbc:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4dc0:	9f 44 f0 fe 	mov	-272(r4),0(r15)	;0xfef0(r4), 0x0000(r15)
    4dc4:	00 00 
		state[2]=temp_2;
    4dc6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4dca:	2f 52       	add	#4,	r15	;r2 As==10
    4dcc:	9f 44 ee fe 	mov	-274(r4),0(r15)	;0xfeee(r4), 0x0000(r15)
    4dd0:	00 00 
		state[1]=temp_1;
    4dd2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4dd6:	2f 53       	incd	r15		
    4dd8:	9f 44 ec fe 	mov	-276(r4),0(r15)	;0xfeec(r4), 0x0000(r15)
    4ddc:	00 00 
		state[0]=temp_0;
    4dde:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4de2:	9f 44 ea fe 	mov	-278(r4),0(r15)	;0xfeea(r4), 0x0000(r15)
    4de6:	00 00 
//	******************* pLayer End *************************
//	******************* sBox *******************************
			
		temp=0;
    4de8:	84 43 f4 fe 	mov	#0,	-268(r4);r3 As==00, 0xfef4(r4)
        temp |= (u16)(invsBox4[(state[0]&0xF)]);
    4dec:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4df0:	2f 4f       	mov	@r15,	r15	
    4df2:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4df6:	0f 5f       	rla	r15		
    4df8:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4dfc:	2f 4f       	mov	@r15,	r15	
    4dfe:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[0]>>=4)&0xF]<<4);
    4e02:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e06:	2f 4f       	mov	@r15,	r15	
    4e08:	12 c3       	clrc			
    4e0a:	0f 10       	rrc	r15		
    4e0c:	12 c3       	clrc			
    4e0e:	0f 10       	rrc	r15		
    4e10:	12 c3       	clrc			
    4e12:	0f 10       	rrc	r15		
    4e14:	12 c3       	clrc			
    4e16:	0f 10       	rrc	r15		
    4e18:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4e1c:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4e20:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e24:	2f 4f       	mov	@r15,	r15	
    4e26:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4e2a:	0f 5f       	rla	r15		
    4e2c:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4e30:	2f 4f       	mov	@r15,	r15	
    4e32:	0f 5f       	rla	r15		
    4e34:	0f 5f       	rla	r15		
    4e36:	0f 5f       	rla	r15		
    4e38:	0f 5f       	rla	r15		
    4e3a:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[0]>>=4)&0xF]<<8);
    4e3e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e42:	2f 4f       	mov	@r15,	r15	
    4e44:	12 c3       	clrc			
    4e46:	0f 10       	rrc	r15		
    4e48:	12 c3       	clrc			
    4e4a:	0f 10       	rrc	r15		
    4e4c:	12 c3       	clrc			
    4e4e:	0f 10       	rrc	r15		
    4e50:	12 c3       	clrc			
    4e52:	0f 10       	rrc	r15		
    4e54:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4e58:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4e5c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e60:	2f 4f       	mov	@r15,	r15	
    4e62:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4e66:	0f 5f       	rla	r15		
    4e68:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4e6c:	2f 4f       	mov	@r15,	r15	
    4e6e:	4f 4f       	mov.b	r15,	r15	
    4e70:	8f 10       	swpb	r15		
    4e72:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[0]>>=4)&0xF]<<12);
    4e76:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e7a:	2f 4f       	mov	@r15,	r15	
    4e7c:	12 c3       	clrc			
    4e7e:	0f 10       	rrc	r15		
    4e80:	12 c3       	clrc			
    4e82:	0f 10       	rrc	r15		
    4e84:	12 c3       	clrc			
    4e86:	0f 10       	rrc	r15		
    4e88:	12 c3       	clrc			
    4e8a:	0f 10       	rrc	r15		
    4e8c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4e90:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4e94:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e98:	2f 4f       	mov	@r15,	r15	
    4e9a:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4e9e:	0f 5f       	rla	r15		
    4ea0:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4ea4:	2f 4f       	mov	@r15,	r15	
    4ea6:	4f 4f       	mov.b	r15,	r15	
    4ea8:	8f 10       	swpb	r15		
    4eaa:	0f 5f       	rla	r15		
    4eac:	0f 5f       	rla	r15		
    4eae:	0f 5f       	rla	r15		
    4eb0:	0f 5f       	rla	r15		
    4eb2:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		state[0]=temp;
    4eb6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4eba:	9f 44 f4 fe 	mov	-268(r4),0(r15)	;0xfef4(r4), 0x0000(r15)
    4ebe:	00 00 
		
        temp=0;
    4ec0:	84 43 f4 fe 	mov	#0,	-268(r4);r3 As==00, 0xfef4(r4)
        temp |= (u16)(invsBox4[(state[1]&0xF)]);
    4ec4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ec8:	2f 53       	incd	r15		
    4eca:	2f 4f       	mov	@r15,	r15	
    4ecc:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4ed0:	0f 5f       	rla	r15		
    4ed2:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4ed6:	2f 4f       	mov	@r15,	r15	
    4ed8:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[1]>>=4)&0xF]<<4);
    4edc:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4ee0:	2e 53       	incd	r14		
    4ee2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ee6:	2f 53       	incd	r15		
    4ee8:	2f 4f       	mov	@r15,	r15	
    4eea:	12 c3       	clrc			
    4eec:	0f 10       	rrc	r15		
    4eee:	12 c3       	clrc			
    4ef0:	0f 10       	rrc	r15		
    4ef2:	12 c3       	clrc			
    4ef4:	0f 10       	rrc	r15		
    4ef6:	12 c3       	clrc			
    4ef8:	0f 10       	rrc	r15		
    4efa:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4efe:	2f 4e       	mov	@r14,	r15	
    4f00:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4f04:	0f 5f       	rla	r15		
    4f06:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4f0a:	2f 4f       	mov	@r15,	r15	
    4f0c:	0f 5f       	rla	r15		
    4f0e:	0f 5f       	rla	r15		
    4f10:	0f 5f       	rla	r15		
    4f12:	0f 5f       	rla	r15		
    4f14:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[1]>>=4)&0xF]<<8);
    4f18:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4f1c:	2e 53       	incd	r14		
    4f1e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f22:	2f 53       	incd	r15		
    4f24:	2f 4f       	mov	@r15,	r15	
    4f26:	12 c3       	clrc			
    4f28:	0f 10       	rrc	r15		
    4f2a:	12 c3       	clrc			
    4f2c:	0f 10       	rrc	r15		
    4f2e:	12 c3       	clrc			
    4f30:	0f 10       	rrc	r15		
    4f32:	12 c3       	clrc			
    4f34:	0f 10       	rrc	r15		
    4f36:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4f3a:	2f 4e       	mov	@r14,	r15	
    4f3c:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4f40:	0f 5f       	rla	r15		
    4f42:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4f46:	2f 4f       	mov	@r15,	r15	
    4f48:	4f 4f       	mov.b	r15,	r15	
    4f4a:	8f 10       	swpb	r15		
    4f4c:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[1]>>=4)&0xF]<<12);
    4f50:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4f54:	2e 53       	incd	r14		
    4f56:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f5a:	2f 53       	incd	r15		
    4f5c:	2f 4f       	mov	@r15,	r15	
    4f5e:	12 c3       	clrc			
    4f60:	0f 10       	rrc	r15		
    4f62:	12 c3       	clrc			
    4f64:	0f 10       	rrc	r15		
    4f66:	12 c3       	clrc			
    4f68:	0f 10       	rrc	r15		
    4f6a:	12 c3       	clrc			
    4f6c:	0f 10       	rrc	r15		
    4f6e:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4f72:	2f 4e       	mov	@r14,	r15	
    4f74:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4f78:	0f 5f       	rla	r15		
    4f7a:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4f7e:	2f 4f       	mov	@r15,	r15	
    4f80:	4f 4f       	mov.b	r15,	r15	
    4f82:	8f 10       	swpb	r15		
    4f84:	0f 5f       	rla	r15		
    4f86:	0f 5f       	rla	r15		
    4f88:	0f 5f       	rla	r15		
    4f8a:	0f 5f       	rla	r15		
    4f8c:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		state[1]=temp;
    4f90:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f94:	2f 53       	incd	r15		
    4f96:	9f 44 f4 fe 	mov	-268(r4),0(r15)	;0xfef4(r4), 0x0000(r15)
    4f9a:	00 00 
		
		temp=0;
    4f9c:	84 43 f4 fe 	mov	#0,	-268(r4);r3 As==00, 0xfef4(r4)
        temp |= (u16)(invsBox4[(state[2]&0xF)]);
    4fa0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4fa4:	2f 52       	add	#4,	r15	;r2 As==10
    4fa6:	2f 4f       	mov	@r15,	r15	
    4fa8:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4fac:	0f 5f       	rla	r15		
    4fae:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4fb2:	2f 4f       	mov	@r15,	r15	
    4fb4:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[2]>>=4)&0xF]<<4);
    4fb8:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4fbc:	2e 52       	add	#4,	r14	;r2 As==10
    4fbe:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4fc2:	2f 52       	add	#4,	r15	;r2 As==10
    4fc4:	2f 4f       	mov	@r15,	r15	
    4fc6:	12 c3       	clrc			
    4fc8:	0f 10       	rrc	r15		
    4fca:	12 c3       	clrc			
    4fcc:	0f 10       	rrc	r15		
    4fce:	12 c3       	clrc			
    4fd0:	0f 10       	rrc	r15		
    4fd2:	12 c3       	clrc			
    4fd4:	0f 10       	rrc	r15		
    4fd6:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4fda:	2f 4e       	mov	@r14,	r15	
    4fdc:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4fe0:	0f 5f       	rla	r15		
    4fe2:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    4fe6:	2f 4f       	mov	@r15,	r15	
    4fe8:	0f 5f       	rla	r15		
    4fea:	0f 5f       	rla	r15		
    4fec:	0f 5f       	rla	r15		
    4fee:	0f 5f       	rla	r15		
    4ff0:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[2]>>=4)&0xF]<<8);
    4ff4:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4ff8:	2e 52       	add	#4,	r14	;r2 As==10
    4ffa:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ffe:	2f 52       	add	#4,	r15	;r2 As==10
    5000:	2f 4f       	mov	@r15,	r15	
    5002:	12 c3       	clrc			
    5004:	0f 10       	rrc	r15		
    5006:	12 c3       	clrc			
    5008:	0f 10       	rrc	r15		
    500a:	12 c3       	clrc			
    500c:	0f 10       	rrc	r15		
    500e:	12 c3       	clrc			
    5010:	0f 10       	rrc	r15		
    5012:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    5016:	2f 4e       	mov	@r14,	r15	
    5018:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    501c:	0f 5f       	rla	r15		
    501e:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    5022:	2f 4f       	mov	@r15,	r15	
    5024:	4f 4f       	mov.b	r15,	r15	
    5026:	8f 10       	swpb	r15		
    5028:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[2]>>=4)&0xF]<<12);
    502c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    5030:	2e 52       	add	#4,	r14	;r2 As==10
    5032:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5036:	2f 52       	add	#4,	r15	;r2 As==10
    5038:	2f 4f       	mov	@r15,	r15	
    503a:	12 c3       	clrc			
    503c:	0f 10       	rrc	r15		
    503e:	12 c3       	clrc			
    5040:	0f 10       	rrc	r15		
    5042:	12 c3       	clrc			
    5044:	0f 10       	rrc	r15		
    5046:	12 c3       	clrc			
    5048:	0f 10       	rrc	r15		
    504a:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    504e:	2f 4e       	mov	@r14,	r15	
    5050:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    5054:	0f 5f       	rla	r15		
    5056:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    505a:	2f 4f       	mov	@r15,	r15	
    505c:	4f 4f       	mov.b	r15,	r15	
    505e:	8f 10       	swpb	r15		
    5060:	0f 5f       	rla	r15		
    5062:	0f 5f       	rla	r15		
    5064:	0f 5f       	rla	r15		
    5066:	0f 5f       	rla	r15		
    5068:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		state[2]=temp;
    506c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5070:	2f 52       	add	#4,	r15	;r2 As==10
    5072:	9f 44 f4 fe 	mov	-268(r4),0(r15)	;0xfef4(r4), 0x0000(r15)
    5076:	00 00 
		
		temp=0;
    5078:	84 43 f4 fe 	mov	#0,	-268(r4);r3 As==00, 0xfef4(r4)
        temp |= (u16)(invsBox4[(state[3]&0xF)]);
    507c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5080:	3f 50 06 00 	add	#6,	r15	;#0x0006
    5084:	2f 4f       	mov	@r15,	r15	
    5086:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    508a:	0f 5f       	rla	r15		
    508c:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    5090:	2f 4f       	mov	@r15,	r15	
    5092:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[3]>>=4)&0xF]<<4);
    5096:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    509a:	3e 50 06 00 	add	#6,	r14	;#0x0006
    509e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    50a2:	3f 50 06 00 	add	#6,	r15	;#0x0006
    50a6:	2f 4f       	mov	@r15,	r15	
    50a8:	12 c3       	clrc			
    50aa:	0f 10       	rrc	r15		
    50ac:	12 c3       	clrc			
    50ae:	0f 10       	rrc	r15		
    50b0:	12 c3       	clrc			
    50b2:	0f 10       	rrc	r15		
    50b4:	12 c3       	clrc			
    50b6:	0f 10       	rrc	r15		
    50b8:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    50bc:	2f 4e       	mov	@r14,	r15	
    50be:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    50c2:	0f 5f       	rla	r15		
    50c4:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    50c8:	2f 4f       	mov	@r15,	r15	
    50ca:	0f 5f       	rla	r15		
    50cc:	0f 5f       	rla	r15		
    50ce:	0f 5f       	rla	r15		
    50d0:	0f 5f       	rla	r15		
    50d2:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[3]>>=4)&0xF]<<8);
    50d6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    50da:	3e 50 06 00 	add	#6,	r14	;#0x0006
    50de:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    50e2:	3f 50 06 00 	add	#6,	r15	;#0x0006
    50e6:	2f 4f       	mov	@r15,	r15	
    50e8:	12 c3       	clrc			
    50ea:	0f 10       	rrc	r15		
    50ec:	12 c3       	clrc			
    50ee:	0f 10       	rrc	r15		
    50f0:	12 c3       	clrc			
    50f2:	0f 10       	rrc	r15		
    50f4:	12 c3       	clrc			
    50f6:	0f 10       	rrc	r15		
    50f8:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    50fc:	2f 4e       	mov	@r14,	r15	
    50fe:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    5102:	0f 5f       	rla	r15		
    5104:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    5108:	2f 4f       	mov	@r15,	r15	
    510a:	4f 4f       	mov.b	r15,	r15	
    510c:	8f 10       	swpb	r15		
    510e:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		temp |= (u16)(invsBox4[(state[3]>>=4)&0xF]<<12);
    5112:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    5116:	3e 50 06 00 	add	#6,	r14	;#0x0006
    511a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    511e:	3f 50 06 00 	add	#6,	r15	;#0x0006
    5122:	2f 4f       	mov	@r15,	r15	
    5124:	12 c3       	clrc			
    5126:	0f 10       	rrc	r15		
    5128:	12 c3       	clrc			
    512a:	0f 10       	rrc	r15		
    512c:	12 c3       	clrc			
    512e:	0f 10       	rrc	r15		
    5130:	12 c3       	clrc			
    5132:	0f 10       	rrc	r15		
    5134:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    5138:	2f 4e       	mov	@r14,	r15	
    513a:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    513e:	0f 5f       	rla	r15		
    5140:	3f 50 24 53 	add	#21284,	r15	;#0x5324
    5144:	2f 4f       	mov	@r15,	r15	
    5146:	4f 4f       	mov.b	r15,	r15	
    5148:	8f 10       	swpb	r15		
    514a:	0f 5f       	rla	r15		
    514c:	0f 5f       	rla	r15		
    514e:	0f 5f       	rla	r15		
    5150:	0f 5f       	rla	r15		
    5152:	84 df f4 fe 	bis	r15,	-268(r4);0xfef4(r4)
		state[3]=temp;
    5156:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    515a:	3f 50 06 00 	add	#6,	r15	;#0x0006
    515e:	9f 44 f4 fe 	mov	-268(r4),0(r15)	;0xfef4(r4), 0x0000(r15)
    5162:	00 00 
			subkey[round-1][0] = key[1];
		}
		
//	****************** Key Scheduling End ******************

		for(round=31;round>0;round--)
    5164:	b4 53 e6 fe 	add	#-1,	-282(r4);r3 As==11, 0xfee6(r4)
    5168:	84 93 e6 fe 	tst	-282(r4)	;0xfee6(r4)
    516c:	02 24       	jz	$+6      	;abs 0x5172
    516e:	30 40 2e 4b 	br	#0x4b2e	
		
//	******************* sBox End ***************************
//	****************** pLayer End **************************
		}
//	****************** addRoundkey *************************
 	state[3] ^= aKey[4];
    5172:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5176:	3f 50 06 00 	add	#6,	r15	;#0x0006
    517a:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    517e:	3e 50 06 00 	add	#6,	r14	;#0x0006
    5182:	2d 4e       	mov	@r14,	r13	
    5184:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    5188:	3e 52       	add	#8,	r14	;r2 As==11
    518a:	2e 4e       	mov	@r14,	r14	
    518c:	0e ed       	xor	r13,	r14	
    518e:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[2] ^= aKey[3];
    5192:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5196:	2f 52       	add	#4,	r15	;r2 As==10
    5198:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    519c:	2e 52       	add	#4,	r14	;r2 As==10
    519e:	2d 4e       	mov	@r14,	r13	
    51a0:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    51a4:	3e 50 06 00 	add	#6,	r14	;#0x0006
    51a8:	2e 4e       	mov	@r14,	r14	
    51aa:	0e ed       	xor	r13,	r14	
    51ac:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[1] ^= aKey[2];
    51b0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51b4:	2f 53       	incd	r15		
    51b6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    51ba:	2e 53       	incd	r14		
    51bc:	2d 4e       	mov	@r14,	r13	
    51be:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    51c2:	2e 52       	add	#4,	r14	;r2 As==10
    51c4:	2e 4e       	mov	@r14,	r14	
    51c6:	0e ed       	xor	r13,	r14	
    51c8:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[0] ^= aKey[1];
    51cc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51d0:	2e 4f       	mov	@r15,	r14	
    51d2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    51d6:	2f 53       	incd	r15		
    51d8:	2f 4f       	mov	@r15,	r15	
    51da:	0e ef       	xor	r15,	r14	
    51dc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51e0:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)

//	****************** addRoundkey End *********************
}
    51e4:	31 50 18 01 	add	#280,	r1	;#0x0118
    51e8:	34 41       	pop	r4		
    51ea:	30 41       	ret			

000051ec <delay>:
/**************************************************/
/********************* DELAY **********************/
/**************************************************/

void delay(unsigned int d) 
{
    51ec:	04 12       	push	r4		
    51ee:	04 41       	mov	r1,	r4	
    51f0:	24 53       	incd	r4		
    51f2:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    51f6:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    51fa:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    51fe:	0d 3c       	jmp	$+28     	;abs 0x521a
    {
      for (i = 0; i<d; i++) 
    5200:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    5204:	04 3c       	jmp	$+10     	;abs 0x520e
	{
	  nop();
    5206:	03 43       	nop			
	  nop();
    5208:	03 43       	nop			
void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    {
      for (i = 0; i<d; i++) 
    520a:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    520e:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    5212:	f8 ff 
    5214:	f8 2b       	jnc	$-14     	;abs 0x5206
/**************************************************/

void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    5216:	94 53 fa ff 	inc	-6(r4)		;0xfffa(r4)
    521a:	b4 90 ff 00 	cmp	#255,	-6(r4)	;#0x00ff, 0xfffa(r4)
    521e:	fa ff 
    5220:	ef 2b       	jnc	$-32     	;abs 0x5200
	{
	  nop();
	  nop();
	}
    }
}
    5222:	31 50 06 00 	add	#6,	r1	;#0x0006
    5226:	34 41       	pop	r4		
    5228:	30 41       	ret			

0000522a <uart1_init>:

#define UART1_BIT_RX (1 << UART1_PIN_RX)
#define UART1_BIT_TX (1 << UART1_PIN_TX)

int uart1_init()
{
    522a:	04 12       	push	r4		
    522c:	04 41       	mov	r1,	r4	
    522e:	24 53       	incd	r4		

  WDTCTL = WDTPW + WDTHOLD;
    5230:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    5234:	20 01 

  P1IE   = 0x00;        // Interrupt enable
    5236:	c2 43 25 00 	mov.b	#0,	&0x0025	;r3 As==00
  P2IE   = 0x00;        // 0:disable 1:enable
    523a:	c2 43 2d 00 	mov.b	#0,	&0x002d	;r3 As==00

  //Init of MSP430 Usart1 pins
  P3SEL |= (UART1_BIT_RX | UART1_BIT_TX);
    523e:	5f 42 1b 00 	mov.b	&0x001b,r15	
    5242:	7f d0 c0 ff 	bis.b	#-64,	r15	;#0xffc0
    5246:	c2 4f 1b 00 	mov.b	r15,	&0x001b	

  //Init of USART1 Module
  U1ME  |= UTXE1|URXE1;           //Enable USART1 transmiter and receiver (UART mode)
    524a:	5f 42 05 00 	mov.b	&0x0005,r15	
    524e:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    5252:	c2 4f 05 00 	mov.b	r15,	&0x0005	
  
  U1CTL  = SWRST;                 //reset
    5256:	d2 43 78 00 	mov.b	#1,	&0x0078	;r3 As==01
  U1CTL  = CHAR;                  //init & release reset
    525a:	f2 40 10 00 	mov.b	#16,	&0x0078	;#0x0010
    525e:	78 00 
  
  U1TCTL = SSEL1 | TXEPT;        //use SMCLK 
    5260:	f2 40 21 00 	mov.b	#33,	&0x0079	;#0x0021
    5264:	79 00 
  U1RCTL = 0;
    5266:	c2 43 7a 00 	mov.b	#0,	&0x007a	;r3 As==00
  // 38400 @ SMCLK 1MHz
#define U1BR1_INIT        0
#define U1BR0_INIT        0x1B
#define U1MCTL_INIT       0x03
  
  U1BR1  = U1BR1_INIT;
    526a:	c2 43 7d 00 	mov.b	#0,	&0x007d	;r3 As==00
  U1BR0  = U1BR0_INIT;
    526e:	f2 40 1b 00 	mov.b	#27,	&0x007c	;#0x001b
    5272:	7c 00 
  U1MCTL = U1MCTL_INIT;
    5274:	f2 40 03 00 	mov.b	#3,	&0x007b	;#0x0003
    5278:	7b 00 

  delay(0x800);
    527a:	3f 40 00 08 	mov	#2048,	r15	;#0x0800
    527e:	b0 12 ec 51 	call	#0x51ec	
  return 0;
    5282:	0f 43       	clr	r15		
}
    5284:	34 41       	pop	r4		
    5286:	30 41       	ret			

00005288 <uart1_putchar>:

int uart1_putchar(int c)
{
    5288:	04 12       	push	r4		
    528a:	04 41       	mov	r1,	r4	
    528c:	24 53       	incd	r4		
    528e:	21 83       	decd	r1		
    5290:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  U1TXBUF = c;
    5294:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5298:	4f 4f       	mov.b	r15,	r15	
    529a:	c2 4f 7f 00 	mov.b	r15,	&0x007f	
  while ((U1TCTL & TXEPT) != TXEPT);
    529e:	03 43       	nop			
    52a0:	5f 42 79 00 	mov.b	&0x0079,r15	
    52a4:	4f 4f       	mov.b	r15,	r15	
    52a6:	1f f3       	and	#1,	r15	;r3 As==01
    52a8:	0f 93       	tst	r15		
    52aa:	fa 27       	jz	$-10     	;abs 0x52a0
  return (unsigned char)c;
    52ac:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    52b0:	4f 4f       	mov.b	r15,	r15	
    52b2:	4f 4f       	mov.b	r15,	r15	
}
    52b4:	21 53       	incd	r1		
    52b6:	34 41       	pop	r4		
    52b8:	30 41       	ret			

000052ba <putchar>:
/**************************************************/
/******************** PUT CHAR *********************/
/**************************************************/

int putchar(int c)
{
    52ba:	04 12       	push	r4		
    52bc:	04 41       	mov	r1,	r4	
    52be:	24 53       	incd	r4		
    52c0:	21 83       	decd	r1		
    52c2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  return uart1_putchar(c);
    52c6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    52ca:	b0 12 88 52 	call	#0x5288	
}
    52ce:	21 53       	incd	r1		
    52d0:	34 41       	pop	r4		
    52d2:	30 41       	ret			

000052d4 <start_encrypt>:
/******************** END EXPE*********************/
/**************************************************/

void
start_encrypt()
{
    52d4:	04 12       	push	r4		
    52d6:	04 41       	mov	r1,	r4	
    52d8:	24 53       	incd	r4		
  ;
}
    52da:	34 41       	pop	r4		
    52dc:	30 41       	ret			

000052de <start_decrypt>:
void
start_decrypt()
{
    52de:	04 12       	push	r4		
    52e0:	04 41       	mov	r1,	r4	
    52e2:	24 53       	incd	r4		
  ;
}
    52e4:	34 41       	pop	r4		
    52e6:	30 41       	ret			

000052e8 <end_expe>:


void
end_expe()
{
    52e8:	04 12       	push	r4		
    52ea:	04 41       	mov	r1,	r4	
    52ec:	24 53       	incd	r4		
  ;
}
    52ee:	34 41       	pop	r4		
    52f0:	30 41       	ret			

000052f2 <_unexpected_>:
    52f2:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	b0 40 b0 40 b0 40 b0 40 b0 40 b0 40 b0 40 b0 40     .@.@.@.@.@.@.@.@
    fff0:	b0 40 b0 40 b0 40 b0 40 b0 40 b0 40 b0 40 00 40     .@.@.@.@.@.@.@.@
