
present.elf:     file format elf32-msp430

SYMBOL TABLE:
00004000 l    d  .text	00000000 .text
0000515e l    d  .rodata	00000000 .rodata
00001100 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 present_speed.c
000040a2 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 tools.c
00005124 g     F .text	0000001a putchar
00000057 g       *ABS*	00000000 __BCSCTL1
0000005a g       *ABS*	00000000 __CACTL2
00000174 g       *ABS*	00000000 __TACCR1
0000527e g     O .rodata	00000010 decBox3
00000084 g       *ABS*	00000000 __ADC12MCTL4
00000000 g       *ABS*	00000000 __data_size
0000015a g       *ABS*	00000000 __ADC12MEM13
00000052 g       *ABS*	00000000 __I2CNDAT
000040a2  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00000024 g       *ABS*	00000000 __P1IES
0000007b g       *ABS*	00000000 __U1MCTL
000001f6 g       *ABS*	00000000 __DMA2SZ
000040a2  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
0000515e g     O .rodata	00000020 sBox4
00000076 g       *ABS*	00000000 __I2CDRW
00004804 g     F .text	00000852 Decrypt
0000007e g       *ABS*	00000000 __U1RXBUF
00000138 g       *ABS*	00000000 __OP2
00000076 g       *ABS*	00000000 __U0RXBUF
000001a4 g       *ABS*	00000000 __ADC12IFG
0000012e g       *ABS*	00000000 __TAIV
000001e6 g       *ABS*	00000000 __DMA0SZ
00000000 g       .vectors	00000000 _efartext
0000007c g       *ABS*	00000000 __U1BR0
00000130 g       *ABS*	00000000 __MPY
00000001 g       *ABS*	00000000 __IE2
0000013a g       *ABS*	00000000 __RESLO
00000136 g       *ABS*	00000000 __MACS
00000087 g       *ABS*	00000000 __ADC12MCTL7
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
000052ae g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
0000001d g       *ABS*	00000000 __P4OUT
000001f4 g       *ABS*	00000000 __DMA2DA
00000000 g       *ABS*	00000000 __bss_size
00000081 g       *ABS*	00000000 __ADC12MCTL1
00005094 g     F .text	0000005e uart1_init
00000152 g       *ABS*	00000000 __ADC12MEM9
00004000  w      .text	00000000 __watchdog_support
0000409c  w      .text	00000000 __stop_progExec__
00000050 g       *ABS*	00000000 __I2CIE
0000002d g       *ABS*	00000000 __P2IE
000001e4 g       *ABS*	00000000 __DMA0DA
000051fe g     O .rodata	00000080 mul4mod63
00000192 g       *ABS*	00000000 __TBCCR0
000040a2  w      .text	00000000 __isr_11
00000186 g       *ABS*	00000000 __TBCCTL2
00005152 g     F .text	0000000a end_expe
00000025 g       *ABS*	00000000 __P1IE
000001a0 g       *ABS*	00000000 __ADC12CTL0
00000072 g       *ABS*	00000000 __I2CDCTL
00000073 g       *ABS*	00000000 __U0MCTL
0000007a g       *ABS*	00000000 __U1RCTL
00000082 g       *ABS*	00000000 __ADC12MCTL2
0000019c g       *ABS*	00000000 __TBCCR5
00000035 g       *ABS*	00000000 __P6OUT
00000034 g       *ABS*	00000000 __P6IN
000001c8 g       *ABS*	00000000 __DAC12_0DAT
00000182 g       *ABS*	00000000 __TBCCTL0
0000019e g       *ABS*	00000000 __TBCCR6
000040a2  w      .text	00000000 __isr_5
0000528e g     O .rodata	00000020 invsBox4
000052ae g       *ABS*	00000000 __data_load_start
000040a2 g       .text	00000000 __dtors_end
000001ea g       *ABS*	00000000 __DMA1SA
00000088 g       *ABS*	00000000 __ADC12MCTL8
00000166 g       *ABS*	00000000 __TACCTL2
000001f0 g       *ABS*	00000000 __DMA2CTL
000040a2  w      .text	00000000 __isr_2
00000156 g       *ABS*	00000000 __ADC12MEM11
00000160 g       *ABS*	00000000 __TACTL
00000158 g       *ABS*	00000000 __ADC12MEM12
00000071 g       *ABS*	00000000 __I2CTCTL
0000012c g       *ABS*	00000000 __FCTL3
000040a2  w      .text	00000000 __isr_10
00000148 g       *ABS*	00000000 __ADC12MEM4
0000011a g       *ABS*	00000000 __I2CSA
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
0000008d g       *ABS*	00000000 __ADC12MCTL13
0000014c g       *ABS*	00000000 __ADC12MEM6
00000023 g       *ABS*	00000000 __P1IFG
0000013c g       *ABS*	00000000 __RESHI
00000072 g       *ABS*	00000000 __U0RCTL
00000172 g       *ABS*	00000000 __TACCR0
00000071 g       *ABS*	00000000 __U0TCTL
00000056 g       *ABS*	00000000 __DCOCTL
00000085 g       *ABS*	00000000 __ADC12MCTL5
00000003 g       *ABS*	00000000 __IFG2
00000005 g       *ABS*	00000000 __ME2
00001100 g     O .noinit	00000002 __wdt_clear_value
00000079 g       *ABS*	00000000 __U1TCTL
0000001b g       *ABS*	00000000 __P3SEL
000001e0 g       *ABS*	00000000 __DMA0CTL
000040a2  w      .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
00000028 g       *ABS*	00000000 __P2IN
0000014e g       *ABS*	00000000 __ADC12MEM7
00000184 g       *ABS*	00000000 __TBCCTL1
0000005b g       *ABS*	00000000 __CAPD
00000075 g       *ABS*	00000000 __I2CSCLL
000040a2  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00004028  w      .text	00000000 __do_clear_bss
0000008f g       *ABS*	00000000 __ADC12MCTL15
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
0000015c g       *ABS*	00000000 __ADC12MEM14
00000026 g       *ABS*	00000000 __P1SEL
00000198 g       *ABS*	00000000 __TBCCR3
00000080 g       *ABS*	00000000 __ADC12MCTL0
00000140 g       *ABS*	00000000 __ADC12MEM0
00000074 g       *ABS*	00000000 __U0BR0
00000051 g       *ABS*	00000000 __I2CIFG
0000515c  w      .text	00000000 _unexpected_
000040a2  w      .text	00000000 __isr_8
0000014a g       *ABS*	00000000 __ADC12MEM5
00000070 g       *ABS*	00000000 __U0CTL
0000018a g       *ABS*	00000000 __TBCCTL4
00000073 g       *ABS*	00000000 __I2CPSC
0000008e g       *ABS*	00000000 __ADC12MCTL14
000040a2  w      .text	00000000 __isr_3
000001a6 g       *ABS*	00000000 __ADC12IE
000050f2 g     F .text	00000032 uart1_putchar
00000144 g       *ABS*	00000000 __ADC12MEM2
000001ee g       *ABS*	00000000 __DMA1SZ
00000033 g       *ABS*	00000000 __P5SEL
00000030 g       *ABS*	00000000 __P5IN
00004000  w      .text	00000000 _reset_vector__
000040a2 g       .text	00000000 __ctors_start
000040a2  w      .text	00000000 __isr_12
00000036 g       *ABS*	00000000 __P6DIR
00000018 g       *ABS*	00000000 __P3IN
00004010  w      .text	00000000 __do_copy_data
00000150 g       *ABS*	00000000 __ADC12MEM8
00000142 g       *ABS*	00000000 __ADC12MEM1
00001100 g       .rodata	00000000 __bss_start
0000007d g       *ABS*	00000000 __U1BR1
0000403e g     F .text	0000005e main
00000176 g       *ABS*	00000000 __TACCR2
0000019a g       *ABS*	00000000 __TBCCR4
000040a2  w      .text	00000000 __isr_13
00000078 g       *ABS*	00000000 __U1CTL
000001e2 g       *ABS*	00000000 __DMA0SA
00000170 g       *ABS*	00000000 __TAR
00000124 g       *ABS*	00000000 __DMACTL1
0000001e g       *ABS*	00000000 __P4DIR
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
00000154 g       *ABS*	00000000 __ADC12MEM10
000001f2 g       *ABS*	00000000 __DMA2SA
0000002a g       *ABS*	00000000 __P2DIR
00000089 g       *ABS*	00000000 __ADC12MCTL9
0000008a g       *ABS*	00000000 __ADC12MCTL10
00005056 g     F .text	0000003e delay
00000032 g       *ABS*	00000000 __P5DIR
000001c2 g       *ABS*	00000000 __DAC12_1CTL
000001a2 g       *ABS*	00000000 __ADC12CTL1
000001a8 g       *ABS*	00000000 __ADC12IV
000001e8 g       *ABS*	00000000 __DMA1CTL
00000075 g       *ABS*	00000000 __U0BR1
000040a2  w      .text	00000000 __isr_9
0000018c g       *ABS*	00000000 __TBCCTL5
0000400c  w      .text	00000000 __init_stack
00000086 g       *ABS*	00000000 __ADC12MCTL6
00000188 g       *ABS*	00000000 __TBCCTL3
00000019 g       *ABS*	00000000 __P3OUT
000001ca g       *ABS*	00000000 __DAC12_1DAT
000040a2 g       .text	00000000 __dtors_start
000040a2  w      .text	00000000 __isr_6
000040a2 g       .text	00000000 __ctors_end
00000132 g       *ABS*	00000000 __MPYS
0000011c g       *ABS*	00000000 __I2CIV
00000004 g       *ABS*	00000000 __ME1
00003900 g       *ABS*	00000000 __stack
00000037 g       *ABS*	00000000 __P6SEL
000040a2  w      .text	00000000 __isr_1
0000008c g       *ABS*	00000000 __ADC12MCTL12
00001100 g       .rodata	00000000 _edata
00000077 g       *ABS*	00000000 __U0TXBUF
00001102 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
0000011e g       *ABS*	00000000 __TBIV
000001c0 g       *ABS*	00000000 __DAC12_0CTL
0000513e g     F .text	0000000a start_encrypt
0000015e g       *ABS*	00000000 __ADC12MEM15
00000134 g       *ABS*	00000000 __MAC
00000058 g       *ABS*	00000000 __BCSCTL2
0000409c  w      .text	00000000 _endless_loop__
00000122 g       *ABS*	00000000 __DMACTL0
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
00000146 g       *ABS*	00000000 __ADC12MEM3
00000076 g       *ABS*	00000000 __I2CDRB
00000118 g       *ABS*	00000000 __I2COA
00000164 g       *ABS*	00000000 __TACCTL1
0000007f g       *ABS*	00000000 __U1TXBUF
00000055 g       *ABS*	00000000 __SVSCTL
00004010  w      .text	00000000 __low_level_init
00005148 g     F .text	0000000a start_decrypt
00001100 g       .rodata	00000000 __data_start
0000018e g       *ABS*	00000000 __TBCCTL6
00000074 g       *ABS*	00000000 __I2CSCLH
000001ec g       *ABS*	00000000 __DMA1DA
00000120 g       *ABS*	00000000 __WDTCTL
00000083 g       *ABS*	00000000 __ADC12MCTL3
00000000 g       *ABS*	00000000 __IE1
00000059 g       *ABS*	00000000 __CACTL1
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
000040a6 g     F .text	0000075e Encrypt
0000008b g       *ABS*	00000000 __ADC12MCTL11
0000517e g     O .rodata	00000080 mul16mod63
0000013e g       *ABS*	00000000 __SUMEXT
00000031 g       *ABS*	00000000 __P5OUT



Disassembly of section .text:

00004000 <__watchdog_support>:
    4000:	55 42 20 01 	mov.b	&0x0120,r5	
    4004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    4008:	82 45 00 11 	mov	r5,	&0x1100	

0000400c <__init_stack>:
    400c:	31 40 00 39 	mov	#14592,	r1	;#0x3900

00004010 <__do_copy_data>:
    4010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    4014:	0f 93       	tst	r15		
    4016:	08 24       	jz	$+18     	;abs 0x4028
    4018:	92 42 00 11 	mov	&0x1100,&0x0120	
    401c:	20 01 
    401e:	2f 83       	decd	r15		
    4020:	9f 4f ae 52 	mov	21166(r15),4352(r15);0x52ae(r15), 0x1100(r15)
    4024:	00 11 
    4026:	f8 23       	jnz	$-14     	;abs 0x4018

00004028 <__do_clear_bss>:
    4028:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    402c:	0f 93       	tst	r15		
    402e:	07 24       	jz	$+16     	;abs 0x403e
    4030:	92 42 00 11 	mov	&0x1100,&0x0120	
    4034:	20 01 
    4036:	1f 83       	dec	r15		
    4038:	cf 43 00 11 	mov.b	#0,	4352(r15);r3 As==00, 0x1100(r15)
    403c:	f9 23       	jnz	$-12     	;abs 0x4030

0000403e <main>:
}



int main(void)
{
    403e:	04 41       	mov	r1,	r4	
    4040:	24 53       	incd	r4		
    4042:	31 50 ee ff 	add	#-18,	r1	;#0xffee
	#ifdef PRINT
	uart1_init();
#endif
// Input values
	u16 key[5]={0x0000,0x0000,0x0000,0x0000,0x0000};
    4046:	84 43 ec ff 	mov	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    404a:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    404e:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0(r4)
    4052:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2(r4)
    4056:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
	u16 state[4]={0x0000,0x0000,0x0000,0x0000};
    405a:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    405e:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    4062:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    4066:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)

	START_ENCRYPT();
    406a:	b0 12 3e 51 	call	#0x513e	
  
	Encrypt(state,key);
    406e:	0f 44       	mov	r4,	r15	
    4070:	3f 50 f6 ff 	add	#-10,	r15	;#0xfff6
    4074:	0e 44       	mov	r4,	r14	
    4076:	3e 50 ec ff 	add	#-20,	r14	;#0xffec
    407a:	b0 12 a6 40 	call	#0x40a6	

	START_DECRYPT();
    407e:	b0 12 48 51 	call	#0x5148	

	Decrypt(state,key);
    4082:	0f 44       	mov	r4,	r15	
    4084:	3f 50 f6 ff 	add	#-10,	r15	;#0xfff6
    4088:	0e 44       	mov	r4,	r14	
    408a:	3e 50 ec ff 	add	#-20,	r14	;#0xffec
    408e:	b0 12 04 48 	call	#0x4804	
#ifdef PRINT
	ps(state);
	printf("\nFIN\n");
#endif
		
	END_EXPE();
    4092:	b0 12 52 51 	call	#0x5152	
	return 0;
    4096:	0f 43       	clr	r15		
}
    4098:	31 50 12 00 	add	#18,	r1	;#0x0012

0000409c <__stop_progExec__>:
    409c:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    40a0:	fd 3f       	jmp	$-4      	;abs 0x409c

000040a2 <__ctors_end>:
    40a2:	30 40 5c 51 	br	#0x515c	

000040a6 <Encrypt>:
		return;
}
#endif

 void Encrypt(u16 *state, const u16 *aKey)
{	
    40a6:	04 12       	push	r4		
    40a8:	04 41       	mov	r1,	r4	
    40aa:	24 53       	incd	r4		
    40ac:	31 50 e0 ff 	add	#-32,	r1	;#0xffe0
    40b0:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    40b4:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
// counter
	u16 round=1;
    40b8:	94 43 de ff 	mov	#1,	-34(r4)	;r3 As==01, 0xffde(r4)
	u16 key[5];
	u16 temp_0;
	u16 temp_1;
// Variables pLayer
	u16 pTemp[4];
	u16 j=1;
    40bc:	94 43 e0 ff 	mov	#1,	-32(r4)	;r3 As==01, 0xffe0(r4)

	key[4] = aKey[4];
    40c0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40c4:	1f 4f 08 00 	mov	8(r15),	r15	;0x0008(r15)
    40c8:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
	key[3] = aKey[3];
    40cc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40d0:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    40d4:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
	key[2] = aKey[2];
    40d8:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40dc:	1f 4f 04 00 	mov	4(r15),	r15	;0x0004(r15)
    40e0:	84 4f ec ff 	mov	r15,	-20(r4)	;0xffec(r4)
	key[1] = aKey[1];
    40e4:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40e8:	1f 4f 02 00 	mov	2(r15),	r15	;0x0002(r15)
    40ec:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
	key[0] = aKey[0];
    40f0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    40f4:	2f 4f       	mov	@r15,	r15	
    40f6:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)
	for(round=1;round<32;round++)
    40fa:	94 43 de ff 	mov	#1,	-34(r4)	;r3 As==01, 0xffde(r4)
    40fe:	30 40 90 47 	br	#0x4790	
	{
//	****************** addRoundkey *************************
		state[3] ^= key[4];
    4102:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4106:	3f 50 06 00 	add	#6,	r15	;#0x0006
    410a:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    410e:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4112:	2d 4e       	mov	@r14,	r13	
    4114:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    4118:	0e ed       	xor	r13,	r14	
    411a:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[2] ^= key[3];
    411e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4122:	2f 52       	add	#4,	r15	;r2 As==10
    4124:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4128:	2e 52       	add	#4,	r14	;r2 As==10
    412a:	2d 4e       	mov	@r14,	r13	
    412c:	1e 44 ee ff 	mov	-18(r4),r14	;0xffee(r4)
    4130:	0e ed       	xor	r13,	r14	
    4132:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[1] ^= key[2];
    4136:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    413a:	2f 53       	incd	r15		
    413c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4140:	2e 53       	incd	r14		
    4142:	2d 4e       	mov	@r14,	r13	
    4144:	1e 44 ec ff 	mov	-20(r4),r14	;0xffec(r4)
    4148:	0e ed       	xor	r13,	r14	
    414a:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[0] ^= key[1];
    414e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4152:	2e 4f       	mov	@r15,	r14	
    4154:	1f 44 ea ff 	mov	-22(r4),r15	;0xffea(r4)
    4158:	0e ef       	xor	r15,	r14	
    415a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    415e:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
//	****************** addRoundkey End *********************
//	******************* sBox *******************************
        sTemp=0;
    4162:	84 43 e2 ff 	mov	#0,	-30(r4)	;r3 As==00, 0xffe2(r4)
        sTemp |= (u16)(sBox4[(state[0]&0xF)]);
    4166:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    416a:	2f 4f       	mov	@r15,	r15	
    416c:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4170:	0f 5f       	rla	r15		
    4172:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    4176:	2f 4f       	mov	@r15,	r15	
    4178:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[0]>>=4)&0xF]<<4);
    417c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4180:	2f 4f       	mov	@r15,	r15	
    4182:	12 c3       	clrc			
    4184:	0f 10       	rrc	r15		
    4186:	12 c3       	clrc			
    4188:	0f 10       	rrc	r15		
    418a:	12 c3       	clrc			
    418c:	0f 10       	rrc	r15		
    418e:	12 c3       	clrc			
    4190:	0f 10       	rrc	r15		
    4192:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4196:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    419a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    419e:	2f 4f       	mov	@r15,	r15	
    41a0:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    41a4:	0f 5f       	rla	r15		
    41a6:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    41aa:	2f 4f       	mov	@r15,	r15	
    41ac:	0f 5f       	rla	r15		
    41ae:	0f 5f       	rla	r15		
    41b0:	0f 5f       	rla	r15		
    41b2:	0f 5f       	rla	r15		
    41b4:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[0]>>=4)&0xF]<<8);
    41b8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    41bc:	2f 4f       	mov	@r15,	r15	
    41be:	12 c3       	clrc			
    41c0:	0f 10       	rrc	r15		
    41c2:	12 c3       	clrc			
    41c4:	0f 10       	rrc	r15		
    41c6:	12 c3       	clrc			
    41c8:	0f 10       	rrc	r15		
    41ca:	12 c3       	clrc			
    41cc:	0f 10       	rrc	r15		
    41ce:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    41d2:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    41d6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    41da:	2f 4f       	mov	@r15,	r15	
    41dc:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    41e0:	0f 5f       	rla	r15		
    41e2:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    41e6:	2f 4f       	mov	@r15,	r15	
    41e8:	4f 4f       	mov.b	r15,	r15	
    41ea:	8f 10       	swpb	r15		
    41ec:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[0]>>=4)&0xF]<<12);
    41f0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    41f4:	2f 4f       	mov	@r15,	r15	
    41f6:	12 c3       	clrc			
    41f8:	0f 10       	rrc	r15		
    41fa:	12 c3       	clrc			
    41fc:	0f 10       	rrc	r15		
    41fe:	12 c3       	clrc			
    4200:	0f 10       	rrc	r15		
    4202:	12 c3       	clrc			
    4204:	0f 10       	rrc	r15		
    4206:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    420a:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    420e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4212:	2f 4f       	mov	@r15,	r15	
    4214:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4218:	0f 5f       	rla	r15		
    421a:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    421e:	2f 4f       	mov	@r15,	r15	
    4220:	4f 4f       	mov.b	r15,	r15	
    4222:	8f 10       	swpb	r15		
    4224:	0f 5f       	rla	r15		
    4226:	0f 5f       	rla	r15		
    4228:	0f 5f       	rla	r15		
    422a:	0f 5f       	rla	r15		
    422c:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		state[0]=sTemp;
    4230:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4234:	9f 44 e2 ff 	mov	-30(r4),0(r15)	;0xffe2(r4), 0x0000(r15)
    4238:	00 00 
		
        sTemp=0;
    423a:	84 43 e2 ff 	mov	#0,	-30(r4)	;r3 As==00, 0xffe2(r4)
        sTemp |= (u16)(sBox4[(state[1]&0xF)]);
    423e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4242:	2f 53       	incd	r15		
    4244:	2f 4f       	mov	@r15,	r15	
    4246:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    424a:	0f 5f       	rla	r15		
    424c:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    4250:	2f 4f       	mov	@r15,	r15	
    4252:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[1]>>=4)&0xF]<<4);
    4256:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    425a:	2e 53       	incd	r14		
    425c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4260:	2f 53       	incd	r15		
    4262:	2f 4f       	mov	@r15,	r15	
    4264:	12 c3       	clrc			
    4266:	0f 10       	rrc	r15		
    4268:	12 c3       	clrc			
    426a:	0f 10       	rrc	r15		
    426c:	12 c3       	clrc			
    426e:	0f 10       	rrc	r15		
    4270:	12 c3       	clrc			
    4272:	0f 10       	rrc	r15		
    4274:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4278:	2f 4e       	mov	@r14,	r15	
    427a:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    427e:	0f 5f       	rla	r15		
    4280:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    4284:	2f 4f       	mov	@r15,	r15	
    4286:	0f 5f       	rla	r15		
    4288:	0f 5f       	rla	r15		
    428a:	0f 5f       	rla	r15		
    428c:	0f 5f       	rla	r15		
    428e:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[1]>>=4)&0xF]<<8);
    4292:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4296:	2e 53       	incd	r14		
    4298:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    429c:	2f 53       	incd	r15		
    429e:	2f 4f       	mov	@r15,	r15	
    42a0:	12 c3       	clrc			
    42a2:	0f 10       	rrc	r15		
    42a4:	12 c3       	clrc			
    42a6:	0f 10       	rrc	r15		
    42a8:	12 c3       	clrc			
    42aa:	0f 10       	rrc	r15		
    42ac:	12 c3       	clrc			
    42ae:	0f 10       	rrc	r15		
    42b0:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    42b4:	2f 4e       	mov	@r14,	r15	
    42b6:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    42ba:	0f 5f       	rla	r15		
    42bc:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    42c0:	2f 4f       	mov	@r15,	r15	
    42c2:	4f 4f       	mov.b	r15,	r15	
    42c4:	8f 10       	swpb	r15		
    42c6:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[1]>>=4)&0xF]<<12);
    42ca:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    42ce:	2e 53       	incd	r14		
    42d0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    42d4:	2f 53       	incd	r15		
    42d6:	2f 4f       	mov	@r15,	r15	
    42d8:	12 c3       	clrc			
    42da:	0f 10       	rrc	r15		
    42dc:	12 c3       	clrc			
    42de:	0f 10       	rrc	r15		
    42e0:	12 c3       	clrc			
    42e2:	0f 10       	rrc	r15		
    42e4:	12 c3       	clrc			
    42e6:	0f 10       	rrc	r15		
    42e8:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    42ec:	2f 4e       	mov	@r14,	r15	
    42ee:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    42f2:	0f 5f       	rla	r15		
    42f4:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    42f8:	2f 4f       	mov	@r15,	r15	
    42fa:	4f 4f       	mov.b	r15,	r15	
    42fc:	8f 10       	swpb	r15		
    42fe:	0f 5f       	rla	r15		
    4300:	0f 5f       	rla	r15		
    4302:	0f 5f       	rla	r15		
    4304:	0f 5f       	rla	r15		
    4306:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		state[1]=sTemp;
    430a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    430e:	2f 53       	incd	r15		
    4310:	9f 44 e2 ff 	mov	-30(r4),0(r15)	;0xffe2(r4), 0x0000(r15)
    4314:	00 00 
		
		sTemp=0;
    4316:	84 43 e2 ff 	mov	#0,	-30(r4)	;r3 As==00, 0xffe2(r4)
        sTemp |= (u16)(sBox4[(state[2]&0xF)]);
    431a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    431e:	2f 52       	add	#4,	r15	;r2 As==10
    4320:	2f 4f       	mov	@r15,	r15	
    4322:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4326:	0f 5f       	rla	r15		
    4328:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    432c:	2f 4f       	mov	@r15,	r15	
    432e:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[2]>>=4)&0xF]<<4);
    4332:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4336:	2e 52       	add	#4,	r14	;r2 As==10
    4338:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    433c:	2f 52       	add	#4,	r15	;r2 As==10
    433e:	2f 4f       	mov	@r15,	r15	
    4340:	12 c3       	clrc			
    4342:	0f 10       	rrc	r15		
    4344:	12 c3       	clrc			
    4346:	0f 10       	rrc	r15		
    4348:	12 c3       	clrc			
    434a:	0f 10       	rrc	r15		
    434c:	12 c3       	clrc			
    434e:	0f 10       	rrc	r15		
    4350:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4354:	2f 4e       	mov	@r14,	r15	
    4356:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    435a:	0f 5f       	rla	r15		
    435c:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    4360:	2f 4f       	mov	@r15,	r15	
    4362:	0f 5f       	rla	r15		
    4364:	0f 5f       	rla	r15		
    4366:	0f 5f       	rla	r15		
    4368:	0f 5f       	rla	r15		
    436a:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[2]>>=4)&0xF]<<8);
    436e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4372:	2e 52       	add	#4,	r14	;r2 As==10
    4374:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4378:	2f 52       	add	#4,	r15	;r2 As==10
    437a:	2f 4f       	mov	@r15,	r15	
    437c:	12 c3       	clrc			
    437e:	0f 10       	rrc	r15		
    4380:	12 c3       	clrc			
    4382:	0f 10       	rrc	r15		
    4384:	12 c3       	clrc			
    4386:	0f 10       	rrc	r15		
    4388:	12 c3       	clrc			
    438a:	0f 10       	rrc	r15		
    438c:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4390:	2f 4e       	mov	@r14,	r15	
    4392:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4396:	0f 5f       	rla	r15		
    4398:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    439c:	2f 4f       	mov	@r15,	r15	
    439e:	4f 4f       	mov.b	r15,	r15	
    43a0:	8f 10       	swpb	r15		
    43a2:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[2]>>=4)&0xF]<<12);
    43a6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    43aa:	2e 52       	add	#4,	r14	;r2 As==10
    43ac:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43b0:	2f 52       	add	#4,	r15	;r2 As==10
    43b2:	2f 4f       	mov	@r15,	r15	
    43b4:	12 c3       	clrc			
    43b6:	0f 10       	rrc	r15		
    43b8:	12 c3       	clrc			
    43ba:	0f 10       	rrc	r15		
    43bc:	12 c3       	clrc			
    43be:	0f 10       	rrc	r15		
    43c0:	12 c3       	clrc			
    43c2:	0f 10       	rrc	r15		
    43c4:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    43c8:	2f 4e       	mov	@r14,	r15	
    43ca:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    43ce:	0f 5f       	rla	r15		
    43d0:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    43d4:	2f 4f       	mov	@r15,	r15	
    43d6:	4f 4f       	mov.b	r15,	r15	
    43d8:	8f 10       	swpb	r15		
    43da:	0f 5f       	rla	r15		
    43dc:	0f 5f       	rla	r15		
    43de:	0f 5f       	rla	r15		
    43e0:	0f 5f       	rla	r15		
    43e2:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		state[2]=sTemp;
    43e6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43ea:	2f 52       	add	#4,	r15	;r2 As==10
    43ec:	9f 44 e2 ff 	mov	-30(r4),0(r15)	;0xffe2(r4), 0x0000(r15)
    43f0:	00 00 
		
		sTemp=0;
    43f2:	84 43 e2 ff 	mov	#0,	-30(r4)	;r3 As==00, 0xffe2(r4)
        sTemp |= (u16)(sBox4[(state[3]&0xF)]);
    43f6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43fa:	3f 50 06 00 	add	#6,	r15	;#0x0006
    43fe:	2f 4f       	mov	@r15,	r15	
    4400:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4404:	0f 5f       	rla	r15		
    4406:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    440a:	2f 4f       	mov	@r15,	r15	
    440c:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[3]>>=4)&0xF]<<4);
    4410:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4414:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4418:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    441c:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4420:	2f 4f       	mov	@r15,	r15	
    4422:	12 c3       	clrc			
    4424:	0f 10       	rrc	r15		
    4426:	12 c3       	clrc			
    4428:	0f 10       	rrc	r15		
    442a:	12 c3       	clrc			
    442c:	0f 10       	rrc	r15		
    442e:	12 c3       	clrc			
    4430:	0f 10       	rrc	r15		
    4432:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4436:	2f 4e       	mov	@r14,	r15	
    4438:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    443c:	0f 5f       	rla	r15		
    443e:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    4442:	2f 4f       	mov	@r15,	r15	
    4444:	0f 5f       	rla	r15		
    4446:	0f 5f       	rla	r15		
    4448:	0f 5f       	rla	r15		
    444a:	0f 5f       	rla	r15		
    444c:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[3]>>=4)&0xF]<<8);
    4450:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4454:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4458:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    445c:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4460:	2f 4f       	mov	@r15,	r15	
    4462:	12 c3       	clrc			
    4464:	0f 10       	rrc	r15		
    4466:	12 c3       	clrc			
    4468:	0f 10       	rrc	r15		
    446a:	12 c3       	clrc			
    446c:	0f 10       	rrc	r15		
    446e:	12 c3       	clrc			
    4470:	0f 10       	rrc	r15		
    4472:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4476:	2f 4e       	mov	@r14,	r15	
    4478:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    447c:	0f 5f       	rla	r15		
    447e:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    4482:	2f 4f       	mov	@r15,	r15	
    4484:	4f 4f       	mov.b	r15,	r15	
    4486:	8f 10       	swpb	r15		
    4488:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		sTemp |= (u16)(sBox4[(state[3]>>=4)&0xF]<<12);
    448c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4490:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4494:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4498:	3f 50 06 00 	add	#6,	r15	;#0x0006
    449c:	2f 4f       	mov	@r15,	r15	
    449e:	12 c3       	clrc			
    44a0:	0f 10       	rrc	r15		
    44a2:	12 c3       	clrc			
    44a4:	0f 10       	rrc	r15		
    44a6:	12 c3       	clrc			
    44a8:	0f 10       	rrc	r15		
    44aa:	12 c3       	clrc			
    44ac:	0f 10       	rrc	r15		
    44ae:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    44b2:	2f 4e       	mov	@r14,	r15	
    44b4:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    44b8:	0f 5f       	rla	r15		
    44ba:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    44be:	2f 4f       	mov	@r15,	r15	
    44c0:	4f 4f       	mov.b	r15,	r15	
    44c2:	8f 10       	swpb	r15		
    44c4:	0f 5f       	rla	r15		
    44c6:	0f 5f       	rla	r15		
    44c8:	0f 5f       	rla	r15		
    44ca:	0f 5f       	rla	r15		
    44cc:	84 df e2 ff 	bis	r15,	-30(r4)	;0xffe2(r4)
		state[3]=sTemp;
    44d0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    44d4:	3f 50 06 00 	add	#6,	r15	;#0x0006
    44d8:	9f 44 e2 ff 	mov	-30(r4),0(r15)	;0xffe2(r4), 0x0000(r15)
    44dc:	00 00 
//	******************* sBox End ***************************
//	******************* pLayer *****************************
	
		pTemp[0]=0;pTemp[1]=0;pTemp[2]=0;pTemp[3]=0;
    44de:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2(r4)
    44e2:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    44e6:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    44ea:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
		for(j=0;j<64;j++)
    44ee:	84 43 e0 ff 	mov	#0,	-32(r4)	;r3 As==00, 0xffe0(r4)
    44f2:	75 3c       	jmp	$+236    	;abs 0x45de
		{				
			if(state[j>>4] & 0x01)
    44f4:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffe0(r4)
    44f8:	12 c3       	clrc			
    44fa:	0f 10       	rrc	r15		
    44fc:	12 c3       	clrc			
    44fe:	0f 10       	rrc	r15		
    4500:	12 c3       	clrc			
    4502:	0f 10       	rrc	r15		
    4504:	12 c3       	clrc			
    4506:	0f 10       	rrc	r15		
    4508:	0f 5f       	rla	r15		
    450a:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    450e:	2f 4f       	mov	@r15,	r15	
    4510:	1f f3       	and	#1,	r15	;r3 As==01
    4512:	4f 4f       	mov.b	r15,	r15	
    4514:	4f 93       	tst.b	r15		
    4516:	41 24       	jz	$+132    	;abs 0x459a
			{
				pTemp[mul16mod63[j]>>4]|=(u16)0x01<<(mul16mod63[j]&0xF);
    4518:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffe0(r4)
    451c:	0f 5f       	rla	r15		
    451e:	3f 50 7e 51 	add	#20862,	r15	;#0x517e
    4522:	2f 4f       	mov	@r15,	r15	
    4524:	12 c3       	clrc			
    4526:	0f 10       	rrc	r15		
    4528:	12 c3       	clrc			
    452a:	0f 10       	rrc	r15		
    452c:	12 c3       	clrc			
    452e:	0f 10       	rrc	r15		
    4530:	12 c3       	clrc			
    4532:	0f 10       	rrc	r15		
    4534:	1e 44 e0 ff 	mov	-32(r4),r14	;0xffe0(r4)
    4538:	0e 5e       	rla	r14		
    453a:	3e 50 7e 51 	add	#20862,	r14	;#0x517e
    453e:	2e 4e       	mov	@r14,	r14	
    4540:	12 c3       	clrc			
    4542:	0e 10       	rrc	r14		
    4544:	12 c3       	clrc			
    4546:	0e 10       	rrc	r14		
    4548:	12 c3       	clrc			
    454a:	0e 10       	rrc	r14		
    454c:	12 c3       	clrc			
    454e:	0e 10       	rrc	r14		
    4550:	0e 5e       	rla	r14		
    4552:	3d 40 de ff 	mov	#-34,	r13	;#0xffde
    4556:	0d 54       	add	r4,	r13	
    4558:	0e 5d       	add	r13,	r14	
    455a:	3e 50 14 00 	add	#20,	r14	;#0x0014
    455e:	2c 4e       	mov	@r14,	r12	
    4560:	1e 44 e0 ff 	mov	-32(r4),r14	;0xffe0(r4)
    4564:	0e 5e       	rla	r14		
    4566:	3e 50 7e 51 	add	#20862,	r14	;#0x517e
    456a:	2e 4e       	mov	@r14,	r14	
    456c:	0d 4e       	mov	r14,	r13	
    456e:	3d f0 0f 00 	and	#15,	r13	;#0x000f
    4572:	1e 43       	mov	#1,	r14	;r3 As==01
    4574:	4d 4d       	mov.b	r13,	r13	
    4576:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    457a:	4d 93       	tst.b	r13		
    457c:	04 24       	jz	$+10     	;abs 0x4586
    457e:	0e 5e       	rla	r14		
    4580:	7d 53       	add.b	#-1,	r13	;r3 As==11
    4582:	4d 93       	tst.b	r13		
    4584:	fc 23       	jnz	$-6      	;abs 0x457e
    4586:	0e dc       	bis	r12,	r14	
    4588:	0f 5f       	rla	r15		
    458a:	3d 40 de ff 	mov	#-34,	r13	;#0xffde
    458e:	0d 54       	add	r4,	r13	
    4590:	0f 5d       	add	r13,	r15	
    4592:	3f 50 14 00 	add	#20,	r15	;#0x0014
    4596:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			}
			state[j>>4]>>=1;
    459a:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffe0(r4)
    459e:	12 c3       	clrc			
    45a0:	0f 10       	rrc	r15		
    45a2:	12 c3       	clrc			
    45a4:	0f 10       	rrc	r15		
    45a6:	12 c3       	clrc			
    45a8:	0f 10       	rrc	r15		
    45aa:	12 c3       	clrc			
    45ac:	0f 10       	rrc	r15		
    45ae:	0f 5f       	rla	r15		
    45b0:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    45b4:	0e 5f       	add	r15,	r14	
    45b6:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffe0(r4)
    45ba:	12 c3       	clrc			
    45bc:	0f 10       	rrc	r15		
    45be:	12 c3       	clrc			
    45c0:	0f 10       	rrc	r15		
    45c2:	12 c3       	clrc			
    45c4:	0f 10       	rrc	r15		
    45c6:	12 c3       	clrc			
    45c8:	0f 10       	rrc	r15		
    45ca:	0f 5f       	rla	r15		
    45cc:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    45d0:	2f 4f       	mov	@r15,	r15	
    45d2:	12 c3       	clrc			
    45d4:	0f 10       	rrc	r15		
    45d6:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[3]=sTemp;
//	******************* sBox End ***************************
//	******************* pLayer *****************************
	
		pTemp[0]=0;pTemp[1]=0;pTemp[2]=0;pTemp[3]=0;
		for(j=0;j<64;j++)
    45da:	94 53 e0 ff 	inc	-32(r4)	;0xffe0(r4)
    45de:	b4 90 40 00 	cmp	#64,	-32(r4)	;#0x0040, 0xffe0(r4)
    45e2:	e0 ff 
    45e4:	87 2b       	jnc	$-240    	;abs 0x44f4
			}
			state[j>>4]>>=1;
		}

		
		state[3]=pTemp[3];
    45e6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    45ea:	3f 50 06 00 	add	#6,	r15	;#0x0006
    45ee:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    45f2:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[2]=pTemp[2];
    45f6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    45fa:	2f 52       	add	#4,	r15	;r2 As==10
    45fc:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    4600:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[1]=pTemp[1];
    4604:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4608:	2f 53       	incd	r15		
    460a:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfff4(r4)
    460e:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[0]=pTemp[0];
    4612:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    4616:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    461a:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		
//	******************* pLayer End *************************
//	******************* Key Scheduling *********************
		// <<61 ==(rot)== >>19	
		temp_0 = key[0];
    461e:	94 44 e8 ff 	mov	-24(r4),-28(r4)	;0xffe8(r4), 0xffe4(r4)
    4622:	e4 ff 
		temp_1 = key[1];
    4624:	94 44 ea ff 	mov	-22(r4),-26(r4)	;0xffea(r4), 0xffe6(r4)
    4628:	e6 ff 
		
		key[0]=key[1]>>3;
    462a:	1f 44 ea ff 	mov	-22(r4),r15	;0xffea(r4)
    462e:	12 c3       	clrc			
    4630:	0f 10       	rrc	r15		
    4632:	12 c3       	clrc			
    4634:	0f 10       	rrc	r15		
    4636:	12 c3       	clrc			
    4638:	0f 10       	rrc	r15		
    463a:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)
		key[0]|=decBox3[key[2]&0x07];
    463e:	1e 44 e8 ff 	mov	-24(r4),r14	;0xffe8(r4)
    4642:	1f 44 ec ff 	mov	-20(r4),r15	;0xffec(r4)
    4646:	3f f0 07 00 	and	#7,	r15	;#0x0007
    464a:	0f 5f       	rla	r15		
    464c:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    4650:	2f 4f       	mov	@r15,	r15	
    4652:	0f de       	bis	r14,	r15	
    4654:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)
		
		key[1]=key[2]>>3;
    4658:	1f 44 ec ff 	mov	-20(r4),r15	;0xffec(r4)
    465c:	12 c3       	clrc			
    465e:	0f 10       	rrc	r15		
    4660:	12 c3       	clrc			
    4662:	0f 10       	rrc	r15		
    4664:	12 c3       	clrc			
    4666:	0f 10       	rrc	r15		
    4668:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
		key[1]|=decBox3[key[3]&0x07];
    466c:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    4670:	1f 44 ee ff 	mov	-18(r4),r15	;0xffee(r4)
    4674:	3f f0 07 00 	and	#7,	r15	;#0x0007
    4678:	0f 5f       	rla	r15		
    467a:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    467e:	2f 4f       	mov	@r15,	r15	
    4680:	0f de       	bis	r14,	r15	
    4682:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
		
		key[2]=key[3]>>3;
    4686:	1f 44 ee ff 	mov	-18(r4),r15	;0xffee(r4)
    468a:	12 c3       	clrc			
    468c:	0f 10       	rrc	r15		
    468e:	12 c3       	clrc			
    4690:	0f 10       	rrc	r15		
    4692:	12 c3       	clrc			
    4694:	0f 10       	rrc	r15		
    4696:	84 4f ec ff 	mov	r15,	-20(r4)	;0xffec(r4)
		key[2]|=decBox3[key[4]&0x07];
    469a:	1e 44 ec ff 	mov	-20(r4),r14	;0xffec(r4)
    469e:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    46a2:	3f f0 07 00 	and	#7,	r15	;#0x0007
    46a6:	0f 5f       	rla	r15		
    46a8:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    46ac:	2f 4f       	mov	@r15,	r15	
    46ae:	0f de       	bis	r14,	r15	
    46b0:	84 4f ec ff 	mov	r15,	-20(r4)	;0xffec(r4)
		
		key[3]=key[4]>>3;
    46b4:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    46b8:	12 c3       	clrc			
    46ba:	0f 10       	rrc	r15		
    46bc:	12 c3       	clrc			
    46be:	0f 10       	rrc	r15		
    46c0:	12 c3       	clrc			
    46c2:	0f 10       	rrc	r15		
    46c4:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
		key[3]|=decBox3[temp_0&0x07];
    46c8:	1e 44 ee ff 	mov	-18(r4),r14	;0xffee(r4)
    46cc:	1f 44 e4 ff 	mov	-28(r4),r15	;0xffe4(r4)
    46d0:	3f f0 07 00 	and	#7,	r15	;#0x0007
    46d4:	0f 5f       	rla	r15		
    46d6:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    46da:	2f 4f       	mov	@r15,	r15	
    46dc:	0f de       	bis	r14,	r15	
    46de:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
		
		key[4]=temp_0>>3;
    46e2:	1f 44 e4 ff 	mov	-28(r4),r15	;0xffe4(r4)
    46e6:	12 c3       	clrc			
    46e8:	0f 10       	rrc	r15		
    46ea:	12 c3       	clrc			
    46ec:	0f 10       	rrc	r15		
    46ee:	12 c3       	clrc			
    46f0:	0f 10       	rrc	r15		
    46f2:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		key[4]|=decBox3[temp_1&0x07];
    46f6:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    46fa:	1f 44 e6 ff 	mov	-26(r4),r15	;0xffe6(r4)
    46fe:	3f f0 07 00 	and	#7,	r15	;#0x0007
    4702:	0f 5f       	rla	r15		
    4704:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    4708:	2f 4f       	mov	@r15,	r15	
    470a:	0f de       	bis	r14,	r15	
    470c:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		
		//sBox
		temp_0 = key[4]>>12;
    4710:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    4714:	8f 10       	swpb	r15		
    4716:	4f 4f       	mov.b	r15,	r15	
    4718:	84 4f e4 ff 	mov	r15,	-28(r4)	;0xffe4(r4)
    471c:	12 c3       	clrc			
    471e:	14 10 e4 ff 	rrc	-28(r4)	;0xffe4(r4)
    4722:	12 c3       	clrc			
    4724:	14 10 e4 ff 	rrc	-28(r4)	;0xffe4(r4)
    4728:	12 c3       	clrc			
    472a:	14 10 e4 ff 	rrc	-28(r4)	;0xffe4(r4)
    472e:	12 c3       	clrc			
    4730:	14 10 e4 ff 	rrc	-28(r4)	;0xffe4(r4)
		key[4] &= 0x0FFF;
    4734:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    4738:	3f f0 ff 0f 	and	#4095,	r15	;#0x0fff
    473c:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		key[4] |= sBox4[temp_0]<<12;
    4740:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    4744:	1f 44 e4 ff 	mov	-28(r4),r15	;0xffe4(r4)
    4748:	0f 5f       	rla	r15		
    474a:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    474e:	2f 4f       	mov	@r15,	r15	
    4750:	4f 4f       	mov.b	r15,	r15	
    4752:	8f 10       	swpb	r15		
    4754:	0f 5f       	rla	r15		
    4756:	0f 5f       	rla	r15		
    4758:	0f 5f       	rla	r15		
    475a:	0f 5f       	rla	r15		
    475c:	0f de       	bis	r14,	r15	
    475e:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		
		//Permutation
		if(round&0x01)key[0] ^= 0x8000;  
    4762:	1f 44 de ff 	mov	-34(r4),r15	;0xffde(r4)
    4766:	1f f3       	and	#1,	r15	;r3 As==01
    4768:	4f 4f       	mov.b	r15,	r15	
    476a:	4f 93       	tst.b	r15		
    476c:	06 24       	jz	$+14     	;abs 0x477a
    476e:	1f 44 e8 ff 	mov	-24(r4),r15	;0xffe8(r4)
    4772:	3f e0 00 80 	xor	#-32768,r15	;#0x8000
    4776:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)
		key[1] ^= ( round >> 1 );
    477a:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    477e:	1f 44 de ff 	mov	-34(r4),r15	;0xffde(r4)
    4782:	12 c3       	clrc			
    4784:	0f 10       	rrc	r15		
    4786:	0f ee       	xor	r14,	r15	
    4788:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
	key[4] = aKey[4];
	key[3] = aKey[3];
	key[2] = aKey[2];
	key[1] = aKey[1];
	key[0] = aKey[0];
	for(round=1;round<32;round++)
    478c:	94 53 de ff 	inc	-34(r4)	;0xffde(r4)
    4790:	b4 90 20 00 	cmp	#32,	-34(r4)	;#0x0020, 0xffde(r4)
    4794:	de ff 
    4796:	02 2c       	jc	$+6      	;abs 0x479c
    4798:	30 40 02 41 	br	#0x4102	
		if(round&0x01)key[0] ^= 0x8000;  
		key[1] ^= ( round >> 1 );
//	******************* Key Scheduling End*********************
	}
//	****************** addRoundkey *************************
 	state[3] ^= key[4];
    479c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    47a0:	3f 50 06 00 	add	#6,	r15	;#0x0006
    47a4:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    47a8:	3e 50 06 00 	add	#6,	r14	;#0x0006
    47ac:	2d 4e       	mov	@r14,	r13	
    47ae:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    47b2:	0e ed       	xor	r13,	r14	
    47b4:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[2] ^= key[3];
    47b8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    47bc:	2f 52       	add	#4,	r15	;r2 As==10
    47be:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    47c2:	2e 52       	add	#4,	r14	;r2 As==10
    47c4:	2d 4e       	mov	@r14,	r13	
    47c6:	1e 44 ee ff 	mov	-18(r4),r14	;0xffee(r4)
    47ca:	0e ed       	xor	r13,	r14	
    47cc:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[1] ^= key[2];
    47d0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    47d4:	2f 53       	incd	r15		
    47d6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    47da:	2e 53       	incd	r14		
    47dc:	2d 4e       	mov	@r14,	r13	
    47de:	1e 44 ec ff 	mov	-20(r4),r14	;0xffec(r4)
    47e2:	0e ed       	xor	r13,	r14	
    47e4:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[0] ^= key[1];
    47e8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    47ec:	2e 4f       	mov	@r15,	r14	
    47ee:	1f 44 ea ff 	mov	-22(r4),r15	;0xffea(r4)
    47f2:	0e ef       	xor	r15,	r14	
    47f4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    47f8:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)

//	****************** addRoundkey End *********************
	return;
}
    47fc:	31 50 20 00 	add	#32,	r1	;#0x0020
    4800:	34 41       	pop	r4		
    4802:	30 41       	ret			

00004804 <Decrypt>:


 void Decrypt(u16 *state, const u16 *aKey)
{	
    4804:	04 12       	push	r4		
    4806:	04 41       	mov	r1,	r4	
    4808:	24 53       	incd	r4		
    480a:	31 50 e8 fe 	add	#-280,	r1	;#0xfee8
    480e:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    4812:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
	u16 temp_1;
// Variables pLayer
	u16 j;
	u16 pTemp[4];
	
	key[4] = aKey[4];
    4816:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    481a:	1f 4f 08 00 	mov	8(r15),	r15	;0x0008(r15)
    481e:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
	key[3] = aKey[3];
    4822:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4826:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    482a:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
	key[2] = aKey[2];
    482e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4832:	1f 4f 04 00 	mov	4(r15),	r15	;0x0004(r15)
    4836:	84 4f ec ff 	mov	r15,	-20(r4)	;0xffec(r4)
	key[1] = aKey[1];
    483a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    483e:	1f 4f 02 00 	mov	2(r15),	r15	;0x0002(r15)
    4842:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
	key[0] = aKey[0];
    4846:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    484a:	2f 4f       	mov	@r15,	r15	
    484c:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)

//	****************** Key Scheduling **********************
		for(round=1;round<32;round++)
    4850:	94 43 e6 fe 	mov	#1,	-282(r4);r3 As==01, 0xfee6(r4)
    4854:	f9 3c       	jmp	$+500    	;abs 0x4a48
		{
			// <<61 ==(rot)== >>19	
			temp_0 = key[0];
    4856:	94 44 e8 ff 	mov	-24(r4),-278(r4);0xffe8(r4), 0xfeea(r4)
    485a:	ea fe 
			temp_1 = key[1];
    485c:	94 44 ea ff 	mov	-22(r4),-276(r4);0xffea(r4), 0xfeec(r4)
    4860:	ec fe 
		
			key[0]=key[1]>>3;
    4862:	1f 44 ea ff 	mov	-22(r4),r15	;0xffea(r4)
    4866:	12 c3       	clrc			
    4868:	0f 10       	rrc	r15		
    486a:	12 c3       	clrc			
    486c:	0f 10       	rrc	r15		
    486e:	12 c3       	clrc			
    4870:	0f 10       	rrc	r15		
    4872:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)
			key[0]|=decBox3[key[2]&0x07];
    4876:	1e 44 e8 ff 	mov	-24(r4),r14	;0xffe8(r4)
    487a:	1f 44 ec ff 	mov	-20(r4),r15	;0xffec(r4)
    487e:	3f f0 07 00 	and	#7,	r15	;#0x0007
    4882:	0f 5f       	rla	r15		
    4884:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    4888:	2f 4f       	mov	@r15,	r15	
    488a:	0f de       	bis	r14,	r15	
    488c:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)
		
			key[1]=key[2]>>3;
    4890:	1f 44 ec ff 	mov	-20(r4),r15	;0xffec(r4)
    4894:	12 c3       	clrc			
    4896:	0f 10       	rrc	r15		
    4898:	12 c3       	clrc			
    489a:	0f 10       	rrc	r15		
    489c:	12 c3       	clrc			
    489e:	0f 10       	rrc	r15		
    48a0:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
			key[1]|=decBox3[key[3]&0x07];
    48a4:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    48a8:	1f 44 ee ff 	mov	-18(r4),r15	;0xffee(r4)
    48ac:	3f f0 07 00 	and	#7,	r15	;#0x0007
    48b0:	0f 5f       	rla	r15		
    48b2:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    48b6:	2f 4f       	mov	@r15,	r15	
    48b8:	0f de       	bis	r14,	r15	
    48ba:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
		
			key[2]=key[3]>>3;
    48be:	1f 44 ee ff 	mov	-18(r4),r15	;0xffee(r4)
    48c2:	12 c3       	clrc			
    48c4:	0f 10       	rrc	r15		
    48c6:	12 c3       	clrc			
    48c8:	0f 10       	rrc	r15		
    48ca:	12 c3       	clrc			
    48cc:	0f 10       	rrc	r15		
    48ce:	84 4f ec ff 	mov	r15,	-20(r4)	;0xffec(r4)
			key[2]|=decBox3[key[4]&0x07];
    48d2:	1e 44 ec ff 	mov	-20(r4),r14	;0xffec(r4)
    48d6:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    48da:	3f f0 07 00 	and	#7,	r15	;#0x0007
    48de:	0f 5f       	rla	r15		
    48e0:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    48e4:	2f 4f       	mov	@r15,	r15	
    48e6:	0f de       	bis	r14,	r15	
    48e8:	84 4f ec ff 	mov	r15,	-20(r4)	;0xffec(r4)
		
			key[3]=key[4]>>3;
    48ec:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    48f0:	12 c3       	clrc			
    48f2:	0f 10       	rrc	r15		
    48f4:	12 c3       	clrc			
    48f6:	0f 10       	rrc	r15		
    48f8:	12 c3       	clrc			
    48fa:	0f 10       	rrc	r15		
    48fc:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
			key[3]|=decBox3[temp_0&0x07];
    4900:	1e 44 ee ff 	mov	-18(r4),r14	;0xffee(r4)
    4904:	1f 44 ea fe 	mov	-278(r4),r15	;0xfeea(r4)
    4908:	3f f0 07 00 	and	#7,	r15	;#0x0007
    490c:	0f 5f       	rla	r15		
    490e:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    4912:	2f 4f       	mov	@r15,	r15	
    4914:	0f de       	bis	r14,	r15	
    4916:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
		
			key[4]=temp_0>>3;
    491a:	1f 44 ea fe 	mov	-278(r4),r15	;0xfeea(r4)
    491e:	12 c3       	clrc			
    4920:	0f 10       	rrc	r15		
    4922:	12 c3       	clrc			
    4924:	0f 10       	rrc	r15		
    4926:	12 c3       	clrc			
    4928:	0f 10       	rrc	r15		
    492a:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
			key[4]|=decBox3[temp_1&0x07];
    492e:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    4932:	1f 44 ec fe 	mov	-276(r4),r15	;0xfeec(r4)
    4936:	3f f0 07 00 	and	#7,	r15	;#0x0007
    493a:	0f 5f       	rla	r15		
    493c:	3f 50 7e 52 	add	#21118,	r15	;#0x527e
    4940:	2f 4f       	mov	@r15,	r15	
    4942:	0f de       	bis	r14,	r15	
    4944:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		
			//sBox
			temp_0 = key[4]>>12;
    4948:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    494c:	8f 10       	swpb	r15		
    494e:	4f 4f       	mov.b	r15,	r15	
    4950:	84 4f ea fe 	mov	r15,	-278(r4);0xfeea(r4)
    4954:	12 c3       	clrc			
    4956:	14 10 ea fe 	rrc	-278(r4)	;0xfeea(r4)
    495a:	12 c3       	clrc			
    495c:	14 10 ea fe 	rrc	-278(r4)	;0xfeea(r4)
    4960:	12 c3       	clrc			
    4962:	14 10 ea fe 	rrc	-278(r4)	;0xfeea(r4)
    4966:	12 c3       	clrc			
    4968:	14 10 ea fe 	rrc	-278(r4)	;0xfeea(r4)
			key[4] &= 0x0FFF;
    496c:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    4970:	3f f0 ff 0f 	and	#4095,	r15	;#0x0fff
    4974:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
			key[4] |= sBox4[temp_0]<<12;
    4978:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    497c:	1f 44 ea fe 	mov	-278(r4),r15	;0xfeea(r4)
    4980:	0f 5f       	rla	r15		
    4982:	3f 50 5e 51 	add	#20830,	r15	;#0x515e
    4986:	2f 4f       	mov	@r15,	r15	
    4988:	4f 4f       	mov.b	r15,	r15	
    498a:	8f 10       	swpb	r15		
    498c:	0f 5f       	rla	r15		
    498e:	0f 5f       	rla	r15		
    4990:	0f 5f       	rla	r15		
    4992:	0f 5f       	rla	r15		
    4994:	0f de       	bis	r14,	r15	
    4996:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
		
			//Permutation
			if(round&0x01)key[0] ^= 0x8000;  
    499a:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    499e:	1f f3       	and	#1,	r15	;r3 As==01
    49a0:	4f 4f       	mov.b	r15,	r15	
    49a2:	4f 93       	tst.b	r15		
    49a4:	06 24       	jz	$+14     	;abs 0x49b2
    49a6:	1f 44 e8 ff 	mov	-24(r4),r15	;0xffe8(r4)
    49aa:	3f e0 00 80 	xor	#-32768,r15	;#0x8000
    49ae:	84 4f e8 ff 	mov	r15,	-24(r4)	;0xffe8(r4)
			key[1] ^= ( round >> 1 );
    49b2:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    49b6:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    49ba:	12 c3       	clrc			
    49bc:	0f 10       	rrc	r15		
    49be:	0f ee       	xor	r14,	r15	
    49c0:	84 4f ea ff 	mov	r15,	-22(r4)	;0xffea(r4)
			
			subkey[round-1][3] = key[4];
    49c4:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    49c8:	3f 53       	add	#-1,	r15	;r3 As==11
    49ca:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    49ce:	0f 5f       	rla	r15		
    49d0:	0f 5f       	rla	r15		
    49d2:	0f 5f       	rla	r15		
    49d4:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    49d8:	0c 54       	add	r4,	r12	
    49da:	0f 5c       	add	r12,	r15	
    49dc:	3f 50 10 00 	add	#16,	r15	;#0x0010
    49e0:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			subkey[round-1][2] = key[3];
    49e4:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    49e8:	3f 53       	add	#-1,	r15	;r3 As==11
    49ea:	1e 44 ee ff 	mov	-18(r4),r14	;0xffee(r4)
    49ee:	0f 5f       	rla	r15		
    49f0:	0f 5f       	rla	r15		
    49f2:	0f 5f       	rla	r15		
    49f4:	3d 40 e6 fe 	mov	#-282,	r13	;#0xfee6
    49f8:	0d 54       	add	r4,	r13	
    49fa:	0f 5d       	add	r13,	r15	
    49fc:	3f 50 0e 00 	add	#14,	r15	;#0x000e
    4a00:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			subkey[round-1][1] = key[2];
    4a04:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4a08:	3f 53       	add	#-1,	r15	;r3 As==11
    4a0a:	1e 44 ec ff 	mov	-20(r4),r14	;0xffec(r4)
    4a0e:	0f 5f       	rla	r15		
    4a10:	0f 5f       	rla	r15		
    4a12:	0f 5f       	rla	r15		
    4a14:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4a18:	0c 54       	add	r4,	r12	
    4a1a:	0f 5c       	add	r12,	r15	
    4a1c:	3f 50 0c 00 	add	#12,	r15	;#0x000c
    4a20:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			subkey[round-1][0] = key[1];
    4a24:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4a28:	3f 53       	add	#-1,	r15	;r3 As==11
    4a2a:	1e 44 ea ff 	mov	-22(r4),r14	;0xffea(r4)
    4a2e:	0f 5f       	rla	r15		
    4a30:	0f 5f       	rla	r15		
    4a32:	0f 5f       	rla	r15		
    4a34:	3d 40 e6 fe 	mov	#-282,	r13	;#0xfee6
    4a38:	0d 54       	add	r4,	r13	
    4a3a:	0f 5d       	add	r13,	r15	
    4a3c:	3f 50 0a 00 	add	#10,	r15	;#0x000a
    4a40:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	key[2] = aKey[2];
	key[1] = aKey[1];
	key[0] = aKey[0];

//	****************** Key Scheduling **********************
		for(round=1;round<32;round++)
    4a44:	94 53 e6 fe 	inc	-282(r4)	;0xfee6(r4)
    4a48:	b4 90 20 00 	cmp	#32,	-282(r4);#0x0020, 0xfee6(r4)
    4a4c:	e6 fe 
    4a4e:	03 2b       	jnc	$-504    	;abs 0x4856
			subkey[round-1][0] = key[1];
		}
		
//	****************** Key Scheduling End ******************

		for(round=31;round>0;round--)
    4a50:	b4 40 1f 00 	mov	#31,	-282(r4);#0x001f, 0xfee6(r4)
    4a54:	e6 fe 
    4a56:	30 40 d2 4f 	br	#0x4fd2	
		{
//	****************** addRoundkey *************************
		state[3] ^= subkey[round-1][3];
    4a5a:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4a5e:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4a62:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a66:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4a6a:	2d 4f       	mov	@r15,	r13	
    4a6c:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4a70:	3f 53       	add	#-1,	r15	;r3 As==11
    4a72:	0f 5f       	rla	r15		
    4a74:	0f 5f       	rla	r15		
    4a76:	0f 5f       	rla	r15		
    4a78:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4a7c:	0c 54       	add	r4,	r12	
    4a7e:	0f 5c       	add	r12,	r15	
    4a80:	3f 50 10 00 	add	#16,	r15	;#0x0010
    4a84:	2f 4f       	mov	@r15,	r15	
    4a86:	0f ed       	xor	r13,	r15	
    4a88:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[2] ^= subkey[round-1][2];
    4a8c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4a90:	2e 52       	add	#4,	r14	;r2 As==10
    4a92:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a96:	2f 52       	add	#4,	r15	;r2 As==10
    4a98:	2d 4f       	mov	@r15,	r13	
    4a9a:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4a9e:	3f 53       	add	#-1,	r15	;r3 As==11
    4aa0:	0f 5f       	rla	r15		
    4aa2:	0f 5f       	rla	r15		
    4aa4:	0f 5f       	rla	r15		
    4aa6:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4aaa:	0c 54       	add	r4,	r12	
    4aac:	0f 5c       	add	r12,	r15	
    4aae:	3f 50 0e 00 	add	#14,	r15	;#0x000e
    4ab2:	2f 4f       	mov	@r15,	r15	
    4ab4:	0f ed       	xor	r13,	r15	
    4ab6:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[1] ^= subkey[round-1][1];
    4aba:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4abe:	2e 53       	incd	r14		
    4ac0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ac4:	2f 53       	incd	r15		
    4ac6:	2d 4f       	mov	@r15,	r13	
    4ac8:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4acc:	3f 53       	add	#-1,	r15	;r3 As==11
    4ace:	0f 5f       	rla	r15		
    4ad0:	0f 5f       	rla	r15		
    4ad2:	0f 5f       	rla	r15		
    4ad4:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4ad8:	0c 54       	add	r4,	r12	
    4ada:	0f 5c       	add	r12,	r15	
    4adc:	3f 50 0c 00 	add	#12,	r15	;#0x000c
    4ae0:	2f 4f       	mov	@r15,	r15	
    4ae2:	0f ed       	xor	r13,	r15	
    4ae4:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[0] ^= subkey[round-1][0];
    4ae8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4aec:	2e 4f       	mov	@r15,	r14	
    4aee:	1f 44 e6 fe 	mov	-282(r4),r15	;0xfee6(r4)
    4af2:	3f 53       	add	#-1,	r15	;r3 As==11
    4af4:	0f 5f       	rla	r15		
    4af6:	0f 5f       	rla	r15		
    4af8:	0f 5f       	rla	r15		
    4afa:	3d 40 e6 fe 	mov	#-282,	r13	;#0xfee6
    4afe:	0d 54       	add	r4,	r13	
    4b00:	0f 5d       	add	r13,	r15	
    4b02:	3f 50 0a 00 	add	#10,	r15	;#0x000a
    4b06:	2f 4f       	mov	@r15,	r15	
    4b08:	0e ef       	xor	r15,	r14	
    4b0a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b0e:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
//	****************** addRoundkey End *********************
//	******************* pLayer *****************************
			
		pTemp[0]=0;pTemp[1]=0;pTemp[2]=0;pTemp[3]=0;
    4b12:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2(r4)
    4b16:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    4b1a:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    4b1e:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
		for(j=0;j<64;j++)
    4b22:	84 43 e8 fe 	mov	#0,	-280(r4);r3 As==00, 0xfee8(r4)
    4b26:	75 3c       	jmp	$+236    	;abs 0x4c12
		{
			if(state[j>>4] & 0x01)
    4b28:	1f 44 e8 fe 	mov	-280(r4),r15	;0xfee8(r4)
    4b2c:	12 c3       	clrc			
    4b2e:	0f 10       	rrc	r15		
    4b30:	12 c3       	clrc			
    4b32:	0f 10       	rrc	r15		
    4b34:	12 c3       	clrc			
    4b36:	0f 10       	rrc	r15		
    4b38:	12 c3       	clrc			
    4b3a:	0f 10       	rrc	r15		
    4b3c:	0f 5f       	rla	r15		
    4b3e:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    4b42:	2f 4f       	mov	@r15,	r15	
    4b44:	1f f3       	and	#1,	r15	;r3 As==01
    4b46:	4f 4f       	mov.b	r15,	r15	
    4b48:	4f 93       	tst.b	r15		
    4b4a:	41 24       	jz	$+132    	;abs 0x4bce
			{
				pTemp[mul4mod63[j]>>4]|=(u16)0x01<<(mul4mod63[j]&0xF);
    4b4c:	1f 44 e8 fe 	mov	-280(r4),r15	;0xfee8(r4)
    4b50:	0f 5f       	rla	r15		
    4b52:	3f 50 fe 51 	add	#20990,	r15	;#0x51fe
    4b56:	2f 4f       	mov	@r15,	r15	
    4b58:	12 c3       	clrc			
    4b5a:	0f 10       	rrc	r15		
    4b5c:	12 c3       	clrc			
    4b5e:	0f 10       	rrc	r15		
    4b60:	12 c3       	clrc			
    4b62:	0f 10       	rrc	r15		
    4b64:	12 c3       	clrc			
    4b66:	0f 10       	rrc	r15		
    4b68:	1e 44 e8 fe 	mov	-280(r4),r14	;0xfee8(r4)
    4b6c:	0e 5e       	rla	r14		
    4b6e:	3e 50 fe 51 	add	#20990,	r14	;#0x51fe
    4b72:	2e 4e       	mov	@r14,	r14	
    4b74:	12 c3       	clrc			
    4b76:	0e 10       	rrc	r14		
    4b78:	12 c3       	clrc			
    4b7a:	0e 10       	rrc	r14		
    4b7c:	12 c3       	clrc			
    4b7e:	0e 10       	rrc	r14		
    4b80:	12 c3       	clrc			
    4b82:	0e 10       	rrc	r14		
    4b84:	0e 5e       	rla	r14		
    4b86:	3c 40 e6 fe 	mov	#-282,	r12	;#0xfee6
    4b8a:	0c 54       	add	r4,	r12	
    4b8c:	0e 5c       	add	r12,	r14	
    4b8e:	3e 50 0c 01 	add	#268,	r14	;#0x010c
    4b92:	2c 4e       	mov	@r14,	r12	
    4b94:	1e 44 e8 fe 	mov	-280(r4),r14	;0xfee8(r4)
    4b98:	0e 5e       	rla	r14		
    4b9a:	3e 50 fe 51 	add	#20990,	r14	;#0x51fe
    4b9e:	2e 4e       	mov	@r14,	r14	
    4ba0:	0d 4e       	mov	r14,	r13	
    4ba2:	3d f0 0f 00 	and	#15,	r13	;#0x000f
    4ba6:	1e 43       	mov	#1,	r14	;r3 As==01
    4ba8:	4d 4d       	mov.b	r13,	r13	
    4baa:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    4bae:	4d 93       	tst.b	r13		
    4bb0:	04 24       	jz	$+10     	;abs 0x4bba
    4bb2:	0e 5e       	rla	r14		
    4bb4:	7d 53       	add.b	#-1,	r13	;r3 As==11
    4bb6:	4d 93       	tst.b	r13		
    4bb8:	fc 23       	jnz	$-6      	;abs 0x4bb2
    4bba:	0e dc       	bis	r12,	r14	
    4bbc:	0f 5f       	rla	r15		
    4bbe:	3d 40 e6 fe 	mov	#-282,	r13	;#0xfee6
    4bc2:	0d 54       	add	r4,	r13	
    4bc4:	0f 5d       	add	r13,	r15	
    4bc6:	3f 50 0c 01 	add	#268,	r15	;#0x010c
    4bca:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
			}
			state[j>>4]>>=1;
    4bce:	1f 44 e8 fe 	mov	-280(r4),r15	;0xfee8(r4)
    4bd2:	12 c3       	clrc			
    4bd4:	0f 10       	rrc	r15		
    4bd6:	12 c3       	clrc			
    4bd8:	0f 10       	rrc	r15		
    4bda:	12 c3       	clrc			
    4bdc:	0f 10       	rrc	r15		
    4bde:	12 c3       	clrc			
    4be0:	0f 10       	rrc	r15		
    4be2:	0f 5f       	rla	r15		
    4be4:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4be8:	0e 5f       	add	r15,	r14	
    4bea:	1f 44 e8 fe 	mov	-280(r4),r15	;0xfee8(r4)
    4bee:	12 c3       	clrc			
    4bf0:	0f 10       	rrc	r15		
    4bf2:	12 c3       	clrc			
    4bf4:	0f 10       	rrc	r15		
    4bf6:	12 c3       	clrc			
    4bf8:	0f 10       	rrc	r15		
    4bfa:	12 c3       	clrc			
    4bfc:	0f 10       	rrc	r15		
    4bfe:	0f 5f       	rla	r15		
    4c00:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    4c04:	2f 4f       	mov	@r15,	r15	
    4c06:	12 c3       	clrc			
    4c08:	0f 10       	rrc	r15		
    4c0a:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
		state[0] ^= subkey[round-1][0];
//	****************** addRoundkey End *********************
//	******************* pLayer *****************************
			
		pTemp[0]=0;pTemp[1]=0;pTemp[2]=0;pTemp[3]=0;
		for(j=0;j<64;j++)
    4c0e:	94 53 e8 fe 	inc	-280(r4)	;0xfee8(r4)
    4c12:	b4 90 40 00 	cmp	#64,	-280(r4);#0x0040, 0xfee8(r4)
    4c16:	e8 fe 
    4c18:	87 2b       	jnc	$-240    	;abs 0x4b28
			{
				pTemp[mul4mod63[j]>>4]|=(u16)0x01<<(mul4mod63[j]&0xF);
			}
			state[j>>4]>>=1;
		}
		state[3]=pTemp[3];
    4c1a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c1e:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4c22:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    4c26:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[2]=pTemp[2];
    4c2a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c2e:	2f 52       	add	#4,	r15	;r2 As==10
    4c30:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    4c34:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[1]=pTemp[1];
    4c38:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c3c:	2f 53       	incd	r15		
    4c3e:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfff4(r4)
    4c42:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
		state[0]=pTemp[0];
    4c46:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    4c4a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c4e:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
//	******************* pLayer End *************************
//	******************* sBox *******************************
			
		sTemp=0;
    4c52:	84 43 ee fe 	mov	#0,	-274(r4);r3 As==00, 0xfeee(r4)
        sTemp |= (u16)(invsBox4[(state[0]&0xF)]);
    4c56:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c5a:	2f 4f       	mov	@r15,	r15	
    4c5c:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4c60:	0f 5f       	rla	r15		
    4c62:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4c66:	2f 4f       	mov	@r15,	r15	
    4c68:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[0]>>=4)&0xF]<<4);
    4c6c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c70:	2f 4f       	mov	@r15,	r15	
    4c72:	12 c3       	clrc			
    4c74:	0f 10       	rrc	r15		
    4c76:	12 c3       	clrc			
    4c78:	0f 10       	rrc	r15		
    4c7a:	12 c3       	clrc			
    4c7c:	0f 10       	rrc	r15		
    4c7e:	12 c3       	clrc			
    4c80:	0f 10       	rrc	r15		
    4c82:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4c86:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4c8a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c8e:	2f 4f       	mov	@r15,	r15	
    4c90:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4c94:	0f 5f       	rla	r15		
    4c96:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4c9a:	2f 4f       	mov	@r15,	r15	
    4c9c:	0f 5f       	rla	r15		
    4c9e:	0f 5f       	rla	r15		
    4ca0:	0f 5f       	rla	r15		
    4ca2:	0f 5f       	rla	r15		
    4ca4:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[0]>>=4)&0xF]<<8);
    4ca8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cac:	2f 4f       	mov	@r15,	r15	
    4cae:	12 c3       	clrc			
    4cb0:	0f 10       	rrc	r15		
    4cb2:	12 c3       	clrc			
    4cb4:	0f 10       	rrc	r15		
    4cb6:	12 c3       	clrc			
    4cb8:	0f 10       	rrc	r15		
    4cba:	12 c3       	clrc			
    4cbc:	0f 10       	rrc	r15		
    4cbe:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4cc2:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4cc6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cca:	2f 4f       	mov	@r15,	r15	
    4ccc:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4cd0:	0f 5f       	rla	r15		
    4cd2:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4cd6:	2f 4f       	mov	@r15,	r15	
    4cd8:	4f 4f       	mov.b	r15,	r15	
    4cda:	8f 10       	swpb	r15		
    4cdc:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[0]>>=4)&0xF]<<12);
    4ce0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ce4:	2f 4f       	mov	@r15,	r15	
    4ce6:	12 c3       	clrc			
    4ce8:	0f 10       	rrc	r15		
    4cea:	12 c3       	clrc			
    4cec:	0f 10       	rrc	r15		
    4cee:	12 c3       	clrc			
    4cf0:	0f 10       	rrc	r15		
    4cf2:	12 c3       	clrc			
    4cf4:	0f 10       	rrc	r15		
    4cf6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4cfa:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4cfe:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d02:	2f 4f       	mov	@r15,	r15	
    4d04:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4d08:	0f 5f       	rla	r15		
    4d0a:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4d0e:	2f 4f       	mov	@r15,	r15	
    4d10:	4f 4f       	mov.b	r15,	r15	
    4d12:	8f 10       	swpb	r15		
    4d14:	0f 5f       	rla	r15		
    4d16:	0f 5f       	rla	r15		
    4d18:	0f 5f       	rla	r15		
    4d1a:	0f 5f       	rla	r15		
    4d1c:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		state[0]=sTemp;
    4d20:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d24:	9f 44 ee fe 	mov	-274(r4),0(r15)	;0xfeee(r4), 0x0000(r15)
    4d28:	00 00 
		
        sTemp=0;
    4d2a:	84 43 ee fe 	mov	#0,	-274(r4);r3 As==00, 0xfeee(r4)
        sTemp |= (u16)(invsBox4[(state[1]&0xF)]);
    4d2e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d32:	2f 53       	incd	r15		
    4d34:	2f 4f       	mov	@r15,	r15	
    4d36:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4d3a:	0f 5f       	rla	r15		
    4d3c:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4d40:	2f 4f       	mov	@r15,	r15	
    4d42:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[1]>>=4)&0xF]<<4);
    4d46:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4d4a:	2e 53       	incd	r14		
    4d4c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d50:	2f 53       	incd	r15		
    4d52:	2f 4f       	mov	@r15,	r15	
    4d54:	12 c3       	clrc			
    4d56:	0f 10       	rrc	r15		
    4d58:	12 c3       	clrc			
    4d5a:	0f 10       	rrc	r15		
    4d5c:	12 c3       	clrc			
    4d5e:	0f 10       	rrc	r15		
    4d60:	12 c3       	clrc			
    4d62:	0f 10       	rrc	r15		
    4d64:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4d68:	2f 4e       	mov	@r14,	r15	
    4d6a:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4d6e:	0f 5f       	rla	r15		
    4d70:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4d74:	2f 4f       	mov	@r15,	r15	
    4d76:	0f 5f       	rla	r15		
    4d78:	0f 5f       	rla	r15		
    4d7a:	0f 5f       	rla	r15		
    4d7c:	0f 5f       	rla	r15		
    4d7e:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[1]>>=4)&0xF]<<8);
    4d82:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4d86:	2e 53       	incd	r14		
    4d88:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d8c:	2f 53       	incd	r15		
    4d8e:	2f 4f       	mov	@r15,	r15	
    4d90:	12 c3       	clrc			
    4d92:	0f 10       	rrc	r15		
    4d94:	12 c3       	clrc			
    4d96:	0f 10       	rrc	r15		
    4d98:	12 c3       	clrc			
    4d9a:	0f 10       	rrc	r15		
    4d9c:	12 c3       	clrc			
    4d9e:	0f 10       	rrc	r15		
    4da0:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4da4:	2f 4e       	mov	@r14,	r15	
    4da6:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4daa:	0f 5f       	rla	r15		
    4dac:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4db0:	2f 4f       	mov	@r15,	r15	
    4db2:	4f 4f       	mov.b	r15,	r15	
    4db4:	8f 10       	swpb	r15		
    4db6:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[1]>>=4)&0xF]<<12);
    4dba:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4dbe:	2e 53       	incd	r14		
    4dc0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4dc4:	2f 53       	incd	r15		
    4dc6:	2f 4f       	mov	@r15,	r15	
    4dc8:	12 c3       	clrc			
    4dca:	0f 10       	rrc	r15		
    4dcc:	12 c3       	clrc			
    4dce:	0f 10       	rrc	r15		
    4dd0:	12 c3       	clrc			
    4dd2:	0f 10       	rrc	r15		
    4dd4:	12 c3       	clrc			
    4dd6:	0f 10       	rrc	r15		
    4dd8:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4ddc:	2f 4e       	mov	@r14,	r15	
    4dde:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4de2:	0f 5f       	rla	r15		
    4de4:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4de8:	2f 4f       	mov	@r15,	r15	
    4dea:	4f 4f       	mov.b	r15,	r15	
    4dec:	8f 10       	swpb	r15		
    4dee:	0f 5f       	rla	r15		
    4df0:	0f 5f       	rla	r15		
    4df2:	0f 5f       	rla	r15		
    4df4:	0f 5f       	rla	r15		
    4df6:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		state[1]=sTemp;
    4dfa:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4dfe:	2f 53       	incd	r15		
    4e00:	9f 44 ee fe 	mov	-274(r4),0(r15)	;0xfeee(r4), 0x0000(r15)
    4e04:	00 00 
		
		sTemp=0;
    4e06:	84 43 ee fe 	mov	#0,	-274(r4);r3 As==00, 0xfeee(r4)
        sTemp |= (u16)(invsBox4[(state[2]&0xF)]);
    4e0a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e0e:	2f 52       	add	#4,	r15	;r2 As==10
    4e10:	2f 4f       	mov	@r15,	r15	
    4e12:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4e16:	0f 5f       	rla	r15		
    4e18:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4e1c:	2f 4f       	mov	@r15,	r15	
    4e1e:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[2]>>=4)&0xF]<<4);
    4e22:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4e26:	2e 52       	add	#4,	r14	;r2 As==10
    4e28:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e2c:	2f 52       	add	#4,	r15	;r2 As==10
    4e2e:	2f 4f       	mov	@r15,	r15	
    4e30:	12 c3       	clrc			
    4e32:	0f 10       	rrc	r15		
    4e34:	12 c3       	clrc			
    4e36:	0f 10       	rrc	r15		
    4e38:	12 c3       	clrc			
    4e3a:	0f 10       	rrc	r15		
    4e3c:	12 c3       	clrc			
    4e3e:	0f 10       	rrc	r15		
    4e40:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4e44:	2f 4e       	mov	@r14,	r15	
    4e46:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4e4a:	0f 5f       	rla	r15		
    4e4c:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4e50:	2f 4f       	mov	@r15,	r15	
    4e52:	0f 5f       	rla	r15		
    4e54:	0f 5f       	rla	r15		
    4e56:	0f 5f       	rla	r15		
    4e58:	0f 5f       	rla	r15		
    4e5a:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[2]>>=4)&0xF]<<8);
    4e5e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4e62:	2e 52       	add	#4,	r14	;r2 As==10
    4e64:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e68:	2f 52       	add	#4,	r15	;r2 As==10
    4e6a:	2f 4f       	mov	@r15,	r15	
    4e6c:	12 c3       	clrc			
    4e6e:	0f 10       	rrc	r15		
    4e70:	12 c3       	clrc			
    4e72:	0f 10       	rrc	r15		
    4e74:	12 c3       	clrc			
    4e76:	0f 10       	rrc	r15		
    4e78:	12 c3       	clrc			
    4e7a:	0f 10       	rrc	r15		
    4e7c:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4e80:	2f 4e       	mov	@r14,	r15	
    4e82:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4e86:	0f 5f       	rla	r15		
    4e88:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4e8c:	2f 4f       	mov	@r15,	r15	
    4e8e:	4f 4f       	mov.b	r15,	r15	
    4e90:	8f 10       	swpb	r15		
    4e92:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[2]>>=4)&0xF]<<12);
    4e96:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4e9a:	2e 52       	add	#4,	r14	;r2 As==10
    4e9c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ea0:	2f 52       	add	#4,	r15	;r2 As==10
    4ea2:	2f 4f       	mov	@r15,	r15	
    4ea4:	12 c3       	clrc			
    4ea6:	0f 10       	rrc	r15		
    4ea8:	12 c3       	clrc			
    4eaa:	0f 10       	rrc	r15		
    4eac:	12 c3       	clrc			
    4eae:	0f 10       	rrc	r15		
    4eb0:	12 c3       	clrc			
    4eb2:	0f 10       	rrc	r15		
    4eb4:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4eb8:	2f 4e       	mov	@r14,	r15	
    4eba:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4ebe:	0f 5f       	rla	r15		
    4ec0:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4ec4:	2f 4f       	mov	@r15,	r15	
    4ec6:	4f 4f       	mov.b	r15,	r15	
    4ec8:	8f 10       	swpb	r15		
    4eca:	0f 5f       	rla	r15		
    4ecc:	0f 5f       	rla	r15		
    4ece:	0f 5f       	rla	r15		
    4ed0:	0f 5f       	rla	r15		
    4ed2:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		state[2]=sTemp;
    4ed6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4eda:	2f 52       	add	#4,	r15	;r2 As==10
    4edc:	9f 44 ee fe 	mov	-274(r4),0(r15)	;0xfeee(r4), 0x0000(r15)
    4ee0:	00 00 
		
		sTemp=0;
    4ee2:	84 43 ee fe 	mov	#0,	-274(r4);r3 As==00, 0xfeee(r4)
        sTemp |= (u16)(invsBox4[(state[3]&0xF)]);
    4ee6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4eea:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4eee:	2f 4f       	mov	@r15,	r15	
    4ef0:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4ef4:	0f 5f       	rla	r15		
    4ef6:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4efa:	2f 4f       	mov	@r15,	r15	
    4efc:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[3]>>=4)&0xF]<<4);
    4f00:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4f04:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4f08:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f0c:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4f10:	2f 4f       	mov	@r15,	r15	
    4f12:	12 c3       	clrc			
    4f14:	0f 10       	rrc	r15		
    4f16:	12 c3       	clrc			
    4f18:	0f 10       	rrc	r15		
    4f1a:	12 c3       	clrc			
    4f1c:	0f 10       	rrc	r15		
    4f1e:	12 c3       	clrc			
    4f20:	0f 10       	rrc	r15		
    4f22:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4f26:	2f 4e       	mov	@r14,	r15	
    4f28:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4f2c:	0f 5f       	rla	r15		
    4f2e:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4f32:	2f 4f       	mov	@r15,	r15	
    4f34:	0f 5f       	rla	r15		
    4f36:	0f 5f       	rla	r15		
    4f38:	0f 5f       	rla	r15		
    4f3a:	0f 5f       	rla	r15		
    4f3c:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[3]>>=4)&0xF]<<8);
    4f40:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4f44:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4f48:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f4c:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4f50:	2f 4f       	mov	@r15,	r15	
    4f52:	12 c3       	clrc			
    4f54:	0f 10       	rrc	r15		
    4f56:	12 c3       	clrc			
    4f58:	0f 10       	rrc	r15		
    4f5a:	12 c3       	clrc			
    4f5c:	0f 10       	rrc	r15		
    4f5e:	12 c3       	clrc			
    4f60:	0f 10       	rrc	r15		
    4f62:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4f66:	2f 4e       	mov	@r14,	r15	
    4f68:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4f6c:	0f 5f       	rla	r15		
    4f6e:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4f72:	2f 4f       	mov	@r15,	r15	
    4f74:	4f 4f       	mov.b	r15,	r15	
    4f76:	8f 10       	swpb	r15		
    4f78:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		sTemp |= (u16)(invsBox4[(state[3]>>=4)&0xF]<<12);
    4f7c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4f80:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4f84:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f88:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4f8c:	2f 4f       	mov	@r15,	r15	
    4f8e:	12 c3       	clrc			
    4f90:	0f 10       	rrc	r15		
    4f92:	12 c3       	clrc			
    4f94:	0f 10       	rrc	r15		
    4f96:	12 c3       	clrc			
    4f98:	0f 10       	rrc	r15		
    4f9a:	12 c3       	clrc			
    4f9c:	0f 10       	rrc	r15		
    4f9e:	8e 4f 00 00 	mov	r15,	0(r14)	;0x0000(r14)
    4fa2:	2f 4e       	mov	@r14,	r15	
    4fa4:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4fa8:	0f 5f       	rla	r15		
    4faa:	3f 50 8e 52 	add	#21134,	r15	;#0x528e
    4fae:	2f 4f       	mov	@r15,	r15	
    4fb0:	4f 4f       	mov.b	r15,	r15	
    4fb2:	8f 10       	swpb	r15		
    4fb4:	0f 5f       	rla	r15		
    4fb6:	0f 5f       	rla	r15		
    4fb8:	0f 5f       	rla	r15		
    4fba:	0f 5f       	rla	r15		
    4fbc:	84 df ee fe 	bis	r15,	-274(r4);0xfeee(r4)
		state[3]=sTemp;
    4fc0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4fc4:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4fc8:	9f 44 ee fe 	mov	-274(r4),0(r15)	;0xfeee(r4), 0x0000(r15)
    4fcc:	00 00 
			subkey[round-1][0] = key[1];
		}
		
//	****************** Key Scheduling End ******************

		for(round=31;round>0;round--)
    4fce:	b4 53 e6 fe 	add	#-1,	-282(r4);r3 As==11, 0xfee6(r4)
    4fd2:	84 93 e6 fe 	tst	-282(r4)	;0xfee6(r4)
    4fd6:	02 24       	jz	$+6      	;abs 0x4fdc
    4fd8:	30 40 5a 4a 	br	#0x4a5a	
		
//	******************* sBox End ***************************
//	****************** pLayer End **************************
		}
//	****************** addRoundkey *************************
 	state[3] ^= aKey[4];
    4fdc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4fe0:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4fe4:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4fe8:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4fec:	2d 4e       	mov	@r14,	r13	
    4fee:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    4ff2:	3e 52       	add	#8,	r14	;r2 As==11
    4ff4:	2e 4e       	mov	@r14,	r14	
    4ff6:	0e ed       	xor	r13,	r14	
    4ff8:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[2] ^= aKey[3];
    4ffc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5000:	2f 52       	add	#4,	r15	;r2 As==10
    5002:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    5006:	2e 52       	add	#4,	r14	;r2 As==10
    5008:	2d 4e       	mov	@r14,	r13	
    500a:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    500e:	3e 50 06 00 	add	#6,	r14	;#0x0006
    5012:	2e 4e       	mov	@r14,	r14	
    5014:	0e ed       	xor	r13,	r14	
    5016:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[1] ^= aKey[2];
    501a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    501e:	2f 53       	incd	r15		
    5020:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    5024:	2e 53       	incd	r14		
    5026:	2d 4e       	mov	@r14,	r13	
    5028:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    502c:	2e 52       	add	#4,	r14	;r2 As==10
    502e:	2e 4e       	mov	@r14,	r14	
    5030:	0e ed       	xor	r13,	r14	
    5032:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
	state[0] ^= aKey[1];
    5036:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    503a:	2e 4f       	mov	@r15,	r14	
    503c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5040:	2f 53       	incd	r15		
    5042:	2f 4f       	mov	@r15,	r15	
    5044:	0e ef       	xor	r15,	r14	
    5046:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    504a:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)

//	****************** addRoundkey End *********************
}
    504e:	31 50 18 01 	add	#280,	r1	;#0x0118
    5052:	34 41       	pop	r4		
    5054:	30 41       	ret			

00005056 <delay>:
/**************************************************/
/********************* DELAY **********************/
/**************************************************/

void delay(unsigned int d) 
{
    5056:	04 12       	push	r4		
    5058:	04 41       	mov	r1,	r4	
    505a:	24 53       	incd	r4		
    505c:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    5060:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    5064:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    5068:	0d 3c       	jmp	$+28     	;abs 0x5084
    {
      for (i = 0; i<d; i++) 
    506a:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    506e:	04 3c       	jmp	$+10     	;abs 0x5078
	{
	  nop();
    5070:	03 43       	nop			
	  nop();
    5072:	03 43       	nop			
void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    {
      for (i = 0; i<d; i++) 
    5074:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    5078:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    507c:	f8 ff 
    507e:	f8 2b       	jnc	$-14     	;abs 0x5070
/**************************************************/

void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    5080:	94 53 fa ff 	inc	-6(r4)		;0xfffa(r4)
    5084:	b4 90 ff 00 	cmp	#255,	-6(r4)	;#0x00ff, 0xfffa(r4)
    5088:	fa ff 
    508a:	ef 2b       	jnc	$-32     	;abs 0x506a
	{
	  nop();
	  nop();
	}
    }
}
    508c:	31 50 06 00 	add	#6,	r1	;#0x0006
    5090:	34 41       	pop	r4		
    5092:	30 41       	ret			

00005094 <uart1_init>:

#define UART1_BIT_RX (1 << UART1_PIN_RX)
#define UART1_BIT_TX (1 << UART1_PIN_TX)

int uart1_init()
{
    5094:	04 12       	push	r4		
    5096:	04 41       	mov	r1,	r4	
    5098:	24 53       	incd	r4		

  WDTCTL = WDTPW + WDTHOLD;
    509a:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    509e:	20 01 

  P1IE   = 0x00;        // Interrupt enable
    50a0:	c2 43 25 00 	mov.b	#0,	&0x0025	;r3 As==00
  P2IE   = 0x00;        // 0:disable 1:enable
    50a4:	c2 43 2d 00 	mov.b	#0,	&0x002d	;r3 As==00

  //Init of MSP430 Usart1 pins
  P3SEL |= (UART1_BIT_RX | UART1_BIT_TX);
    50a8:	5f 42 1b 00 	mov.b	&0x001b,r15	
    50ac:	7f d0 c0 ff 	bis.b	#-64,	r15	;#0xffc0
    50b0:	c2 4f 1b 00 	mov.b	r15,	&0x001b	

  //Init of USART1 Module
  U1ME  |= UTXE1|URXE1;           //Enable USART1 transmiter and receiver (UART mode)
    50b4:	5f 42 05 00 	mov.b	&0x0005,r15	
    50b8:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    50bc:	c2 4f 05 00 	mov.b	r15,	&0x0005	
  
  U1CTL  = SWRST;                 //reset
    50c0:	d2 43 78 00 	mov.b	#1,	&0x0078	;r3 As==01
  U1CTL  = CHAR;                  //init & release reset
    50c4:	f2 40 10 00 	mov.b	#16,	&0x0078	;#0x0010
    50c8:	78 00 
  
  U1TCTL = SSEL1 | TXEPT;        //use SMCLK 
    50ca:	f2 40 21 00 	mov.b	#33,	&0x0079	;#0x0021
    50ce:	79 00 
  U1RCTL = 0;
    50d0:	c2 43 7a 00 	mov.b	#0,	&0x007a	;r3 As==00
  // 38400 @ SMCLK 1MHz
#define U1BR1_INIT        0
#define U1BR0_INIT        0x1B
#define U1MCTL_INIT       0x03
  
  U1BR1  = U1BR1_INIT;
    50d4:	c2 43 7d 00 	mov.b	#0,	&0x007d	;r3 As==00
  U1BR0  = U1BR0_INIT;
    50d8:	f2 40 1b 00 	mov.b	#27,	&0x007c	;#0x001b
    50dc:	7c 00 
  U1MCTL = U1MCTL_INIT;
    50de:	f2 40 03 00 	mov.b	#3,	&0x007b	;#0x0003
    50e2:	7b 00 

  delay(0x800);
    50e4:	3f 40 00 08 	mov	#2048,	r15	;#0x0800
    50e8:	b0 12 56 50 	call	#0x5056	
  return 0;
    50ec:	0f 43       	clr	r15		
}
    50ee:	34 41       	pop	r4		
    50f0:	30 41       	ret			

000050f2 <uart1_putchar>:

int uart1_putchar(int c)
{
    50f2:	04 12       	push	r4		
    50f4:	04 41       	mov	r1,	r4	
    50f6:	24 53       	incd	r4		
    50f8:	21 83       	decd	r1		
    50fa:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  U1TXBUF = c;
    50fe:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5102:	4f 4f       	mov.b	r15,	r15	
    5104:	c2 4f 7f 00 	mov.b	r15,	&0x007f	
  while ((U1TCTL & TXEPT) != TXEPT);
    5108:	03 43       	nop			
    510a:	5f 42 79 00 	mov.b	&0x0079,r15	
    510e:	4f 4f       	mov.b	r15,	r15	
    5110:	1f f3       	and	#1,	r15	;r3 As==01
    5112:	0f 93       	tst	r15		
    5114:	fa 27       	jz	$-10     	;abs 0x510a
  return (unsigned char)c;
    5116:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    511a:	4f 4f       	mov.b	r15,	r15	
    511c:	4f 4f       	mov.b	r15,	r15	
}
    511e:	21 53       	incd	r1		
    5120:	34 41       	pop	r4		
    5122:	30 41       	ret			

00005124 <putchar>:
/**************************************************/
/******************** PUT CHAR *********************/
/**************************************************/

int putchar(int c)
{
    5124:	04 12       	push	r4		
    5126:	04 41       	mov	r1,	r4	
    5128:	24 53       	incd	r4		
    512a:	21 83       	decd	r1		
    512c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  return uart1_putchar(c);
    5130:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5134:	b0 12 f2 50 	call	#0x50f2	
}
    5138:	21 53       	incd	r1		
    513a:	34 41       	pop	r4		
    513c:	30 41       	ret			

0000513e <start_encrypt>:
/******************** END EXPE*********************/
/**************************************************/

void
start_encrypt()
{
    513e:	04 12       	push	r4		
    5140:	04 41       	mov	r1,	r4	
    5142:	24 53       	incd	r4		
  ;
}
    5144:	34 41       	pop	r4		
    5146:	30 41       	ret			

00005148 <start_decrypt>:
void
start_decrypt()
{
    5148:	04 12       	push	r4		
    514a:	04 41       	mov	r1,	r4	
    514c:	24 53       	incd	r4		
  ;
}
    514e:	34 41       	pop	r4		
    5150:	30 41       	ret			

00005152 <end_expe>:


void
end_expe()
{
    5152:	04 12       	push	r4		
    5154:	04 41       	mov	r1,	r4	
    5156:	24 53       	incd	r4		
  ;
}
    5158:	34 41       	pop	r4		
    515a:	30 41       	ret			

0000515c <_unexpected_>:
    515c:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	a2 40 a2 40 a2 40 a2 40 a2 40 a2 40 a2 40 a2 40     .@.@.@.@.@.@.@.@
    fff0:	a2 40 a2 40 a2 40 a2 40 a2 40 a2 40 a2 40 00 40     .@.@.@.@.@.@.@.@
