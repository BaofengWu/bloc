
klein96.elf:     file format elf32-msp430

SYMBOL TABLE:
00004000 l    d  .text	00000000 .text
0000559e l    d  .rodata	00000000 .rodata
00001100 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 klein96.c
0000559e l     O .rodata	00000010 sBox
0000410c l     F .text	000001c2 KeySetup
000042ce l     F .text	000001be InvKeySetup
0000448c l     F .text	0000038e Encrypt
0000481a l     F .text	00000c7c Decrypt
00004108 l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 tools.c
00005564 g     F .text	0000001a putchar
00000057 g       *ABS*	00000000 __BCSCTL1
0000005a g       *ABS*	00000000 __CACTL2
00000174 g       *ABS*	00000000 __TACCR1
00000084 g       *ABS*	00000000 __ADC12MCTL4
00000000 g       *ABS*	00000000 __data_size
0000015a g       *ABS*	00000000 __ADC12MEM13
00000052 g       *ABS*	00000000 __I2CNDAT
00004108  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00000024 g       *ABS*	00000000 __P1IES
0000007b g       *ABS*	00000000 __U1MCTL
000001f6 g       *ABS*	00000000 __DMA2SZ
00004108  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
00000076 g       *ABS*	00000000 __I2CDRW
0000007e g       *ABS*	00000000 __U1RXBUF
00000138 g       *ABS*	00000000 __OP2
00000076 g       *ABS*	00000000 __U0RXBUF
000001a4 g       *ABS*	00000000 __ADC12IFG
0000012e g       *ABS*	00000000 __TAIV
000001e6 g       *ABS*	00000000 __DMA0SZ
00000000 g       .vectors	00000000 _efartext
0000007c g       *ABS*	00000000 __U1BR0
00000130 g       *ABS*	00000000 __MPY
00000001 g       *ABS*	00000000 __IE2
0000013a g       *ABS*	00000000 __RESLO
00000136 g       *ABS*	00000000 __MACS
00000087 g       *ABS*	00000000 __ADC12MCTL7
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
000055ae g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
0000001d g       *ABS*	00000000 __P4OUT
000001f4 g       *ABS*	00000000 __DMA2DA
00000000 g       *ABS*	00000000 __bss_size
00000081 g       *ABS*	00000000 __ADC12MCTL1
000054d4 g     F .text	0000005e uart1_init
00000152 g       *ABS*	00000000 __ADC12MEM9
00004000  w      .text	00000000 __watchdog_support
00004102  w      .text	00000000 __stop_progExec__
00000050 g       *ABS*	00000000 __I2CIE
0000002d g       *ABS*	00000000 __P2IE
000001e4 g       *ABS*	00000000 __DMA0DA
00000192 g       *ABS*	00000000 __TBCCR0
00004108  w      .text	00000000 __isr_11
00000186 g       *ABS*	00000000 __TBCCTL2
00005592 g     F .text	0000000a end_expe
00000025 g       *ABS*	00000000 __P1IE
000001a0 g       *ABS*	00000000 __ADC12CTL0
00000072 g       *ABS*	00000000 __I2CDCTL
00000073 g       *ABS*	00000000 __U0MCTL
0000007a g       *ABS*	00000000 __U1RCTL
00000082 g       *ABS*	00000000 __ADC12MCTL2
0000019c g       *ABS*	00000000 __TBCCR5
00000035 g       *ABS*	00000000 __P6OUT
00000034 g       *ABS*	00000000 __P6IN
000001c8 g       *ABS*	00000000 __DAC12_0DAT
00000182 g       *ABS*	00000000 __TBCCTL0
0000019e g       *ABS*	00000000 __TBCCR6
00004108  w      .text	00000000 __isr_5
000055ae g       *ABS*	00000000 __data_load_start
00004108 g       .text	00000000 __dtors_end
000001ea g       *ABS*	00000000 __DMA1SA
00000088 g       *ABS*	00000000 __ADC12MCTL8
00000166 g       *ABS*	00000000 __TACCTL2
000001f0 g       *ABS*	00000000 __DMA2CTL
00004108  w      .text	00000000 __isr_2
00000156 g       *ABS*	00000000 __ADC12MEM11
00000160 g       *ABS*	00000000 __TACTL
00000158 g       *ABS*	00000000 __ADC12MEM12
00000071 g       *ABS*	00000000 __I2CTCTL
0000012c g       *ABS*	00000000 __FCTL3
00004108  w      .text	00000000 __isr_10
00000148 g       *ABS*	00000000 __ADC12MEM4
0000011a g       *ABS*	00000000 __I2CSA
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
0000008d g       *ABS*	00000000 __ADC12MCTL13
0000014c g       *ABS*	00000000 __ADC12MEM6
00000023 g       *ABS*	00000000 __P1IFG
0000013c g       *ABS*	00000000 __RESHI
00000072 g       *ABS*	00000000 __U0RCTL
00000172 g       *ABS*	00000000 __TACCR0
00000071 g       *ABS*	00000000 __U0TCTL
00000056 g       *ABS*	00000000 __DCOCTL
00000085 g       *ABS*	00000000 __ADC12MCTL5
00000003 g       *ABS*	00000000 __IFG2
00000005 g       *ABS*	00000000 __ME2
00001100 g     O .noinit	00000002 __wdt_clear_value
00000079 g       *ABS*	00000000 __U1TCTL
0000001b g       *ABS*	00000000 __P3SEL
000001e0 g       *ABS*	00000000 __DMA0CTL
00004108  w      .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
00000028 g       *ABS*	00000000 __P2IN
0000014e g       *ABS*	00000000 __ADC12MEM7
00000184 g       *ABS*	00000000 __TBCCTL1
0000005b g       *ABS*	00000000 __CAPD
00000075 g       *ABS*	00000000 __I2CSCLL
00004108  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00004028  w      .text	00000000 __do_clear_bss
0000008f g       *ABS*	00000000 __ADC12MCTL15
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
0000015c g       *ABS*	00000000 __ADC12MEM14
00000026 g       *ABS*	00000000 __P1SEL
00000198 g       *ABS*	00000000 __TBCCR3
00000080 g       *ABS*	00000000 __ADC12MCTL0
00000140 g       *ABS*	00000000 __ADC12MEM0
00000074 g       *ABS*	00000000 __U0BR0
00000051 g       *ABS*	00000000 __I2CIFG
0000559c  w      .text	00000000 _unexpected_
00004108  w      .text	00000000 __isr_8
0000014a g       *ABS*	00000000 __ADC12MEM5
00000070 g       *ABS*	00000000 __U0CTL
0000018a g       *ABS*	00000000 __TBCCTL4
00000073 g       *ABS*	00000000 __I2CPSC
0000008e g       *ABS*	00000000 __ADC12MCTL14
00004108  w      .text	00000000 __isr_3
000001a6 g       *ABS*	00000000 __ADC12IE
00005532 g     F .text	00000032 uart1_putchar
00000144 g       *ABS*	00000000 __ADC12MEM2
000001ee g       *ABS*	00000000 __DMA1SZ
00000033 g       *ABS*	00000000 __P5SEL
00000030 g       *ABS*	00000000 __P5IN
00004000  w      .text	00000000 _reset_vector__
00004108 g       .text	00000000 __ctors_start
00004108  w      .text	00000000 __isr_12
00000036 g       *ABS*	00000000 __P6DIR
00000018 g       *ABS*	00000000 __P3IN
00004010  w      .text	00000000 __do_copy_data
00000150 g       *ABS*	00000000 __ADC12MEM8
00000142 g       *ABS*	00000000 __ADC12MEM1
00001100 g       .rodata	00000000 __bss_start
0000007d g       *ABS*	00000000 __U1BR1
0000403e g     F .text	000000c4 main
00000176 g       *ABS*	00000000 __TACCR2
0000019a g       *ABS*	00000000 __TBCCR4
00004108  w      .text	00000000 __isr_13
00000078 g       *ABS*	00000000 __U1CTL
000001e2 g       *ABS*	00000000 __DMA0SA
00000170 g       *ABS*	00000000 __TAR
00000124 g       *ABS*	00000000 __DMACTL1
0000001e g       *ABS*	00000000 __P4DIR
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
00000154 g       *ABS*	00000000 __ADC12MEM10
000001f2 g       *ABS*	00000000 __DMA2SA
0000002a g       *ABS*	00000000 __P2DIR
00000089 g       *ABS*	00000000 __ADC12MCTL9
0000008a g       *ABS*	00000000 __ADC12MCTL10
00005496 g     F .text	0000003e delay
00000032 g       *ABS*	00000000 __P5DIR
000001c2 g       *ABS*	00000000 __DAC12_1CTL
000001a2 g       *ABS*	00000000 __ADC12CTL1
000001a8 g       *ABS*	00000000 __ADC12IV
000001e8 g       *ABS*	00000000 __DMA1CTL
00000075 g       *ABS*	00000000 __U0BR1
00004108  w      .text	00000000 __isr_9
0000018c g       *ABS*	00000000 __TBCCTL5
0000400c  w      .text	00000000 __init_stack
00000086 g       *ABS*	00000000 __ADC12MCTL6
00000188 g       *ABS*	00000000 __TBCCTL3
00000019 g       *ABS*	00000000 __P3OUT
000001ca g       *ABS*	00000000 __DAC12_1DAT
00004108 g       .text	00000000 __dtors_start
00004108  w      .text	00000000 __isr_6
00004108 g       .text	00000000 __ctors_end
00000132 g       *ABS*	00000000 __MPYS
0000011c g       *ABS*	00000000 __I2CIV
00000004 g       *ABS*	00000000 __ME1
00003900 g       *ABS*	00000000 __stack
00000037 g       *ABS*	00000000 __P6SEL
00004108  w      .text	00000000 __isr_1
0000008c g       *ABS*	00000000 __ADC12MCTL12
00001100 g       .rodata	00000000 _edata
00000077 g       *ABS*	00000000 __U0TXBUF
00001102 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
0000011e g       *ABS*	00000000 __TBIV
000001c0 g       *ABS*	00000000 __DAC12_0CTL
0000557e g     F .text	0000000a start_encrypt
0000015e g       *ABS*	00000000 __ADC12MEM15
00000134 g       *ABS*	00000000 __MAC
00000058 g       *ABS*	00000000 __BCSCTL2
00004102  w      .text	00000000 _endless_loop__
00000122 g       *ABS*	00000000 __DMACTL0
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
00000146 g       *ABS*	00000000 __ADC12MEM3
00000076 g       *ABS*	00000000 __I2CDRB
00000118 g       *ABS*	00000000 __I2COA
00000164 g       *ABS*	00000000 __TACCTL1
0000007f g       *ABS*	00000000 __U1TXBUF
00000055 g       *ABS*	00000000 __SVSCTL
00004010  w      .text	00000000 __low_level_init
00005588 g     F .text	0000000a start_decrypt
00001100 g       .rodata	00000000 __data_start
0000018e g       *ABS*	00000000 __TBCCTL6
00000074 g       *ABS*	00000000 __I2CSCLH
000001ec g       *ABS*	00000000 __DMA1DA
00000120 g       *ABS*	00000000 __WDTCTL
00000083 g       *ABS*	00000000 __ADC12MCTL3
00000000 g       *ABS*	00000000 __IE1
00000059 g       *ABS*	00000000 __CACTL1
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
0000008b g       *ABS*	00000000 __ADC12MCTL11
0000013e g       *ABS*	00000000 __SUMEXT
00000031 g       *ABS*	00000000 __P5OUT



Disassembly of section .text:

00004000 <__watchdog_support>:
    4000:	55 42 20 01 	mov.b	&0x0120,r5	
    4004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    4008:	82 45 00 11 	mov	r5,	&0x1100	

0000400c <__init_stack>:
    400c:	31 40 00 39 	mov	#14592,	r1	;#0x3900

00004010 <__do_copy_data>:
    4010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    4014:	0f 93       	tst	r15		
    4016:	08 24       	jz	$+18     	;abs 0x4028
    4018:	92 42 00 11 	mov	&0x1100,&0x0120	
    401c:	20 01 
    401e:	2f 83       	decd	r15		
    4020:	9f 4f ae 55 	mov	21934(r15),4352(r15);0x55ae(r15), 0x1100(r15)
    4024:	00 11 
    4026:	f8 23       	jnz	$-14     	;abs 0x4018

00004028 <__do_clear_bss>:
    4028:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    402c:	0f 93       	tst	r15		
    402e:	07 24       	jz	$+16     	;abs 0x403e
    4030:	92 42 00 11 	mov	&0x1100,&0x0120	
    4034:	20 01 
    4036:	1f 83       	dec	r15		
    4038:	cf 43 00 11 	mov.b	#0,	4352(r15);r3 As==00, 0x1100(r15)
    403c:	f9 23       	jnz	$-12     	;abs 0x4030

0000403e <main>:
    }
}


int main ()
{
    403e:	04 41       	mov	r1,	r4	
    4040:	24 53       	incd	r4		
    4042:	31 50 e4 ff 	add	#-28,	r1	;#0xffe4
	#ifdef PRINT
	uart1_init();
	u8 i;
	#endif
	
    u8 text[8] = {0x12,0x34,0x56,0x78,0x90,0xab,0xcd,0xef};
    4046:	f4 40 12 00 	mov.b	#18,	-30(r4)	;#0x0012, 0xffe2(r4)
    404a:	e2 ff 
    404c:	f4 40 34 00 	mov.b	#52,	-29(r4)	;#0x0034, 0xffe3(r4)
    4050:	e3 ff 
    4052:	f4 40 56 00 	mov.b	#86,	-28(r4)	;#0x0056, 0xffe4(r4)
    4056:	e4 ff 
    4058:	f4 40 78 00 	mov.b	#120,	-27(r4)	;#0x0078, 0xffe5(r4)
    405c:	e5 ff 
    405e:	f4 40 90 ff 	mov.b	#-112,	-26(r4)	;#0xff90, 0xffe6(r4)
    4062:	e6 ff 
    4064:	f4 40 ab ff 	mov.b	#-85,	-25(r4)	;#0xffab, 0xffe7(r4)
    4068:	e7 ff 
    406a:	f4 40 cd ff 	mov.b	#-51,	-24(r4)	;#0xffcd, 0xffe8(r4)
    406e:	e8 ff 
    4070:	f4 40 ef ff 	mov.b	#-17,	-23(r4)	;#0xffef, 0xffe9(r4)
    4074:	e9 ff 
    u8 crypt[8] = {0};
    4076:	0f 44       	mov	r4,	r15	
    4078:	3f 50 ea ff 	add	#-22,	r15	;#0xffea
    407c:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    4080:	2f 53       	incd	r15		
    4082:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    4086:	2f 53       	incd	r15		
    4088:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    408c:	2f 53       	incd	r15		
    408e:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    4092:	2f 53       	incd	r15		
    u8 k[12] = {0};
    4094:	0f 44       	mov	r4,	r15	
    4096:	3f 50 f2 ff 	add	#-14,	r15	;#0xfff2
    409a:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    409e:	2f 53       	incd	r15		
    40a0:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    40a4:	2f 53       	incd	r15		
    40a6:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    40aa:	2f 53       	incd	r15		
    40ac:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    40b0:	2f 53       	incd	r15		
    40b2:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    40b6:	2f 53       	incd	r15		
    40b8:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    40bc:	2f 53       	incd	r15		

	START_ENCRYPT();
    40be:	b0 12 7e 55 	call	#0x557e	
    Encrypt ( text, crypt, k );
    40c2:	0e 44       	mov	r4,	r14	
    40c4:	3e 50 f2 ff 	add	#-14,	r14	;#0xfff2
    40c8:	0f 44       	mov	r4,	r15	
    40ca:	3f 50 ea ff 	add	#-22,	r15	;#0xffea
    40ce:	0d 4e       	mov	r14,	r13	
    40d0:	0e 4f       	mov	r15,	r14	
    40d2:	0f 44       	mov	r4,	r15	
    40d4:	3f 50 e2 ff 	add	#-30,	r15	;#0xffe2
    40d8:	b0 12 8c 44 	call	#0x448c	
	START_DECRYPT();
    40dc:	b0 12 88 55 	call	#0x5588	
    Decrypt (crypt, text, k );
    40e0:	0e 44       	mov	r4,	r14	
    40e2:	3e 50 f2 ff 	add	#-14,	r14	;#0xfff2
    40e6:	0f 44       	mov	r4,	r15	
    40e8:	3f 50 ea ff 	add	#-22,	r15	;#0xffea
    40ec:	0d 4e       	mov	r14,	r13	
    40ee:	0e 44       	mov	r4,	r14	
    40f0:	3e 50 e2 ff 	add	#-30,	r14	;#0xffe2
    40f4:	b0 12 1a 48 	call	#0x481a	
	END_EXPE();
    40f8:	b0 12 92 55 	call	#0x5592	
    {
        printf("%x ",text[i]);
    }
	#endif

    return 0;
    40fc:	0f 43       	clr	r15		
}
    40fe:	31 50 1c 00 	add	#28,	r1	;#0x001c

00004102 <__stop_progExec__>:
    4102:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    4106:	fd 3f       	jmp	$-4      	;abs 0x4102

00004108 <__ctors_end>:
    4108:	30 40 9c 55 	br	#0x559c	

0000410c <KeySetup>:
    x ^= 0x1B & h;
}
#endif

static void KeySetup ( u8 k[], u8 r )
{
    410c:	04 12       	push	r4		
    410e:	04 41       	mov	r1,	r4	
    4110:	24 53       	incd	r4		
    4112:	31 50 ee ff 	add	#-18,	r1	;#0xffee
    4116:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    411a:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    u8 i;

    u8 tmp[12] =
    411e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4122:	5f 4f 01 00 	mov.b	1(r15),	r15	;0x0001(r15)
    4126:	c4 4f ed ff 	mov.b	r15,	-19(r4)	;0xffed(r4)
    412a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    412e:	5f 4f 02 00 	mov.b	2(r15),	r15	;0x0002(r15)
    4132:	c4 4f ee ff 	mov.b	r15,	-18(r4)	;0xffee(r4)
    4136:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    413a:	5f 4f 03 00 	mov.b	3(r15),	r15	;0x0003(r15)
    413e:	c4 4f ef ff 	mov.b	r15,	-17(r4)	;0xffef(r4)
    4142:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4146:	5f 4f 04 00 	mov.b	4(r15),	r15	;0x0004(r15)
    414a:	c4 4f f0 ff 	mov.b	r15,	-16(r4)	;0xfff0(r4)
    414e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4152:	5f 4f 05 00 	mov.b	5(r15),	r15	;0x0005(r15)
    4156:	c4 4f f1 ff 	mov.b	r15,	-15(r4)	;0xfff1(r4)
    {k[1],k[2],k[3],k[4],k[5],k[0],
    415a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    415e:	6f 4f       	mov.b	@r15,	r15	

static void KeySetup ( u8 k[], u8 r )
{
    u8 i;

    u8 tmp[12] =
    4160:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    4164:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4168:	5f 4f 07 00 	mov.b	7(r15),	r15	;0x0007(r15)
    416c:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	;0xfff3(r4)
    4170:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4174:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    4178:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    417c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4180:	5f 4f 09 00 	mov.b	9(r15),	r15	;0x0009(r15)
    4184:	c4 4f f5 ff 	mov.b	r15,	-11(r4)	;0xfff5(r4)
    4188:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    418c:	5f 4f 0a 00 	mov.b	10(r15),r15	;0x000a(r15)
    4190:	c4 4f f6 ff 	mov.b	r15,	-10(r4)	;0xfff6(r4)
    4194:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4198:	5f 4f 0b 00 	mov.b	11(r15),r15	;0x000b(r15)
    419c:	c4 4f f7 ff 	mov.b	r15,	-9(r4)	;0xfff7(r4)
    41a0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    41a4:	5f 4f 06 00 	mov.b	6(r15),	r15	;0x0006(r15)
    41a8:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    {k[1],k[2],k[3],k[4],k[5],k[0],
    k[7],k[8],k[9],k[10],k[11],k[6]};

    for (i=0 ; i<6 ; i++)
    41ac:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    41b0:	2a 3c       	jmp	$+86     	;abs 0x4206
    {
        k[i] = tmp[i+6];
    41b2:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    41b6:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    41ba:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    41be:	3e 50 06 00 	add	#6,	r14	;#0x0006
    41c2:	0d 44       	mov	r4,	r13	
    41c4:	3d 50 ed ff 	add	#-19,	r13	;#0xffed
    41c8:	0e 5d       	add	r13,	r14	
    41ca:	6e 4e       	mov.b	@r14,	r14	
    41cc:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
        k[i+6] = tmp[i] ^ tmp[i+6];
    41d0:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    41d4:	3f 50 06 00 	add	#6,	r15	;#0x0006
    41d8:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    41dc:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    41e0:	0d 44       	mov	r4,	r13	
    41e2:	3d 50 ed ff 	add	#-19,	r13	;#0xffed
    41e6:	0e 5d       	add	r13,	r14	
    41e8:	6d 4e       	mov.b	@r14,	r13	
    41ea:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    41ee:	3e 50 06 00 	add	#6,	r14	;#0x0006
    41f2:	0c 44       	mov	r4,	r12	
    41f4:	3c 50 ed ff 	add	#-19,	r12	;#0xffed
    41f8:	0e 5c       	add	r12,	r14	
    41fa:	6e 4e       	mov.b	@r14,	r14	
    41fc:	4e ed       	xor.b	r13,	r14	
    41fe:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)

    u8 tmp[12] =
    {k[1],k[2],k[3],k[4],k[5],k[0],
    k[7],k[8],k[9],k[10],k[11],k[6]};

    for (i=0 ; i<6 ; i++)
    4202:	d4 53 ec ff 	inc.b	-20(r4)	;0xffec(r4)
    4206:	f4 90 06 00 	cmp.b	#6,	-20(r4)	;#0x0006, 0xffec(r4)
    420a:	ec ff 
    420c:	d2 2b       	jnc	$-90     	;abs 0x41b2
    {
        k[i] = tmp[i+6];
        k[i+6] = tmp[i] ^ tmp[i+6];
    }

    k[2] = k[2] ^ r;
    420e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4212:	2f 53       	incd	r15		
    4214:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4218:	2e 53       	incd	r14		
    421a:	6e 4e       	mov.b	@r14,	r14	
    421c:	5e e4 fc ff 	xor.b	-4(r4),	r14	;0xfffc(r4)
    4220:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    k[7] = (sBox[k[7]&0x0f]) | (sBox[k[7]>>4] << 4);
    4224:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4228:	3e 50 07 00 	add	#7,	r14	;#0x0007
    422c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4230:	3f 50 07 00 	add	#7,	r15	;#0x0007
    4234:	6f 4f       	mov.b	@r15,	r15	
    4236:	4f 4f       	mov.b	r15,	r15	
    4238:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    423c:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4240:	4d 4f       	mov.b	r15,	r13	
    4242:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4246:	3f 50 07 00 	add	#7,	r15	;#0x0007
    424a:	6f 4f       	mov.b	@r15,	r15	
    424c:	4f 4f       	mov.b	r15,	r15	
    424e:	4f 4f       	mov.b	r15,	r15	
    4250:	12 c3       	clrc			
    4252:	4f 10       	rrc.b	r15		
    4254:	12 c3       	clrc			
    4256:	4f 10       	rrc.b	r15		
    4258:	12 c3       	clrc			
    425a:	4f 10       	rrc.b	r15		
    425c:	12 c3       	clrc			
    425e:	4f 10       	rrc.b	r15		
    4260:	4f 4f       	mov.b	r15,	r15	
    4262:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4266:	4f 4f       	mov.b	r15,	r15	
    4268:	0f 5f       	rla	r15		
    426a:	0f 5f       	rla	r15		
    426c:	0f 5f       	rla	r15		
    426e:	0f 5f       	rla	r15		
    4270:	4f 4f       	mov.b	r15,	r15	
    4272:	4f dd       	bis.b	r13,	r15	
    4274:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
    k[8] = (sBox[k[8]&0x0f]) | (sBox[k[8]>>4] << 4);
    4278:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    427c:	3e 52       	add	#8,	r14	;r2 As==11
    427e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4282:	3f 52       	add	#8,	r15	;r2 As==11
    4284:	6f 4f       	mov.b	@r15,	r15	
    4286:	4f 4f       	mov.b	r15,	r15	
    4288:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    428c:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4290:	4d 4f       	mov.b	r15,	r13	
    4292:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4296:	3f 52       	add	#8,	r15	;r2 As==11
    4298:	6f 4f       	mov.b	@r15,	r15	
    429a:	4f 4f       	mov.b	r15,	r15	
    429c:	4f 4f       	mov.b	r15,	r15	
    429e:	12 c3       	clrc			
    42a0:	4f 10       	rrc.b	r15		
    42a2:	12 c3       	clrc			
    42a4:	4f 10       	rrc.b	r15		
    42a6:	12 c3       	clrc			
    42a8:	4f 10       	rrc.b	r15		
    42aa:	12 c3       	clrc			
    42ac:	4f 10       	rrc.b	r15		
    42ae:	4f 4f       	mov.b	r15,	r15	
    42b0:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    42b4:	4f 4f       	mov.b	r15,	r15	
    42b6:	0f 5f       	rla	r15		
    42b8:	0f 5f       	rla	r15		
    42ba:	0f 5f       	rla	r15		
    42bc:	0f 5f       	rla	r15		
    42be:	4f 4f       	mov.b	r15,	r15	
    42c0:	4f dd       	bis.b	r13,	r15	
    42c2:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
}
    42c6:	31 50 12 00 	add	#18,	r1	;#0x0012
    42ca:	34 41       	pop	r4		
    42cc:	30 41       	ret			

000042ce <InvKeySetup>:

static void InvKeySetup ( u8 k[], u8 r )
{
    42ce:	04 12       	push	r4		
    42d0:	04 41       	mov	r1,	r4	
    42d2:	24 53       	incd	r4		
    42d4:	31 50 ee ff 	add	#-18,	r1	;#0xffee
    42d8:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    42dc:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    u8 i;
    u8 tmp[12];

    k[2] = k[2] ^ r;
    42e0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    42e4:	2f 53       	incd	r15		
    42e6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    42ea:	2e 53       	incd	r14		
    42ec:	6e 4e       	mov.b	@r14,	r14	
    42ee:	5e e4 fc ff 	xor.b	-4(r4),	r14	;0xfffc(r4)
    42f2:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    k[7] = (sBox[k[7]&0x0f]) | (sBox[k[7]>>4] << 4);
    42f6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    42fa:	3e 50 07 00 	add	#7,	r14	;#0x0007
    42fe:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4302:	3f 50 07 00 	add	#7,	r15	;#0x0007
    4306:	6f 4f       	mov.b	@r15,	r15	
    4308:	4f 4f       	mov.b	r15,	r15	
    430a:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    430e:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4312:	4d 4f       	mov.b	r15,	r13	
    4314:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4318:	3f 50 07 00 	add	#7,	r15	;#0x0007
    431c:	6f 4f       	mov.b	@r15,	r15	
    431e:	4f 4f       	mov.b	r15,	r15	
    4320:	4f 4f       	mov.b	r15,	r15	
    4322:	12 c3       	clrc			
    4324:	4f 10       	rrc.b	r15		
    4326:	12 c3       	clrc			
    4328:	4f 10       	rrc.b	r15		
    432a:	12 c3       	clrc			
    432c:	4f 10       	rrc.b	r15		
    432e:	12 c3       	clrc			
    4330:	4f 10       	rrc.b	r15		
    4332:	4f 4f       	mov.b	r15,	r15	
    4334:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4338:	4f 4f       	mov.b	r15,	r15	
    433a:	0f 5f       	rla	r15		
    433c:	0f 5f       	rla	r15		
    433e:	0f 5f       	rla	r15		
    4340:	0f 5f       	rla	r15		
    4342:	4f 4f       	mov.b	r15,	r15	
    4344:	4f dd       	bis.b	r13,	r15	
    4346:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
    k[8] = (sBox[k[8]&0x0f]) | (sBox[k[8]>>4] << 4);
    434a:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    434e:	3e 52       	add	#8,	r14	;r2 As==11
    4350:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4354:	3f 52       	add	#8,	r15	;r2 As==11
    4356:	6f 4f       	mov.b	@r15,	r15	
    4358:	4f 4f       	mov.b	r15,	r15	
    435a:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    435e:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4362:	4d 4f       	mov.b	r15,	r13	
    4364:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4368:	3f 52       	add	#8,	r15	;r2 As==11
    436a:	6f 4f       	mov.b	@r15,	r15	
    436c:	4f 4f       	mov.b	r15,	r15	
    436e:	4f 4f       	mov.b	r15,	r15	
    4370:	12 c3       	clrc			
    4372:	4f 10       	rrc.b	r15		
    4374:	12 c3       	clrc			
    4376:	4f 10       	rrc.b	r15		
    4378:	12 c3       	clrc			
    437a:	4f 10       	rrc.b	r15		
    437c:	12 c3       	clrc			
    437e:	4f 10       	rrc.b	r15		
    4380:	4f 4f       	mov.b	r15,	r15	
    4382:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4386:	4f 4f       	mov.b	r15,	r15	
    4388:	0f 5f       	rla	r15		
    438a:	0f 5f       	rla	r15		
    438c:	0f 5f       	rla	r15		
    438e:	0f 5f       	rla	r15		
    4390:	4f 4f       	mov.b	r15,	r15	
    4392:	4f dd       	bis.b	r13,	r15	
    4394:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)

    tmp[0] = k[5]; tmp[1] = k[0]; tmp[2] = k[1]; tmp[3] = k[2]; tmp[4] = k[3]; tmp[5] = k[4];
    4398:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    439c:	5f 4f 05 00 	mov.b	5(r15),	r15	;0x0005(r15)
    43a0:	c4 4f ed ff 	mov.b	r15,	-19(r4)	;0xffed(r4)
    43a4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43a8:	6f 4f       	mov.b	@r15,	r15	
    43aa:	c4 4f ee ff 	mov.b	r15,	-18(r4)	;0xffee(r4)
    43ae:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43b2:	5f 4f 01 00 	mov.b	1(r15),	r15	;0x0001(r15)
    43b6:	c4 4f ef ff 	mov.b	r15,	-17(r4)	;0xffef(r4)
    43ba:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43be:	5f 4f 02 00 	mov.b	2(r15),	r15	;0x0002(r15)
    43c2:	c4 4f f0 ff 	mov.b	r15,	-16(r4)	;0xfff0(r4)
    43c6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43ca:	5f 4f 03 00 	mov.b	3(r15),	r15	;0x0003(r15)
    43ce:	c4 4f f1 ff 	mov.b	r15,	-15(r4)	;0xfff1(r4)
    43d2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43d6:	5f 4f 04 00 	mov.b	4(r15),	r15	;0x0004(r15)
    43da:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    tmp[6] = k[11]; tmp[7] = k[6]; tmp[8] = k[7]; tmp[9] = k[8]; tmp[10] = k[9]; tmp[11] = k[10];
    43de:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43e2:	5f 4f 0b 00 	mov.b	11(r15),r15	;0x000b(r15)
    43e6:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	;0xfff3(r4)
    43ea:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43ee:	5f 4f 06 00 	mov.b	6(r15),	r15	;0x0006(r15)
    43f2:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    43f6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    43fa:	5f 4f 07 00 	mov.b	7(r15),	r15	;0x0007(r15)
    43fe:	c4 4f f5 ff 	mov.b	r15,	-11(r4)	;0xfff5(r4)
    4402:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4406:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    440a:	c4 4f f6 ff 	mov.b	r15,	-10(r4)	;0xfff6(r4)
    440e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4412:	5f 4f 09 00 	mov.b	9(r15),	r15	;0x0009(r15)
    4416:	c4 4f f7 ff 	mov.b	r15,	-9(r4)	;0xfff7(r4)
    441a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    441e:	5f 4f 0a 00 	mov.b	10(r15),r15	;0x000a(r15)
    4422:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)

    for (i=0 ; i<6 ; i++)
    4426:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    442a:	28 3c       	jmp	$+82     	;abs 0x447c
    {
        k[i] = tmp[i] ^ tmp[i+6];
    442c:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    4430:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    4434:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    4438:	0d 44       	mov	r4,	r13	
    443a:	3d 50 ed ff 	add	#-19,	r13	;#0xffed
    443e:	0e 5d       	add	r13,	r14	
    4440:	6d 4e       	mov.b	@r14,	r13	
    4442:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    4446:	3e 50 06 00 	add	#6,	r14	;#0x0006
    444a:	0c 44       	mov	r4,	r12	
    444c:	3c 50 ed ff 	add	#-19,	r12	;#0xffed
    4450:	0e 5c       	add	r12,	r14	
    4452:	6e 4e       	mov.b	@r14,	r14	
    4454:	4e ed       	xor.b	r13,	r14	
    4456:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
        k[i+6] = tmp[i];
    445a:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    445e:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4462:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    4466:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    446a:	0d 44       	mov	r4,	r13	
    446c:	3d 50 ed ff 	add	#-19,	r13	;#0xffed
    4470:	0e 5d       	add	r13,	r14	
    4472:	6e 4e       	mov.b	@r14,	r14	
    4474:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    k[8] = (sBox[k[8]&0x0f]) | (sBox[k[8]>>4] << 4);

    tmp[0] = k[5]; tmp[1] = k[0]; tmp[2] = k[1]; tmp[3] = k[2]; tmp[4] = k[3]; tmp[5] = k[4];
    tmp[6] = k[11]; tmp[7] = k[6]; tmp[8] = k[7]; tmp[9] = k[8]; tmp[10] = k[9]; tmp[11] = k[10];

    for (i=0 ; i<6 ; i++)
    4478:	d4 53 ec ff 	inc.b	-20(r4)	;0xffec(r4)
    447c:	f4 90 06 00 	cmp.b	#6,	-20(r4)	;#0x0006, 0xffec(r4)
    4480:	ec ff 
    4482:	d4 2b       	jnc	$-86     	;abs 0x442c
    {
        k[i] = tmp[i] ^ tmp[i+6];
        k[i+6] = tmp[i];
    }
}
    4484:	31 50 12 00 	add	#18,	r1	;#0x0012
    4488:	34 41       	pop	r4		
    448a:	30 41       	ret			

0000448c <Encrypt>:


static void Encrypt ( u8 text[], u8 crypt[], u8 key[] )
{
    448c:	04 12       	push	r4		
    448e:	04 41       	mov	r1,	r4	
    4490:	24 53       	incd	r4		
    4492:	31 50 f0 ff 	add	#-16,	r1	;#0xfff0
    4496:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    449a:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    449e:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    u8 i;
    for (i=0 ; i<8 ; i++)
    44a2:	c4 43 ee ff 	mov.b	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    44a6:	0d 3c       	jmp	$+28     	;abs 0x44c2
    {
        crypt[i] = text[i];
    44a8:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    44ac:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    44b0:	5e 44 ee ff 	mov.b	-18(r4),r14	;0xffee(r4)
    44b4:	1e 54 f8 ff 	add	-8(r4),	r14	;0xfff8(r4)
    44b8:	6e 4e       	mov.b	@r14,	r14	
    44ba:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)


static void Encrypt ( u8 text[], u8 crypt[], u8 key[] )
{
    u8 i;
    for (i=0 ; i<8 ; i++)
    44be:	d4 53 ee ff 	inc.b	-18(r4)	;0xffee(r4)
    44c2:	f4 92 ee ff 	cmp.b	#8,	-18(r4)	;r2 As==11, 0xffee(r4)
    44c6:	f0 2b       	jnc	$-30     	;abs 0x44a8
        crypt[i] = text[i];
    }

    u8 t[8];
    u8 r;
    for (r=1 ; r<21 ; r++)
    44c8:	d4 43 ef ff 	mov.b	#1,	-17(r4)	;r3 As==01, 0xffef(r4)
    44cc:	30 40 d4 47 	br	#0x47d4	
    {

        for (i=0 ; i<8 ; i++)
    44d0:	c4 43 ee ff 	mov.b	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    44d4:	13 3c       	jmp	$+40     	;abs 0x44fc
        {
            crypt[i] = crypt[i] ^ key[i];
    44d6:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    44da:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    44de:	5e 44 ee ff 	mov.b	-18(r4),r14	;0xffee(r4)
    44e2:	1e 54 fa ff 	add	-6(r4),	r14	;0xfffa(r4)
    44e6:	6d 4e       	mov.b	@r14,	r13	
    44e8:	5e 44 ee ff 	mov.b	-18(r4),r14	;0xffee(r4)
    44ec:	1e 54 fc ff 	add	-4(r4),	r14	;0xfffc(r4)
    44f0:	6e 4e       	mov.b	@r14,	r14	
    44f2:	4e ed       	xor.b	r13,	r14	
    44f4:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    u8 t[8];
    u8 r;
    for (r=1 ; r<21 ; r++)
    {

        for (i=0 ; i<8 ; i++)
    44f8:	d4 53 ee ff 	inc.b	-18(r4)	;0xffee(r4)
    44fc:	f4 92 ee ff 	cmp.b	#8,	-18(r4)	;r2 As==11, 0xffee(r4)
    4500:	ea 2b       	jnc	$-42     	;abs 0x44d6
        {
            crypt[i] = crypt[i] ^ key[i];
        }

        for (i=0 ; i<8 ; i++)
    4502:	c4 43 ee ff 	mov.b	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    4506:	2d 3c       	jmp	$+92     	;abs 0x4562
        {
            crypt[i] = (sBox[crypt[i]&0xf]) | (sBox[crypt[i]>>4] << 4);
    4508:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    450c:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4510:	0e 5f       	add	r15,	r14	
    4512:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4516:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    451a:	6f 4f       	mov.b	@r15,	r15	
    451c:	4f 4f       	mov.b	r15,	r15	
    451e:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    4522:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    4526:	4d 4f       	mov.b	r15,	r13	
    4528:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    452c:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    4530:	6f 4f       	mov.b	@r15,	r15	
    4532:	4f 4f       	mov.b	r15,	r15	
    4534:	4f 4f       	mov.b	r15,	r15	
    4536:	12 c3       	clrc			
    4538:	4f 10       	rrc.b	r15		
    453a:	12 c3       	clrc			
    453c:	4f 10       	rrc.b	r15		
    453e:	12 c3       	clrc			
    4540:	4f 10       	rrc.b	r15		
    4542:	12 c3       	clrc			
    4544:	4f 10       	rrc.b	r15		
    4546:	4f 4f       	mov.b	r15,	r15	
    4548:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    454c:	4f 4f       	mov.b	r15,	r15	
    454e:	0f 5f       	rla	r15		
    4550:	0f 5f       	rla	r15		
    4552:	0f 5f       	rla	r15		
    4554:	0f 5f       	rla	r15		
    4556:	4f 4f       	mov.b	r15,	r15	
    4558:	4f dd       	bis.b	r13,	r15	
    455a:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        for (i=0 ; i<8 ; i++)
        {
            crypt[i] = crypt[i] ^ key[i];
        }

        for (i=0 ; i<8 ; i++)
    455e:	d4 53 ee ff 	inc.b	-18(r4)	;0xffee(r4)
    4562:	f4 92 ee ff 	cmp.b	#8,	-18(r4)	;r2 As==11, 0xffee(r4)
    4566:	d0 2b       	jnc	$-94     	;abs 0x4508
        {
            crypt[i] = (sBox[crypt[i]&0xf]) | (sBox[crypt[i]>>4] << 4);
        }

        for (i=0 ; i<8 ; i++)
    4568:	c4 43 ee ff 	mov.b	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    456c:	14 3c       	jmp	$+42     	;abs 0x4596
        {
            t[(i+6)&0x7] = crypt[i];
    456e:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4572:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4576:	0d 4f       	mov	r15,	r13	
    4578:	3d f0 07 00 	and	#7,	r13	;#0x0007
    457c:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4580:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    4584:	6e 4f       	mov.b	@r15,	r14	
    4586:	0f 44       	mov	r4,	r15	
    4588:	3f 50 f0 ff 	add	#-16,	r15	;#0xfff0
    458c:	0f 5d       	add	r13,	r15	
    458e:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
        for (i=0 ; i<8 ; i++)
        {
            crypt[i] = (sBox[crypt[i]&0xf]) | (sBox[crypt[i]>>4] << 4);
        }

        for (i=0 ; i<8 ; i++)
    4592:	d4 53 ee ff 	inc.b	-18(r4)	;0xffee(r4)
    4596:	f4 92 ee ff 	cmp.b	#8,	-18(r4)	;r2 As==11, 0xffee(r4)
    459a:	e9 2b       	jnc	$-44     	;abs 0x456e
        {
            t[(i+6)&0x7] = crypt[i];

        }

        crypt[0] = L(t[0] ^ t[1]) ^ t[1] ^ t[2] ^ t[3];
    459c:	5e 44 f0 ff 	mov.b	-16(r4),r14	;0xfff0(r4)
    45a0:	5f 44 f1 ff 	mov.b	-15(r4),r15	;0xfff1(r4)
    45a4:	4f ee       	xor.b	r14,	r15	
    45a6:	4f 4f       	mov.b	r15,	r15	
    45a8:	0f 5f       	rla	r15		
    45aa:	4e 4f       	mov.b	r15,	r14	
    45ac:	5d 44 f0 ff 	mov.b	-16(r4),r13	;0xfff0(r4)
    45b0:	5f 44 f1 ff 	mov.b	-15(r4),r15	;0xfff1(r4)
    45b4:	4f ed       	xor.b	r13,	r15	
    45b6:	4f 4f       	mov.b	r15,	r15	
    45b8:	8f 11       	sxt	r15		
    45ba:	8f 10       	swpb	r15		
    45bc:	4f 4f       	mov.b	r15,	r15	
    45be:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    45c2:	4e ef       	xor.b	r15,	r14	
    45c4:	5f 44 f1 ff 	mov.b	-15(r4),r15	;0xfff1(r4)
    45c8:	4e ef       	xor.b	r15,	r14	
    45ca:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    45ce:	4e ef       	xor.b	r15,	r14	
    45d0:	5f 44 f3 ff 	mov.b	-13(r4),r15	;0xfff3(r4)
    45d4:	4f ee       	xor.b	r14,	r15	
    45d6:	4e 4f       	mov.b	r15,	r14	
    45d8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    45dc:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
        crypt[1] = L(t[1] ^ t[2]) ^ t[0] ^ t[2] ^ t[3];
    45e0:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    45e4:	1e 53       	inc	r14		
    45e6:	5d 44 f1 ff 	mov.b	-15(r4),r13	;0xfff1(r4)
    45ea:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    45ee:	4f ed       	xor.b	r13,	r15	
    45f0:	4f 4f       	mov.b	r15,	r15	
    45f2:	0f 5f       	rla	r15		
    45f4:	4d 4f       	mov.b	r15,	r13	
    45f6:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfff1(r4)
    45fa:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    45fe:	4f ec       	xor.b	r12,	r15	
    4600:	4f 4f       	mov.b	r15,	r15	
    4602:	8f 11       	sxt	r15		
    4604:	8f 10       	swpb	r15		
    4606:	4f 4f       	mov.b	r15,	r15	
    4608:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    460c:	4d ef       	xor.b	r15,	r13	
    460e:	5f 44 f0 ff 	mov.b	-16(r4),r15	;0xfff0(r4)
    4612:	4d ef       	xor.b	r15,	r13	
    4614:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    4618:	4d ef       	xor.b	r15,	r13	
    461a:	5f 44 f3 ff 	mov.b	-13(r4),r15	;0xfff3(r4)
    461e:	4f ed       	xor.b	r13,	r15	
    4620:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        crypt[2] = L(t[2] ^ t[3]) ^ t[0] ^ t[1] ^ t[3];
    4624:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4628:	2e 53       	incd	r14		
    462a:	5d 44 f2 ff 	mov.b	-14(r4),r13	;0xfff2(r4)
    462e:	5f 44 f3 ff 	mov.b	-13(r4),r15	;0xfff3(r4)
    4632:	4f ed       	xor.b	r13,	r15	
    4634:	4f 4f       	mov.b	r15,	r15	
    4636:	0f 5f       	rla	r15		
    4638:	4d 4f       	mov.b	r15,	r13	
    463a:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfff2(r4)
    463e:	5f 44 f3 ff 	mov.b	-13(r4),r15	;0xfff3(r4)
    4642:	4f ec       	xor.b	r12,	r15	
    4644:	4f 4f       	mov.b	r15,	r15	
    4646:	8f 11       	sxt	r15		
    4648:	8f 10       	swpb	r15		
    464a:	4f 4f       	mov.b	r15,	r15	
    464c:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4650:	4d ef       	xor.b	r15,	r13	
    4652:	5f 44 f0 ff 	mov.b	-16(r4),r15	;0xfff0(r4)
    4656:	4d ef       	xor.b	r15,	r13	
    4658:	5f 44 f1 ff 	mov.b	-15(r4),r15	;0xfff1(r4)
    465c:	4d ef       	xor.b	r15,	r13	
    465e:	5f 44 f3 ff 	mov.b	-13(r4),r15	;0xfff3(r4)
    4662:	4f ed       	xor.b	r13,	r15	
    4664:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        crypt[3] = L(t[3] ^ t[0]) ^ t[0] ^ t[1] ^ t[2];
    4668:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    466c:	3e 50 03 00 	add	#3,	r14	;#0x0003
    4670:	5d 44 f3 ff 	mov.b	-13(r4),r13	;0xfff3(r4)
    4674:	5f 44 f0 ff 	mov.b	-16(r4),r15	;0xfff0(r4)
    4678:	4f ed       	xor.b	r13,	r15	
    467a:	4f 4f       	mov.b	r15,	r15	
    467c:	0f 5f       	rla	r15		
    467e:	4d 4f       	mov.b	r15,	r13	
    4680:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfff3(r4)
    4684:	5f 44 f0 ff 	mov.b	-16(r4),r15	;0xfff0(r4)
    4688:	4f ec       	xor.b	r12,	r15	
    468a:	4f 4f       	mov.b	r15,	r15	
    468c:	8f 11       	sxt	r15		
    468e:	8f 10       	swpb	r15		
    4690:	4f 4f       	mov.b	r15,	r15	
    4692:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4696:	4d ef       	xor.b	r15,	r13	
    4698:	5f 44 f0 ff 	mov.b	-16(r4),r15	;0xfff0(r4)
    469c:	4d ef       	xor.b	r15,	r13	
    469e:	5f 44 f1 ff 	mov.b	-15(r4),r15	;0xfff1(r4)
    46a2:	4d ef       	xor.b	r15,	r13	
    46a4:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    46a8:	4f ed       	xor.b	r13,	r15	
    46aa:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        crypt[4] = L(t[4] ^ t[5]) ^ t[5] ^ t[6] ^ t[7];
    46ae:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    46b2:	2e 52       	add	#4,	r14	;r2 As==10
    46b4:	5d 44 f4 ff 	mov.b	-12(r4),r13	;0xfff4(r4)
    46b8:	5f 44 f5 ff 	mov.b	-11(r4),r15	;0xfff5(r4)
    46bc:	4f ed       	xor.b	r13,	r15	
    46be:	4f 4f       	mov.b	r15,	r15	
    46c0:	0f 5f       	rla	r15		
    46c2:	4d 4f       	mov.b	r15,	r13	
    46c4:	5c 44 f4 ff 	mov.b	-12(r4),r12	;0xfff4(r4)
    46c8:	5f 44 f5 ff 	mov.b	-11(r4),r15	;0xfff5(r4)
    46cc:	4f ec       	xor.b	r12,	r15	
    46ce:	4f 4f       	mov.b	r15,	r15	
    46d0:	8f 11       	sxt	r15		
    46d2:	8f 10       	swpb	r15		
    46d4:	4f 4f       	mov.b	r15,	r15	
    46d6:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    46da:	4d ef       	xor.b	r15,	r13	
    46dc:	5f 44 f5 ff 	mov.b	-11(r4),r15	;0xfff5(r4)
    46e0:	4d ef       	xor.b	r15,	r13	
    46e2:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    46e6:	4d ef       	xor.b	r15,	r13	
    46e8:	5f 44 f7 ff 	mov.b	-9(r4),	r15	;0xfff7(r4)
    46ec:	4f ed       	xor.b	r13,	r15	
    46ee:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        crypt[5] = L(t[5] ^ t[6]) ^ t[4] ^ t[6] ^ t[7];
    46f2:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    46f6:	3e 50 05 00 	add	#5,	r14	;#0x0005
    46fa:	5d 44 f5 ff 	mov.b	-11(r4),r13	;0xfff5(r4)
    46fe:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    4702:	4f ed       	xor.b	r13,	r15	
    4704:	4f 4f       	mov.b	r15,	r15	
    4706:	0f 5f       	rla	r15		
    4708:	4d 4f       	mov.b	r15,	r13	
    470a:	5c 44 f5 ff 	mov.b	-11(r4),r12	;0xfff5(r4)
    470e:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    4712:	4f ec       	xor.b	r12,	r15	
    4714:	4f 4f       	mov.b	r15,	r15	
    4716:	8f 11       	sxt	r15		
    4718:	8f 10       	swpb	r15		
    471a:	4f 4f       	mov.b	r15,	r15	
    471c:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4720:	4d ef       	xor.b	r15,	r13	
    4722:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    4726:	4d ef       	xor.b	r15,	r13	
    4728:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    472c:	4d ef       	xor.b	r15,	r13	
    472e:	5f 44 f7 ff 	mov.b	-9(r4),	r15	;0xfff7(r4)
    4732:	4f ed       	xor.b	r13,	r15	
    4734:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        crypt[6] = L(t[6] ^ t[7]) ^ t[4] ^ t[5] ^ t[7];
    4738:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    473c:	3e 50 06 00 	add	#6,	r14	;#0x0006
    4740:	5d 44 f6 ff 	mov.b	-10(r4),r13	;0xfff6(r4)
    4744:	5f 44 f7 ff 	mov.b	-9(r4),	r15	;0xfff7(r4)
    4748:	4f ed       	xor.b	r13,	r15	
    474a:	4f 4f       	mov.b	r15,	r15	
    474c:	0f 5f       	rla	r15		
    474e:	4d 4f       	mov.b	r15,	r13	
    4750:	5c 44 f6 ff 	mov.b	-10(r4),r12	;0xfff6(r4)
    4754:	5f 44 f7 ff 	mov.b	-9(r4),	r15	;0xfff7(r4)
    4758:	4f ec       	xor.b	r12,	r15	
    475a:	4f 4f       	mov.b	r15,	r15	
    475c:	8f 11       	sxt	r15		
    475e:	8f 10       	swpb	r15		
    4760:	4f 4f       	mov.b	r15,	r15	
    4762:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4766:	4d ef       	xor.b	r15,	r13	
    4768:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    476c:	4d ef       	xor.b	r15,	r13	
    476e:	5f 44 f5 ff 	mov.b	-11(r4),r15	;0xfff5(r4)
    4772:	4d ef       	xor.b	r15,	r13	
    4774:	5f 44 f7 ff 	mov.b	-9(r4),	r15	;0xfff7(r4)
    4778:	4f ed       	xor.b	r13,	r15	
    477a:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        crypt[7] = L(t[7] ^ t[4]) ^ t[4] ^ t[5] ^ t[6];
    477e:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    4782:	3e 50 07 00 	add	#7,	r14	;#0x0007
    4786:	5d 44 f7 ff 	mov.b	-9(r4),	r13	;0xfff7(r4)
    478a:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    478e:	4f ed       	xor.b	r13,	r15	
    4790:	4f 4f       	mov.b	r15,	r15	
    4792:	0f 5f       	rla	r15		
    4794:	4d 4f       	mov.b	r15,	r13	
    4796:	5c 44 f7 ff 	mov.b	-9(r4),	r12	;0xfff7(r4)
    479a:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    479e:	4f ec       	xor.b	r12,	r15	
    47a0:	4f 4f       	mov.b	r15,	r15	
    47a2:	8f 11       	sxt	r15		
    47a4:	8f 10       	swpb	r15		
    47a6:	4f 4f       	mov.b	r15,	r15	
    47a8:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    47ac:	4d ef       	xor.b	r15,	r13	
    47ae:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    47b2:	4d ef       	xor.b	r15,	r13	
    47b4:	5f 44 f5 ff 	mov.b	-11(r4),r15	;0xfff5(r4)
    47b8:	4d ef       	xor.b	r15,	r13	
    47ba:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    47be:	4f ed       	xor.b	r13,	r15	
    47c0:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)

        KeySetup(key,r);
    47c4:	5e 44 ef ff 	mov.b	-17(r4),r14	;0xffef(r4)
    47c8:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    47cc:	b0 12 0c 41 	call	#0x410c	
        crypt[i] = text[i];
    }

    u8 t[8];
    u8 r;
    for (r=1 ; r<21 ; r++)
    47d0:	d4 53 ef ff 	inc.b	-17(r4)	;0xffef(r4)
    47d4:	f4 90 15 00 	cmp.b	#21,	-17(r4)	;#0x0015, 0xffef(r4)
    47d8:	ef ff 
    47da:	02 2c       	jc	$+6      	;abs 0x47e0
    47dc:	30 40 d0 44 	br	#0x44d0	

        KeySetup(key,r);

    }

    for (i=0 ; i<8 ; i++)
    47e0:	c4 43 ee ff 	mov.b	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    47e4:	13 3c       	jmp	$+40     	;abs 0x480c
    {
        crypt[i] = crypt[i] ^ key[i];
    47e6:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    47ea:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    47ee:	5e 44 ee ff 	mov.b	-18(r4),r14	;0xffee(r4)
    47f2:	1e 54 fa ff 	add	-6(r4),	r14	;0xfffa(r4)
    47f6:	6d 4e       	mov.b	@r14,	r13	
    47f8:	5e 44 ee ff 	mov.b	-18(r4),r14	;0xffee(r4)
    47fc:	1e 54 fc ff 	add	-4(r4),	r14	;0xfffc(r4)
    4800:	6e 4e       	mov.b	@r14,	r14	
    4802:	4e ed       	xor.b	r13,	r14	
    4804:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)

        KeySetup(key,r);

    }

    for (i=0 ; i<8 ; i++)
    4808:	d4 53 ee ff 	inc.b	-18(r4)	;0xffee(r4)
    480c:	f4 92 ee ff 	cmp.b	#8,	-18(r4)	;r2 As==11, 0xffee(r4)
    4810:	ea 2b       	jnc	$-42     	;abs 0x47e6
    {
        crypt[i] = crypt[i] ^ key[i];
    }

}
    4812:	31 50 10 00 	add	#16,	r1	;#0x0010
    4816:	34 41       	pop	r4		
    4818:	30 41       	ret			

0000481a <Decrypt>:


static void Decrypt ( u8 text[], u8 crypt[], u8 key[] )
{
    481a:	04 12       	push	r4		
    481c:	04 41       	mov	r1,	r4	
    481e:	24 53       	incd	r4		
    4820:	31 50 ee ff 	add	#-18,	r1	;#0xffee
    4824:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    4828:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    482c:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    u8 i;
    for (i=0 ; i<8 ; i++)
    4830:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    4834:	0d 3c       	jmp	$+28     	;abs 0x4850
    {
        crypt[i] = text[i];
    4836:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    483a:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    483e:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    4842:	1e 54 f8 ff 	add	-8(r4),	r14	;0xfff8(r4)
    4846:	6e 4e       	mov.b	@r14,	r14	
    4848:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)


static void Decrypt ( u8 text[], u8 crypt[], u8 key[] )
{
    u8 i;
    for (i=0 ; i<8 ; i++)
    484c:	d4 53 ec ff 	inc.b	-20(r4)	;0xffec(r4)
    4850:	f4 92 ec ff 	cmp.b	#8,	-20(r4)	;r2 As==11, 0xffec(r4)
    4854:	f0 2b       	jnc	$-30     	;abs 0x4836
    {
        crypt[i] = text[i];
    }

    for (i=0 ; i<8 ; i++)
    4856:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    485a:	13 3c       	jmp	$+40     	;abs 0x4882
    {
        crypt[i] = crypt[i] ^ key[i];
    485c:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    4860:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    4864:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    4868:	1e 54 fa ff 	add	-6(r4),	r14	;0xfffa(r4)
    486c:	6d 4e       	mov.b	@r14,	r13	
    486e:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    4872:	1e 54 fc ff 	add	-4(r4),	r14	;0xfffc(r4)
    4876:	6e 4e       	mov.b	@r14,	r14	
    4878:	4e ed       	xor.b	r13,	r14	
    487a:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    for (i=0 ; i<8 ; i++)
    {
        crypt[i] = text[i];
    }

    for (i=0 ; i<8 ; i++)
    487e:	d4 53 ec ff 	inc.b	-20(r4)	;0xffec(r4)
    4882:	f4 92 ec ff 	cmp.b	#8,	-20(r4)	;r2 As==11, 0xffec(r4)
    4886:	ea 2b       	jnc	$-42     	;abs 0x485c
        crypt[i] = crypt[i] ^ key[i];
    }

    u8 t[8];
    u8 r;
    for (r=20 ; r>0 ; r--)
    4888:	f4 40 14 00 	mov.b	#20,	-19(r4)	;#0x0014, 0xffed(r4)
    488c:	ed ff 
    488e:	30 40 84 54 	br	#0x5484	
    {
        u8 var1 = crypt[3]^crypt[1]^crypt[2]^crypt[0];
    4892:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4896:	3f 50 03 00 	add	#3,	r15	;#0x0003
    489a:	6e 4f       	mov.b	@r15,	r14	
    489c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48a0:	1f 53       	inc	r15		
    48a2:	6f 4f       	mov.b	@r15,	r15	
    48a4:	4e ef       	xor.b	r15,	r14	
    48a6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48aa:	2f 53       	incd	r15		
    48ac:	6f 4f       	mov.b	@r15,	r15	
    48ae:	4e ef       	xor.b	r15,	r14	
    48b0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48b4:	6f 4f       	mov.b	@r15,	r15	
    48b6:	4d 4e       	mov.b	r14,	r13	
    48b8:	4d ef       	xor.b	r15,	r13	
    48ba:	c4 4d ee ff 	mov.b	r13,	-18(r4)	;0xffee(r4)
        u8 var2 = crypt[7]^crypt[6]^crypt[5]^crypt[4];
    48be:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48c2:	3f 50 07 00 	add	#7,	r15	;#0x0007
    48c6:	6e 4f       	mov.b	@r15,	r14	
    48c8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48cc:	3f 50 06 00 	add	#6,	r15	;#0x0006
    48d0:	6f 4f       	mov.b	@r15,	r15	
    48d2:	4e ef       	xor.b	r15,	r14	
    48d4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48d8:	3f 50 05 00 	add	#5,	r15	;#0x0005
    48dc:	6f 4f       	mov.b	@r15,	r15	
    48de:	4e ef       	xor.b	r15,	r14	
    48e0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48e4:	2f 52       	add	#4,	r15	;r2 As==10
    48e6:	6f 4f       	mov.b	@r15,	r15	
    48e8:	4d 4e       	mov.b	r14,	r13	
    48ea:	4d ef       	xor.b	r15,	r13	
    48ec:	c4 4d ef ff 	mov.b	r13,	-17(r4)	;0xffef(r4)

        t[0] = L(L(L(var1)^crypt[2]^crypt[0])^crypt[1]^crypt[0])^crypt[3]^crypt[1]^crypt[2];
    48f0:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    48f4:	0e 4f       	mov	r15,	r14	
    48f6:	0e 5e       	rla	r14		
    48f8:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    48fc:	4f 4f       	mov.b	r15,	r15	
    48fe:	8f 11       	sxt	r15		
    4900:	8f 10       	swpb	r15		
    4902:	4f 4f       	mov.b	r15,	r15	
    4904:	4f 4f       	mov.b	r15,	r15	
    4906:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    490a:	0e ef       	xor	r15,	r14	
    490c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4910:	2f 53       	incd	r15		
    4912:	6f 4f       	mov.b	@r15,	r15	
    4914:	4f 4f       	mov.b	r15,	r15	
    4916:	0e ef       	xor	r15,	r14	
    4918:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    491c:	6f 4f       	mov.b	@r15,	r15	
    491e:	4f 4f       	mov.b	r15,	r15	
    4920:	0f ee       	xor	r14,	r15	
    4922:	0e 4f       	mov	r15,	r14	
    4924:	0e 5e       	rla	r14		
    4926:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    492a:	0f 5f       	rla	r15		
    492c:	4d 4f       	mov.b	r15,	r13	
    492e:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4932:	4f 4f       	mov.b	r15,	r15	
    4934:	8f 11       	sxt	r15		
    4936:	8f 10       	swpb	r15		
    4938:	4f 4f       	mov.b	r15,	r15	
    493a:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    493e:	4d ef       	xor.b	r15,	r13	
    4940:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4944:	2f 53       	incd	r15		
    4946:	6f 4f       	mov.b	@r15,	r15	
    4948:	4d ef       	xor.b	r15,	r13	
    494a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    494e:	6f 4f       	mov.b	@r15,	r15	
    4950:	4f ed       	xor.b	r13,	r15	
    4952:	4f 4f       	mov.b	r15,	r15	
    4954:	8f 11       	sxt	r15		
    4956:	8f 10       	swpb	r15		
    4958:	4f 4f       	mov.b	r15,	r15	
    495a:	4f 4f       	mov.b	r15,	r15	
    495c:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4960:	0e ef       	xor	r15,	r14	
    4962:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4966:	1f 53       	inc	r15		
    4968:	6f 4f       	mov.b	@r15,	r15	
    496a:	4f 4f       	mov.b	r15,	r15	
    496c:	0e ef       	xor	r15,	r14	
    496e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4972:	6f 4f       	mov.b	@r15,	r15	
    4974:	4f 4f       	mov.b	r15,	r15	
    4976:	0f ee       	xor	r14,	r15	
    4978:	0f 5f       	rla	r15		
    497a:	4d 4f       	mov.b	r15,	r13	
    497c:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4980:	0e 4f       	mov	r15,	r14	
    4982:	0e 5e       	rla	r14		
    4984:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4988:	4f 4f       	mov.b	r15,	r15	
    498a:	8f 11       	sxt	r15		
    498c:	8f 10       	swpb	r15		
    498e:	4f 4f       	mov.b	r15,	r15	
    4990:	4f 4f       	mov.b	r15,	r15	
    4992:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4996:	0e ef       	xor	r15,	r14	
    4998:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    499c:	2f 53       	incd	r15		
    499e:	6f 4f       	mov.b	@r15,	r15	
    49a0:	4f 4f       	mov.b	r15,	r15	
    49a2:	0e ef       	xor	r15,	r14	
    49a4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    49a8:	6f 4f       	mov.b	@r15,	r15	
    49aa:	4f 4f       	mov.b	r15,	r15	
    49ac:	0f ee       	xor	r14,	r15	
    49ae:	0f 5f       	rla	r15		
    49b0:	4e 4f       	mov.b	r15,	r14	
    49b2:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    49b6:	0f 5f       	rla	r15		
    49b8:	4c 4f       	mov.b	r15,	r12	
    49ba:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    49be:	4f 4f       	mov.b	r15,	r15	
    49c0:	8f 11       	sxt	r15		
    49c2:	8f 10       	swpb	r15		
    49c4:	4f 4f       	mov.b	r15,	r15	
    49c6:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    49ca:	4c ef       	xor.b	r15,	r12	
    49cc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    49d0:	2f 53       	incd	r15		
    49d2:	6f 4f       	mov.b	@r15,	r15	
    49d4:	4c ef       	xor.b	r15,	r12	
    49d6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    49da:	6f 4f       	mov.b	@r15,	r15	
    49dc:	4f ec       	xor.b	r12,	r15	
    49de:	4f 4f       	mov.b	r15,	r15	
    49e0:	8f 11       	sxt	r15		
    49e2:	8f 10       	swpb	r15		
    49e4:	4f 4f       	mov.b	r15,	r15	
    49e6:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    49ea:	4e ef       	xor.b	r15,	r14	
    49ec:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    49f0:	1f 53       	inc	r15		
    49f2:	6f 4f       	mov.b	@r15,	r15	
    49f4:	4e ef       	xor.b	r15,	r14	
    49f6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    49fa:	6f 4f       	mov.b	@r15,	r15	
    49fc:	4f ee       	xor.b	r14,	r15	
    49fe:	4f 4f       	mov.b	r15,	r15	
    4a00:	8f 11       	sxt	r15		
    4a02:	8f 10       	swpb	r15		
    4a04:	4f 4f       	mov.b	r15,	r15	
    4a06:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4a0a:	4e 4d       	mov.b	r13,	r14	
    4a0c:	4e ef       	xor.b	r15,	r14	
    4a0e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a12:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4a16:	6f 4f       	mov.b	@r15,	r15	
    4a18:	4e ef       	xor.b	r15,	r14	
    4a1a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a1e:	1f 53       	inc	r15		
    4a20:	6f 4f       	mov.b	@r15,	r15	
    4a22:	4e ef       	xor.b	r15,	r14	
    4a24:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a28:	2f 53       	incd	r15		
    4a2a:	6f 4f       	mov.b	@r15,	r15	
    4a2c:	4f ee       	xor.b	r14,	r15	
    4a2e:	c4 4f f0 ff 	mov.b	r15,	-16(r4)	;0xfff0(r4)
        t[1] = L(L(L(var1)^crypt[3]^crypt[1])^crypt[2]^crypt[1])^crypt[0]^crypt[2]^crypt[3];
    4a32:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4a36:	0e 4f       	mov	r15,	r14	
    4a38:	0e 5e       	rla	r14		
    4a3a:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4a3e:	4f 4f       	mov.b	r15,	r15	
    4a40:	8f 11       	sxt	r15		
    4a42:	8f 10       	swpb	r15		
    4a44:	4f 4f       	mov.b	r15,	r15	
    4a46:	4f 4f       	mov.b	r15,	r15	
    4a48:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4a4c:	0e ef       	xor	r15,	r14	
    4a4e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a52:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4a56:	6f 4f       	mov.b	@r15,	r15	
    4a58:	4f 4f       	mov.b	r15,	r15	
    4a5a:	0e ef       	xor	r15,	r14	
    4a5c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a60:	1f 53       	inc	r15		
    4a62:	6f 4f       	mov.b	@r15,	r15	
    4a64:	4f 4f       	mov.b	r15,	r15	
    4a66:	0f ee       	xor	r14,	r15	
    4a68:	0e 4f       	mov	r15,	r14	
    4a6a:	0e 5e       	rla	r14		
    4a6c:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4a70:	0f 5f       	rla	r15		
    4a72:	4d 4f       	mov.b	r15,	r13	
    4a74:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4a78:	4f 4f       	mov.b	r15,	r15	
    4a7a:	8f 11       	sxt	r15		
    4a7c:	8f 10       	swpb	r15		
    4a7e:	4f 4f       	mov.b	r15,	r15	
    4a80:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4a84:	4d ef       	xor.b	r15,	r13	
    4a86:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a8a:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4a8e:	6f 4f       	mov.b	@r15,	r15	
    4a90:	4d ef       	xor.b	r15,	r13	
    4a92:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a96:	1f 53       	inc	r15		
    4a98:	6f 4f       	mov.b	@r15,	r15	
    4a9a:	4f ed       	xor.b	r13,	r15	
    4a9c:	4f 4f       	mov.b	r15,	r15	
    4a9e:	8f 11       	sxt	r15		
    4aa0:	8f 10       	swpb	r15		
    4aa2:	4f 4f       	mov.b	r15,	r15	
    4aa4:	4f 4f       	mov.b	r15,	r15	
    4aa6:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4aaa:	0e ef       	xor	r15,	r14	
    4aac:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ab0:	2f 53       	incd	r15		
    4ab2:	6f 4f       	mov.b	@r15,	r15	
    4ab4:	4f 4f       	mov.b	r15,	r15	
    4ab6:	0e ef       	xor	r15,	r14	
    4ab8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4abc:	1f 53       	inc	r15		
    4abe:	6f 4f       	mov.b	@r15,	r15	
    4ac0:	4f 4f       	mov.b	r15,	r15	
    4ac2:	0f ee       	xor	r14,	r15	
    4ac4:	0f 5f       	rla	r15		
    4ac6:	4d 4f       	mov.b	r15,	r13	
    4ac8:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4acc:	0e 4f       	mov	r15,	r14	
    4ace:	0e 5e       	rla	r14		
    4ad0:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4ad4:	4f 4f       	mov.b	r15,	r15	
    4ad6:	8f 11       	sxt	r15		
    4ad8:	8f 10       	swpb	r15		
    4ada:	4f 4f       	mov.b	r15,	r15	
    4adc:	4f 4f       	mov.b	r15,	r15	
    4ade:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4ae2:	0e ef       	xor	r15,	r14	
    4ae4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ae8:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4aec:	6f 4f       	mov.b	@r15,	r15	
    4aee:	4f 4f       	mov.b	r15,	r15	
    4af0:	0e ef       	xor	r15,	r14	
    4af2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4af6:	1f 53       	inc	r15		
    4af8:	6f 4f       	mov.b	@r15,	r15	
    4afa:	4f 4f       	mov.b	r15,	r15	
    4afc:	0f ee       	xor	r14,	r15	
    4afe:	0f 5f       	rla	r15		
    4b00:	4e 4f       	mov.b	r15,	r14	
    4b02:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4b06:	0f 5f       	rla	r15		
    4b08:	4c 4f       	mov.b	r15,	r12	
    4b0a:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4b0e:	4f 4f       	mov.b	r15,	r15	
    4b10:	8f 11       	sxt	r15		
    4b12:	8f 10       	swpb	r15		
    4b14:	4f 4f       	mov.b	r15,	r15	
    4b16:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4b1a:	4c ef       	xor.b	r15,	r12	
    4b1c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b20:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4b24:	6f 4f       	mov.b	@r15,	r15	
    4b26:	4c ef       	xor.b	r15,	r12	
    4b28:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b2c:	1f 53       	inc	r15		
    4b2e:	6f 4f       	mov.b	@r15,	r15	
    4b30:	4f ec       	xor.b	r12,	r15	
    4b32:	4f 4f       	mov.b	r15,	r15	
    4b34:	8f 11       	sxt	r15		
    4b36:	8f 10       	swpb	r15		
    4b38:	4f 4f       	mov.b	r15,	r15	
    4b3a:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4b3e:	4e ef       	xor.b	r15,	r14	
    4b40:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b44:	2f 53       	incd	r15		
    4b46:	6f 4f       	mov.b	@r15,	r15	
    4b48:	4e ef       	xor.b	r15,	r14	
    4b4a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b4e:	1f 53       	inc	r15		
    4b50:	6f 4f       	mov.b	@r15,	r15	
    4b52:	4f ee       	xor.b	r14,	r15	
    4b54:	4f 4f       	mov.b	r15,	r15	
    4b56:	8f 11       	sxt	r15		
    4b58:	8f 10       	swpb	r15		
    4b5a:	4f 4f       	mov.b	r15,	r15	
    4b5c:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4b60:	4e 4d       	mov.b	r13,	r14	
    4b62:	4e ef       	xor.b	r15,	r14	
    4b64:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b68:	6f 4f       	mov.b	@r15,	r15	
    4b6a:	4e ef       	xor.b	r15,	r14	
    4b6c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b70:	2f 53       	incd	r15		
    4b72:	6f 4f       	mov.b	@r15,	r15	
    4b74:	4e ef       	xor.b	r15,	r14	
    4b76:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b7a:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4b7e:	6f 4f       	mov.b	@r15,	r15	
    4b80:	4f ee       	xor.b	r14,	r15	
    4b82:	c4 4f f1 ff 	mov.b	r15,	-15(r4)	;0xfff1(r4)
        t[2] = L(L(L(var1)^crypt[0]^crypt[2])^crypt[3]^crypt[2])^crypt[1]^crypt[3]^crypt[0];
    4b86:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4b8a:	0e 4f       	mov	r15,	r14	
    4b8c:	0e 5e       	rla	r14		
    4b8e:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4b92:	4f 4f       	mov.b	r15,	r15	
    4b94:	8f 11       	sxt	r15		
    4b96:	8f 10       	swpb	r15		
    4b98:	4f 4f       	mov.b	r15,	r15	
    4b9a:	4f 4f       	mov.b	r15,	r15	
    4b9c:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4ba0:	0e ef       	xor	r15,	r14	
    4ba2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ba6:	6f 4f       	mov.b	@r15,	r15	
    4ba8:	4f 4f       	mov.b	r15,	r15	
    4baa:	0e ef       	xor	r15,	r14	
    4bac:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4bb0:	2f 53       	incd	r15		
    4bb2:	6f 4f       	mov.b	@r15,	r15	
    4bb4:	4f 4f       	mov.b	r15,	r15	
    4bb6:	0f ee       	xor	r14,	r15	
    4bb8:	0e 4f       	mov	r15,	r14	
    4bba:	0e 5e       	rla	r14		
    4bbc:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4bc0:	0f 5f       	rla	r15		
    4bc2:	4d 4f       	mov.b	r15,	r13	
    4bc4:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4bc8:	4f 4f       	mov.b	r15,	r15	
    4bca:	8f 11       	sxt	r15		
    4bcc:	8f 10       	swpb	r15		
    4bce:	4f 4f       	mov.b	r15,	r15	
    4bd0:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4bd4:	4d ef       	xor.b	r15,	r13	
    4bd6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4bda:	6f 4f       	mov.b	@r15,	r15	
    4bdc:	4d ef       	xor.b	r15,	r13	
    4bde:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4be2:	2f 53       	incd	r15		
    4be4:	6f 4f       	mov.b	@r15,	r15	
    4be6:	4f ed       	xor.b	r13,	r15	
    4be8:	4f 4f       	mov.b	r15,	r15	
    4bea:	8f 11       	sxt	r15		
    4bec:	8f 10       	swpb	r15		
    4bee:	4f 4f       	mov.b	r15,	r15	
    4bf0:	4f 4f       	mov.b	r15,	r15	
    4bf2:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4bf6:	0e ef       	xor	r15,	r14	
    4bf8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4bfc:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4c00:	6f 4f       	mov.b	@r15,	r15	
    4c02:	4f 4f       	mov.b	r15,	r15	
    4c04:	0e ef       	xor	r15,	r14	
    4c06:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c0a:	2f 53       	incd	r15		
    4c0c:	6f 4f       	mov.b	@r15,	r15	
    4c0e:	4f 4f       	mov.b	r15,	r15	
    4c10:	0f ee       	xor	r14,	r15	
    4c12:	0f 5f       	rla	r15		
    4c14:	4d 4f       	mov.b	r15,	r13	
    4c16:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4c1a:	0e 4f       	mov	r15,	r14	
    4c1c:	0e 5e       	rla	r14		
    4c1e:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4c22:	4f 4f       	mov.b	r15,	r15	
    4c24:	8f 11       	sxt	r15		
    4c26:	8f 10       	swpb	r15		
    4c28:	4f 4f       	mov.b	r15,	r15	
    4c2a:	4f 4f       	mov.b	r15,	r15	
    4c2c:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4c30:	0e ef       	xor	r15,	r14	
    4c32:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c36:	6f 4f       	mov.b	@r15,	r15	
    4c38:	4f 4f       	mov.b	r15,	r15	
    4c3a:	0e ef       	xor	r15,	r14	
    4c3c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c40:	2f 53       	incd	r15		
    4c42:	6f 4f       	mov.b	@r15,	r15	
    4c44:	4f 4f       	mov.b	r15,	r15	
    4c46:	0f ee       	xor	r14,	r15	
    4c48:	0f 5f       	rla	r15		
    4c4a:	4e 4f       	mov.b	r15,	r14	
    4c4c:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4c50:	0f 5f       	rla	r15		
    4c52:	4c 4f       	mov.b	r15,	r12	
    4c54:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4c58:	4f 4f       	mov.b	r15,	r15	
    4c5a:	8f 11       	sxt	r15		
    4c5c:	8f 10       	swpb	r15		
    4c5e:	4f 4f       	mov.b	r15,	r15	
    4c60:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4c64:	4c ef       	xor.b	r15,	r12	
    4c66:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c6a:	6f 4f       	mov.b	@r15,	r15	
    4c6c:	4c ef       	xor.b	r15,	r12	
    4c6e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c72:	2f 53       	incd	r15		
    4c74:	6f 4f       	mov.b	@r15,	r15	
    4c76:	4f ec       	xor.b	r12,	r15	
    4c78:	4f 4f       	mov.b	r15,	r15	
    4c7a:	8f 11       	sxt	r15		
    4c7c:	8f 10       	swpb	r15		
    4c7e:	4f 4f       	mov.b	r15,	r15	
    4c80:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4c84:	4e ef       	xor.b	r15,	r14	
    4c86:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c8a:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4c8e:	6f 4f       	mov.b	@r15,	r15	
    4c90:	4e ef       	xor.b	r15,	r14	
    4c92:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c96:	2f 53       	incd	r15		
    4c98:	6f 4f       	mov.b	@r15,	r15	
    4c9a:	4f ee       	xor.b	r14,	r15	
    4c9c:	4f 4f       	mov.b	r15,	r15	
    4c9e:	8f 11       	sxt	r15		
    4ca0:	8f 10       	swpb	r15		
    4ca2:	4f 4f       	mov.b	r15,	r15	
    4ca4:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4ca8:	4e 4d       	mov.b	r13,	r14	
    4caa:	4e ef       	xor.b	r15,	r14	
    4cac:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cb0:	1f 53       	inc	r15		
    4cb2:	6f 4f       	mov.b	@r15,	r15	
    4cb4:	4e ef       	xor.b	r15,	r14	
    4cb6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cba:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4cbe:	6f 4f       	mov.b	@r15,	r15	
    4cc0:	4e ef       	xor.b	r15,	r14	
    4cc2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cc6:	6f 4f       	mov.b	@r15,	r15	
    4cc8:	4f ee       	xor.b	r14,	r15	
    4cca:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
        t[3] = L(L(L(var1)^crypt[1]^crypt[3])^crypt[0]^crypt[3])^crypt[2]^crypt[0]^crypt[1];
    4cce:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4cd2:	0e 4f       	mov	r15,	r14	
    4cd4:	0e 5e       	rla	r14		
    4cd6:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4cda:	4f 4f       	mov.b	r15,	r15	
    4cdc:	8f 11       	sxt	r15		
    4cde:	8f 10       	swpb	r15		
    4ce0:	4f 4f       	mov.b	r15,	r15	
    4ce2:	4f 4f       	mov.b	r15,	r15	
    4ce4:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4ce8:	0e ef       	xor	r15,	r14	
    4cea:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cee:	1f 53       	inc	r15		
    4cf0:	6f 4f       	mov.b	@r15,	r15	
    4cf2:	4f 4f       	mov.b	r15,	r15	
    4cf4:	0e ef       	xor	r15,	r14	
    4cf6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4cfa:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4cfe:	6f 4f       	mov.b	@r15,	r15	
    4d00:	4f 4f       	mov.b	r15,	r15	
    4d02:	0f ee       	xor	r14,	r15	
    4d04:	0e 4f       	mov	r15,	r14	
    4d06:	0e 5e       	rla	r14		
    4d08:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4d0c:	0f 5f       	rla	r15		
    4d0e:	4d 4f       	mov.b	r15,	r13	
    4d10:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4d14:	4f 4f       	mov.b	r15,	r15	
    4d16:	8f 11       	sxt	r15		
    4d18:	8f 10       	swpb	r15		
    4d1a:	4f 4f       	mov.b	r15,	r15	
    4d1c:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4d20:	4d ef       	xor.b	r15,	r13	
    4d22:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d26:	1f 53       	inc	r15		
    4d28:	6f 4f       	mov.b	@r15,	r15	
    4d2a:	4d ef       	xor.b	r15,	r13	
    4d2c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d30:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4d34:	6f 4f       	mov.b	@r15,	r15	
    4d36:	4f ed       	xor.b	r13,	r15	
    4d38:	4f 4f       	mov.b	r15,	r15	
    4d3a:	8f 11       	sxt	r15		
    4d3c:	8f 10       	swpb	r15		
    4d3e:	4f 4f       	mov.b	r15,	r15	
    4d40:	4f 4f       	mov.b	r15,	r15	
    4d42:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4d46:	0e ef       	xor	r15,	r14	
    4d48:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d4c:	6f 4f       	mov.b	@r15,	r15	
    4d4e:	4f 4f       	mov.b	r15,	r15	
    4d50:	0e ef       	xor	r15,	r14	
    4d52:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d56:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4d5a:	6f 4f       	mov.b	@r15,	r15	
    4d5c:	4f 4f       	mov.b	r15,	r15	
    4d5e:	0f ee       	xor	r14,	r15	
    4d60:	0f 5f       	rla	r15		
    4d62:	4d 4f       	mov.b	r15,	r13	
    4d64:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4d68:	0e 4f       	mov	r15,	r14	
    4d6a:	0e 5e       	rla	r14		
    4d6c:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4d70:	4f 4f       	mov.b	r15,	r15	
    4d72:	8f 11       	sxt	r15		
    4d74:	8f 10       	swpb	r15		
    4d76:	4f 4f       	mov.b	r15,	r15	
    4d78:	4f 4f       	mov.b	r15,	r15	
    4d7a:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4d7e:	0e ef       	xor	r15,	r14	
    4d80:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d84:	1f 53       	inc	r15		
    4d86:	6f 4f       	mov.b	@r15,	r15	
    4d88:	4f 4f       	mov.b	r15,	r15	
    4d8a:	0e ef       	xor	r15,	r14	
    4d8c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4d90:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4d94:	6f 4f       	mov.b	@r15,	r15	
    4d96:	4f 4f       	mov.b	r15,	r15	
    4d98:	0f ee       	xor	r14,	r15	
    4d9a:	0f 5f       	rla	r15		
    4d9c:	4e 4f       	mov.b	r15,	r14	
    4d9e:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4da2:	0f 5f       	rla	r15		
    4da4:	4c 4f       	mov.b	r15,	r12	
    4da6:	5f 44 ee ff 	mov.b	-18(r4),r15	;0xffee(r4)
    4daa:	4f 4f       	mov.b	r15,	r15	
    4dac:	8f 11       	sxt	r15		
    4dae:	8f 10       	swpb	r15		
    4db0:	4f 4f       	mov.b	r15,	r15	
    4db2:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4db6:	4c ef       	xor.b	r15,	r12	
    4db8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4dbc:	1f 53       	inc	r15		
    4dbe:	6f 4f       	mov.b	@r15,	r15	
    4dc0:	4c ef       	xor.b	r15,	r12	
    4dc2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4dc6:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4dca:	6f 4f       	mov.b	@r15,	r15	
    4dcc:	4f ec       	xor.b	r12,	r15	
    4dce:	4f 4f       	mov.b	r15,	r15	
    4dd0:	8f 11       	sxt	r15		
    4dd2:	8f 10       	swpb	r15		
    4dd4:	4f 4f       	mov.b	r15,	r15	
    4dd6:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4dda:	4e ef       	xor.b	r15,	r14	
    4ddc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4de0:	6f 4f       	mov.b	@r15,	r15	
    4de2:	4e ef       	xor.b	r15,	r14	
    4de4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4de8:	3f 50 03 00 	add	#3,	r15	;#0x0003
    4dec:	6f 4f       	mov.b	@r15,	r15	
    4dee:	4f ee       	xor.b	r14,	r15	
    4df0:	4f 4f       	mov.b	r15,	r15	
    4df2:	8f 11       	sxt	r15		
    4df4:	8f 10       	swpb	r15		
    4df6:	4f 4f       	mov.b	r15,	r15	
    4df8:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4dfc:	4e 4d       	mov.b	r13,	r14	
    4dfe:	4e ef       	xor.b	r15,	r14	
    4e00:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e04:	2f 53       	incd	r15		
    4e06:	6f 4f       	mov.b	@r15,	r15	
    4e08:	4e ef       	xor.b	r15,	r14	
    4e0a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e0e:	6f 4f       	mov.b	@r15,	r15	
    4e10:	4e ef       	xor.b	r15,	r14	
    4e12:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e16:	1f 53       	inc	r15		
    4e18:	6f 4f       	mov.b	@r15,	r15	
    4e1a:	4f ee       	xor.b	r14,	r15	
    4e1c:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	;0xfff3(r4)

        t[4] = L(L(L(var2)^crypt[6]^crypt[4])^crypt[5]^crypt[4])^crypt[7]^crypt[5]^crypt[6];
    4e20:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4e24:	0e 4f       	mov	r15,	r14	
    4e26:	0e 5e       	rla	r14		
    4e28:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4e2c:	4f 4f       	mov.b	r15,	r15	
    4e2e:	8f 11       	sxt	r15		
    4e30:	8f 10       	swpb	r15		
    4e32:	4f 4f       	mov.b	r15,	r15	
    4e34:	4f 4f       	mov.b	r15,	r15	
    4e36:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4e3a:	0e ef       	xor	r15,	r14	
    4e3c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e40:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4e44:	6f 4f       	mov.b	@r15,	r15	
    4e46:	4f 4f       	mov.b	r15,	r15	
    4e48:	0e ef       	xor	r15,	r14	
    4e4a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e4e:	2f 52       	add	#4,	r15	;r2 As==10
    4e50:	6f 4f       	mov.b	@r15,	r15	
    4e52:	4f 4f       	mov.b	r15,	r15	
    4e54:	0f ee       	xor	r14,	r15	
    4e56:	0e 4f       	mov	r15,	r14	
    4e58:	0e 5e       	rla	r14		
    4e5a:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4e5e:	0f 5f       	rla	r15		
    4e60:	4d 4f       	mov.b	r15,	r13	
    4e62:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4e66:	4f 4f       	mov.b	r15,	r15	
    4e68:	8f 11       	sxt	r15		
    4e6a:	8f 10       	swpb	r15		
    4e6c:	4f 4f       	mov.b	r15,	r15	
    4e6e:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4e72:	4d ef       	xor.b	r15,	r13	
    4e74:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e78:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4e7c:	6f 4f       	mov.b	@r15,	r15	
    4e7e:	4d ef       	xor.b	r15,	r13	
    4e80:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e84:	2f 52       	add	#4,	r15	;r2 As==10
    4e86:	6f 4f       	mov.b	@r15,	r15	
    4e88:	4f ed       	xor.b	r13,	r15	
    4e8a:	4f 4f       	mov.b	r15,	r15	
    4e8c:	8f 11       	sxt	r15		
    4e8e:	8f 10       	swpb	r15		
    4e90:	4f 4f       	mov.b	r15,	r15	
    4e92:	4f 4f       	mov.b	r15,	r15	
    4e94:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4e98:	0e ef       	xor	r15,	r14	
    4e9a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4e9e:	3f 50 05 00 	add	#5,	r15	;#0x0005
    4ea2:	6f 4f       	mov.b	@r15,	r15	
    4ea4:	4f 4f       	mov.b	r15,	r15	
    4ea6:	0e ef       	xor	r15,	r14	
    4ea8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4eac:	2f 52       	add	#4,	r15	;r2 As==10
    4eae:	6f 4f       	mov.b	@r15,	r15	
    4eb0:	4f 4f       	mov.b	r15,	r15	
    4eb2:	0f ee       	xor	r14,	r15	
    4eb4:	0f 5f       	rla	r15		
    4eb6:	4d 4f       	mov.b	r15,	r13	
    4eb8:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4ebc:	0e 4f       	mov	r15,	r14	
    4ebe:	0e 5e       	rla	r14		
    4ec0:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4ec4:	4f 4f       	mov.b	r15,	r15	
    4ec6:	8f 11       	sxt	r15		
    4ec8:	8f 10       	swpb	r15		
    4eca:	4f 4f       	mov.b	r15,	r15	
    4ecc:	4f 4f       	mov.b	r15,	r15	
    4ece:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4ed2:	0e ef       	xor	r15,	r14	
    4ed4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ed8:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4edc:	6f 4f       	mov.b	@r15,	r15	
    4ede:	4f 4f       	mov.b	r15,	r15	
    4ee0:	0e ef       	xor	r15,	r14	
    4ee2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4ee6:	2f 52       	add	#4,	r15	;r2 As==10
    4ee8:	6f 4f       	mov.b	@r15,	r15	
    4eea:	4f 4f       	mov.b	r15,	r15	
    4eec:	0f ee       	xor	r14,	r15	
    4eee:	0f 5f       	rla	r15		
    4ef0:	4e 4f       	mov.b	r15,	r14	
    4ef2:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4ef6:	0f 5f       	rla	r15		
    4ef8:	4c 4f       	mov.b	r15,	r12	
    4efa:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4efe:	4f 4f       	mov.b	r15,	r15	
    4f00:	8f 11       	sxt	r15		
    4f02:	8f 10       	swpb	r15		
    4f04:	4f 4f       	mov.b	r15,	r15	
    4f06:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4f0a:	4c ef       	xor.b	r15,	r12	
    4f0c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f10:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4f14:	6f 4f       	mov.b	@r15,	r15	
    4f16:	4c ef       	xor.b	r15,	r12	
    4f18:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f1c:	2f 52       	add	#4,	r15	;r2 As==10
    4f1e:	6f 4f       	mov.b	@r15,	r15	
    4f20:	4f ec       	xor.b	r12,	r15	
    4f22:	4f 4f       	mov.b	r15,	r15	
    4f24:	8f 11       	sxt	r15		
    4f26:	8f 10       	swpb	r15		
    4f28:	4f 4f       	mov.b	r15,	r15	
    4f2a:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4f2e:	4e ef       	xor.b	r15,	r14	
    4f30:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f34:	3f 50 05 00 	add	#5,	r15	;#0x0005
    4f38:	6f 4f       	mov.b	@r15,	r15	
    4f3a:	4e ef       	xor.b	r15,	r14	
    4f3c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f40:	2f 52       	add	#4,	r15	;r2 As==10
    4f42:	6f 4f       	mov.b	@r15,	r15	
    4f44:	4f ee       	xor.b	r14,	r15	
    4f46:	4f 4f       	mov.b	r15,	r15	
    4f48:	8f 11       	sxt	r15		
    4f4a:	8f 10       	swpb	r15		
    4f4c:	4f 4f       	mov.b	r15,	r15	
    4f4e:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4f52:	4e 4d       	mov.b	r13,	r14	
    4f54:	4e ef       	xor.b	r15,	r14	
    4f56:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f5a:	3f 50 07 00 	add	#7,	r15	;#0x0007
    4f5e:	6f 4f       	mov.b	@r15,	r15	
    4f60:	4e ef       	xor.b	r15,	r14	
    4f62:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f66:	3f 50 05 00 	add	#5,	r15	;#0x0005
    4f6a:	6f 4f       	mov.b	@r15,	r15	
    4f6c:	4e ef       	xor.b	r15,	r14	
    4f6e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f72:	3f 50 06 00 	add	#6,	r15	;#0x0006
    4f76:	6f 4f       	mov.b	@r15,	r15	
    4f78:	4f ee       	xor.b	r14,	r15	
    4f7a:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
        t[5] = L(L(L(var2)^crypt[7]^crypt[5])^crypt[6]^crypt[5])^crypt[4]^crypt[6]^crypt[7];
    4f7e:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4f82:	0e 4f       	mov	r15,	r14	
    4f84:	0e 5e       	rla	r14		
    4f86:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4f8a:	4f 4f       	mov.b	r15,	r15	
    4f8c:	8f 11       	sxt	r15		
    4f8e:	8f 10       	swpb	r15		
    4f90:	4f 4f       	mov.b	r15,	r15	
    4f92:	4f 4f       	mov.b	r15,	r15	
    4f94:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4f98:	0e ef       	xor	r15,	r14	
    4f9a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4f9e:	3f 50 07 00 	add	#7,	r15	;#0x0007
    4fa2:	6f 4f       	mov.b	@r15,	r15	
    4fa4:	4f 4f       	mov.b	r15,	r15	
    4fa6:	0e ef       	xor	r15,	r14	
    4fa8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4fac:	3f 50 05 00 	add	#5,	r15	;#0x0005
    4fb0:	6f 4f       	mov.b	@r15,	r15	
    4fb2:	4f 4f       	mov.b	r15,	r15	
    4fb4:	0f ee       	xor	r14,	r15	
    4fb6:	0e 4f       	mov	r15,	r14	
    4fb8:	0e 5e       	rla	r14		
    4fba:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4fbe:	0f 5f       	rla	r15		
    4fc0:	4d 4f       	mov.b	r15,	r13	
    4fc2:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    4fc6:	4f 4f       	mov.b	r15,	r15	
    4fc8:	8f 11       	sxt	r15		
    4fca:	8f 10       	swpb	r15		
    4fcc:	4f 4f       	mov.b	r15,	r15	
    4fce:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    4fd2:	4d ef       	xor.b	r15,	r13	
    4fd4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4fd8:	3f 50 07 00 	add	#7,	r15	;#0x0007
    4fdc:	6f 4f       	mov.b	@r15,	r15	
    4fde:	4d ef       	xor.b	r15,	r13	
    4fe0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4fe4:	3f 50 05 00 	add	#5,	r15	;#0x0005
    4fe8:	6f 4f       	mov.b	@r15,	r15	
    4fea:	4f ed       	xor.b	r13,	r15	
    4fec:	4f 4f       	mov.b	r15,	r15	
    4fee:	8f 11       	sxt	r15		
    4ff0:	8f 10       	swpb	r15		
    4ff2:	4f 4f       	mov.b	r15,	r15	
    4ff4:	4f 4f       	mov.b	r15,	r15	
    4ff6:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    4ffa:	0e ef       	xor	r15,	r14	
    4ffc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5000:	3f 50 06 00 	add	#6,	r15	;#0x0006
    5004:	6f 4f       	mov.b	@r15,	r15	
    5006:	4f 4f       	mov.b	r15,	r15	
    5008:	0e ef       	xor	r15,	r14	
    500a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    500e:	3f 50 05 00 	add	#5,	r15	;#0x0005
    5012:	6f 4f       	mov.b	@r15,	r15	
    5014:	4f 4f       	mov.b	r15,	r15	
    5016:	0f ee       	xor	r14,	r15	
    5018:	0f 5f       	rla	r15		
    501a:	4d 4f       	mov.b	r15,	r13	
    501c:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5020:	0e 4f       	mov	r15,	r14	
    5022:	0e 5e       	rla	r14		
    5024:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5028:	4f 4f       	mov.b	r15,	r15	
    502a:	8f 11       	sxt	r15		
    502c:	8f 10       	swpb	r15		
    502e:	4f 4f       	mov.b	r15,	r15	
    5030:	4f 4f       	mov.b	r15,	r15	
    5032:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    5036:	0e ef       	xor	r15,	r14	
    5038:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    503c:	3f 50 07 00 	add	#7,	r15	;#0x0007
    5040:	6f 4f       	mov.b	@r15,	r15	
    5042:	4f 4f       	mov.b	r15,	r15	
    5044:	0e ef       	xor	r15,	r14	
    5046:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    504a:	3f 50 05 00 	add	#5,	r15	;#0x0005
    504e:	6f 4f       	mov.b	@r15,	r15	
    5050:	4f 4f       	mov.b	r15,	r15	
    5052:	0f ee       	xor	r14,	r15	
    5054:	0f 5f       	rla	r15		
    5056:	4e 4f       	mov.b	r15,	r14	
    5058:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    505c:	0f 5f       	rla	r15		
    505e:	4c 4f       	mov.b	r15,	r12	
    5060:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5064:	4f 4f       	mov.b	r15,	r15	
    5066:	8f 11       	sxt	r15		
    5068:	8f 10       	swpb	r15		
    506a:	4f 4f       	mov.b	r15,	r15	
    506c:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    5070:	4c ef       	xor.b	r15,	r12	
    5072:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5076:	3f 50 07 00 	add	#7,	r15	;#0x0007
    507a:	6f 4f       	mov.b	@r15,	r15	
    507c:	4c ef       	xor.b	r15,	r12	
    507e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5082:	3f 50 05 00 	add	#5,	r15	;#0x0005
    5086:	6f 4f       	mov.b	@r15,	r15	
    5088:	4f ec       	xor.b	r12,	r15	
    508a:	4f 4f       	mov.b	r15,	r15	
    508c:	8f 11       	sxt	r15		
    508e:	8f 10       	swpb	r15		
    5090:	4f 4f       	mov.b	r15,	r15	
    5092:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    5096:	4e ef       	xor.b	r15,	r14	
    5098:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    509c:	3f 50 06 00 	add	#6,	r15	;#0x0006
    50a0:	6f 4f       	mov.b	@r15,	r15	
    50a2:	4e ef       	xor.b	r15,	r14	
    50a4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    50a8:	3f 50 05 00 	add	#5,	r15	;#0x0005
    50ac:	6f 4f       	mov.b	@r15,	r15	
    50ae:	4f ee       	xor.b	r14,	r15	
    50b0:	4f 4f       	mov.b	r15,	r15	
    50b2:	8f 11       	sxt	r15		
    50b4:	8f 10       	swpb	r15		
    50b6:	4f 4f       	mov.b	r15,	r15	
    50b8:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    50bc:	4e 4d       	mov.b	r13,	r14	
    50be:	4e ef       	xor.b	r15,	r14	
    50c0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    50c4:	2f 52       	add	#4,	r15	;r2 As==10
    50c6:	6f 4f       	mov.b	@r15,	r15	
    50c8:	4e ef       	xor.b	r15,	r14	
    50ca:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    50ce:	3f 50 06 00 	add	#6,	r15	;#0x0006
    50d2:	6f 4f       	mov.b	@r15,	r15	
    50d4:	4e ef       	xor.b	r15,	r14	
    50d6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    50da:	3f 50 07 00 	add	#7,	r15	;#0x0007
    50de:	6f 4f       	mov.b	@r15,	r15	
    50e0:	4f ee       	xor.b	r14,	r15	
    50e2:	c4 4f f5 ff 	mov.b	r15,	-11(r4)	;0xfff5(r4)
        t[6] = L(L(L(var2)^crypt[4]^crypt[6])^crypt[7]^crypt[6])^crypt[5]^crypt[7]^crypt[4];
    50e6:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    50ea:	0e 4f       	mov	r15,	r14	
    50ec:	0e 5e       	rla	r14		
    50ee:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    50f2:	4f 4f       	mov.b	r15,	r15	
    50f4:	8f 11       	sxt	r15		
    50f6:	8f 10       	swpb	r15		
    50f8:	4f 4f       	mov.b	r15,	r15	
    50fa:	4f 4f       	mov.b	r15,	r15	
    50fc:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    5100:	0e ef       	xor	r15,	r14	
    5102:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5106:	2f 52       	add	#4,	r15	;r2 As==10
    5108:	6f 4f       	mov.b	@r15,	r15	
    510a:	4f 4f       	mov.b	r15,	r15	
    510c:	0e ef       	xor	r15,	r14	
    510e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5112:	3f 50 06 00 	add	#6,	r15	;#0x0006
    5116:	6f 4f       	mov.b	@r15,	r15	
    5118:	4f 4f       	mov.b	r15,	r15	
    511a:	0f ee       	xor	r14,	r15	
    511c:	0e 4f       	mov	r15,	r14	
    511e:	0e 5e       	rla	r14		
    5120:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5124:	0f 5f       	rla	r15		
    5126:	4d 4f       	mov.b	r15,	r13	
    5128:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    512c:	4f 4f       	mov.b	r15,	r15	
    512e:	8f 11       	sxt	r15		
    5130:	8f 10       	swpb	r15		
    5132:	4f 4f       	mov.b	r15,	r15	
    5134:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    5138:	4d ef       	xor.b	r15,	r13	
    513a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    513e:	2f 52       	add	#4,	r15	;r2 As==10
    5140:	6f 4f       	mov.b	@r15,	r15	
    5142:	4d ef       	xor.b	r15,	r13	
    5144:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5148:	3f 50 06 00 	add	#6,	r15	;#0x0006
    514c:	6f 4f       	mov.b	@r15,	r15	
    514e:	4f ed       	xor.b	r13,	r15	
    5150:	4f 4f       	mov.b	r15,	r15	
    5152:	8f 11       	sxt	r15		
    5154:	8f 10       	swpb	r15		
    5156:	4f 4f       	mov.b	r15,	r15	
    5158:	4f 4f       	mov.b	r15,	r15	
    515a:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    515e:	0e ef       	xor	r15,	r14	
    5160:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5164:	3f 50 07 00 	add	#7,	r15	;#0x0007
    5168:	6f 4f       	mov.b	@r15,	r15	
    516a:	4f 4f       	mov.b	r15,	r15	
    516c:	0e ef       	xor	r15,	r14	
    516e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5172:	3f 50 06 00 	add	#6,	r15	;#0x0006
    5176:	6f 4f       	mov.b	@r15,	r15	
    5178:	4f 4f       	mov.b	r15,	r15	
    517a:	0f ee       	xor	r14,	r15	
    517c:	0f 5f       	rla	r15		
    517e:	4d 4f       	mov.b	r15,	r13	
    5180:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5184:	0e 4f       	mov	r15,	r14	
    5186:	0e 5e       	rla	r14		
    5188:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    518c:	4f 4f       	mov.b	r15,	r15	
    518e:	8f 11       	sxt	r15		
    5190:	8f 10       	swpb	r15		
    5192:	4f 4f       	mov.b	r15,	r15	
    5194:	4f 4f       	mov.b	r15,	r15	
    5196:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    519a:	0e ef       	xor	r15,	r14	
    519c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51a0:	2f 52       	add	#4,	r15	;r2 As==10
    51a2:	6f 4f       	mov.b	@r15,	r15	
    51a4:	4f 4f       	mov.b	r15,	r15	
    51a6:	0e ef       	xor	r15,	r14	
    51a8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51ac:	3f 50 06 00 	add	#6,	r15	;#0x0006
    51b0:	6f 4f       	mov.b	@r15,	r15	
    51b2:	4f 4f       	mov.b	r15,	r15	
    51b4:	0f ee       	xor	r14,	r15	
    51b6:	0f 5f       	rla	r15		
    51b8:	4e 4f       	mov.b	r15,	r14	
    51ba:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    51be:	0f 5f       	rla	r15		
    51c0:	4c 4f       	mov.b	r15,	r12	
    51c2:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    51c6:	4f 4f       	mov.b	r15,	r15	
    51c8:	8f 11       	sxt	r15		
    51ca:	8f 10       	swpb	r15		
    51cc:	4f 4f       	mov.b	r15,	r15	
    51ce:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    51d2:	4c ef       	xor.b	r15,	r12	
    51d4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51d8:	2f 52       	add	#4,	r15	;r2 As==10
    51da:	6f 4f       	mov.b	@r15,	r15	
    51dc:	4c ef       	xor.b	r15,	r12	
    51de:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51e2:	3f 50 06 00 	add	#6,	r15	;#0x0006
    51e6:	6f 4f       	mov.b	@r15,	r15	
    51e8:	4f ec       	xor.b	r12,	r15	
    51ea:	4f 4f       	mov.b	r15,	r15	
    51ec:	8f 11       	sxt	r15		
    51ee:	8f 10       	swpb	r15		
    51f0:	4f 4f       	mov.b	r15,	r15	
    51f2:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    51f6:	4e ef       	xor.b	r15,	r14	
    51f8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    51fc:	3f 50 07 00 	add	#7,	r15	;#0x0007
    5200:	6f 4f       	mov.b	@r15,	r15	
    5202:	4e ef       	xor.b	r15,	r14	
    5204:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5208:	3f 50 06 00 	add	#6,	r15	;#0x0006
    520c:	6f 4f       	mov.b	@r15,	r15	
    520e:	4f ee       	xor.b	r14,	r15	
    5210:	4f 4f       	mov.b	r15,	r15	
    5212:	8f 11       	sxt	r15		
    5214:	8f 10       	swpb	r15		
    5216:	4f 4f       	mov.b	r15,	r15	
    5218:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    521c:	4e 4d       	mov.b	r13,	r14	
    521e:	4e ef       	xor.b	r15,	r14	
    5220:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5224:	3f 50 05 00 	add	#5,	r15	;#0x0005
    5228:	6f 4f       	mov.b	@r15,	r15	
    522a:	4e ef       	xor.b	r15,	r14	
    522c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5230:	3f 50 07 00 	add	#7,	r15	;#0x0007
    5234:	6f 4f       	mov.b	@r15,	r15	
    5236:	4e ef       	xor.b	r15,	r14	
    5238:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    523c:	2f 52       	add	#4,	r15	;r2 As==10
    523e:	6f 4f       	mov.b	@r15,	r15	
    5240:	4f ee       	xor.b	r14,	r15	
    5242:	c4 4f f6 ff 	mov.b	r15,	-10(r4)	;0xfff6(r4)
        t[7] = L(L(L(var2)^crypt[5]^crypt[7])^crypt[4]^crypt[7])^crypt[6]^crypt[4]^crypt[5];
    5246:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    524a:	0e 4f       	mov	r15,	r14	
    524c:	0e 5e       	rla	r14		
    524e:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5252:	4f 4f       	mov.b	r15,	r15	
    5254:	8f 11       	sxt	r15		
    5256:	8f 10       	swpb	r15		
    5258:	4f 4f       	mov.b	r15,	r15	
    525a:	4f 4f       	mov.b	r15,	r15	
    525c:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    5260:	0e ef       	xor	r15,	r14	
    5262:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5266:	3f 50 05 00 	add	#5,	r15	;#0x0005
    526a:	6f 4f       	mov.b	@r15,	r15	
    526c:	4f 4f       	mov.b	r15,	r15	
    526e:	0e ef       	xor	r15,	r14	
    5270:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5274:	3f 50 07 00 	add	#7,	r15	;#0x0007
    5278:	6f 4f       	mov.b	@r15,	r15	
    527a:	4f 4f       	mov.b	r15,	r15	
    527c:	0f ee       	xor	r14,	r15	
    527e:	0e 4f       	mov	r15,	r14	
    5280:	0e 5e       	rla	r14		
    5282:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5286:	0f 5f       	rla	r15		
    5288:	4d 4f       	mov.b	r15,	r13	
    528a:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    528e:	4f 4f       	mov.b	r15,	r15	
    5290:	8f 11       	sxt	r15		
    5292:	8f 10       	swpb	r15		
    5294:	4f 4f       	mov.b	r15,	r15	
    5296:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    529a:	4d ef       	xor.b	r15,	r13	
    529c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    52a0:	3f 50 05 00 	add	#5,	r15	;#0x0005
    52a4:	6f 4f       	mov.b	@r15,	r15	
    52a6:	4d ef       	xor.b	r15,	r13	
    52a8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    52ac:	3f 50 07 00 	add	#7,	r15	;#0x0007
    52b0:	6f 4f       	mov.b	@r15,	r15	
    52b2:	4f ed       	xor.b	r13,	r15	
    52b4:	4f 4f       	mov.b	r15,	r15	
    52b6:	8f 11       	sxt	r15		
    52b8:	8f 10       	swpb	r15		
    52ba:	4f 4f       	mov.b	r15,	r15	
    52bc:	4f 4f       	mov.b	r15,	r15	
    52be:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    52c2:	0e ef       	xor	r15,	r14	
    52c4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    52c8:	2f 52       	add	#4,	r15	;r2 As==10
    52ca:	6f 4f       	mov.b	@r15,	r15	
    52cc:	4f 4f       	mov.b	r15,	r15	
    52ce:	0e ef       	xor	r15,	r14	
    52d0:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    52d4:	3f 50 07 00 	add	#7,	r15	;#0x0007
    52d8:	6f 4f       	mov.b	@r15,	r15	
    52da:	4f 4f       	mov.b	r15,	r15	
    52dc:	0f ee       	xor	r14,	r15	
    52de:	0f 5f       	rla	r15		
    52e0:	4d 4f       	mov.b	r15,	r13	
    52e2:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    52e6:	0e 4f       	mov	r15,	r14	
    52e8:	0e 5e       	rla	r14		
    52ea:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    52ee:	4f 4f       	mov.b	r15,	r15	
    52f0:	8f 11       	sxt	r15		
    52f2:	8f 10       	swpb	r15		
    52f4:	4f 4f       	mov.b	r15,	r15	
    52f6:	4f 4f       	mov.b	r15,	r15	
    52f8:	3f f0 1b 00 	and	#27,	r15	;#0x001b
    52fc:	0e ef       	xor	r15,	r14	
    52fe:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5302:	3f 50 05 00 	add	#5,	r15	;#0x0005
    5306:	6f 4f       	mov.b	@r15,	r15	
    5308:	4f 4f       	mov.b	r15,	r15	
    530a:	0e ef       	xor	r15,	r14	
    530c:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5310:	3f 50 07 00 	add	#7,	r15	;#0x0007
    5314:	6f 4f       	mov.b	@r15,	r15	
    5316:	4f 4f       	mov.b	r15,	r15	
    5318:	0f ee       	xor	r14,	r15	
    531a:	0f 5f       	rla	r15		
    531c:	4e 4f       	mov.b	r15,	r14	
    531e:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    5322:	0f 5f       	rla	r15		
    5324:	4c 4f       	mov.b	r15,	r12	
    5326:	5f 44 ef ff 	mov.b	-17(r4),r15	;0xffef(r4)
    532a:	4f 4f       	mov.b	r15,	r15	
    532c:	8f 11       	sxt	r15		
    532e:	8f 10       	swpb	r15		
    5330:	4f 4f       	mov.b	r15,	r15	
    5332:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    5336:	4c ef       	xor.b	r15,	r12	
    5338:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    533c:	3f 50 05 00 	add	#5,	r15	;#0x0005
    5340:	6f 4f       	mov.b	@r15,	r15	
    5342:	4c ef       	xor.b	r15,	r12	
    5344:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5348:	3f 50 07 00 	add	#7,	r15	;#0x0007
    534c:	6f 4f       	mov.b	@r15,	r15	
    534e:	4f ec       	xor.b	r12,	r15	
    5350:	4f 4f       	mov.b	r15,	r15	
    5352:	8f 11       	sxt	r15		
    5354:	8f 10       	swpb	r15		
    5356:	4f 4f       	mov.b	r15,	r15	
    5358:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    535c:	4e ef       	xor.b	r15,	r14	
    535e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5362:	2f 52       	add	#4,	r15	;r2 As==10
    5364:	6f 4f       	mov.b	@r15,	r15	
    5366:	4e ef       	xor.b	r15,	r14	
    5368:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    536c:	3f 50 07 00 	add	#7,	r15	;#0x0007
    5370:	6f 4f       	mov.b	@r15,	r15	
    5372:	4f ee       	xor.b	r14,	r15	
    5374:	4f 4f       	mov.b	r15,	r15	
    5376:	8f 11       	sxt	r15		
    5378:	8f 10       	swpb	r15		
    537a:	4f 4f       	mov.b	r15,	r15	
    537c:	7f f0 1b 00 	and.b	#27,	r15	;#0x001b
    5380:	4e 4d       	mov.b	r13,	r14	
    5382:	4e ef       	xor.b	r15,	r14	
    5384:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5388:	3f 50 06 00 	add	#6,	r15	;#0x0006
    538c:	6f 4f       	mov.b	@r15,	r15	
    538e:	4e ef       	xor.b	r15,	r14	
    5390:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5394:	2f 52       	add	#4,	r15	;r2 As==10
    5396:	6f 4f       	mov.b	@r15,	r15	
    5398:	4e ef       	xor.b	r15,	r14	
    539a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    539e:	3f 50 05 00 	add	#5,	r15	;#0x0005
    53a2:	6f 4f       	mov.b	@r15,	r15	
    53a4:	4f ee       	xor.b	r14,	r15	
    53a6:	c4 4f f7 ff 	mov.b	r15,	-9(r4)	;0xfff7(r4)

        for (i=0 ; i<8 ; i++)
    53aa:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    53ae:	13 3c       	jmp	$+40     	;abs 0x53d6
        {
            crypt[i] = t[(i+6)&0x7];
    53b0:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    53b4:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    53b8:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    53bc:	3e 50 06 00 	add	#6,	r14	;#0x0006
    53c0:	3e f0 07 00 	and	#7,	r14	;#0x0007
    53c4:	0d 44       	mov	r4,	r13	
    53c6:	3d 50 f0 ff 	add	#-16,	r13	;#0xfff0
    53ca:	0e 5d       	add	r13,	r14	
    53cc:	6e 4e       	mov.b	@r14,	r14	
    53ce:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
        t[4] = L(L(L(var2)^crypt[6]^crypt[4])^crypt[5]^crypt[4])^crypt[7]^crypt[5]^crypt[6];
        t[5] = L(L(L(var2)^crypt[7]^crypt[5])^crypt[6]^crypt[5])^crypt[4]^crypt[6]^crypt[7];
        t[6] = L(L(L(var2)^crypt[4]^crypt[6])^crypt[7]^crypt[6])^crypt[5]^crypt[7]^crypt[4];
        t[7] = L(L(L(var2)^crypt[5]^crypt[7])^crypt[4]^crypt[7])^crypt[6]^crypt[4]^crypt[5];

        for (i=0 ; i<8 ; i++)
    53d2:	d4 53 ec ff 	inc.b	-20(r4)	;0xffec(r4)
    53d6:	f4 92 ec ff 	cmp.b	#8,	-20(r4)	;r2 As==11, 0xffec(r4)
    53da:	ea 2b       	jnc	$-42     	;abs 0x53b0
        {
            crypt[i] = t[(i+6)&0x7];
        }

        for (i=0 ; i<8 ; i++)
    53dc:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    53e0:	2d 3c       	jmp	$+92     	;abs 0x543c
        {
            crypt[i] = (sBox[crypt[i]&0xf]) | (sBox[crypt[i]>>4] << 4);
    53e2:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    53e6:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    53ea:	0e 5f       	add	r15,	r14	
    53ec:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    53f0:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    53f4:	6f 4f       	mov.b	@r15,	r15	
    53f6:	4f 4f       	mov.b	r15,	r15	
    53f8:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    53fc:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    5400:	4d 4f       	mov.b	r15,	r13	
    5402:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    5406:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    540a:	6f 4f       	mov.b	@r15,	r15	
    540c:	4f 4f       	mov.b	r15,	r15	
    540e:	4f 4f       	mov.b	r15,	r15	
    5410:	12 c3       	clrc			
    5412:	4f 10       	rrc.b	r15		
    5414:	12 c3       	clrc			
    5416:	4f 10       	rrc.b	r15		
    5418:	12 c3       	clrc			
    541a:	4f 10       	rrc.b	r15		
    541c:	12 c3       	clrc			
    541e:	4f 10       	rrc.b	r15		
    5420:	4f 4f       	mov.b	r15,	r15	
    5422:	5f 4f 9e 55 	mov.b	21918(r15),r15	;0x559e(r15)
    5426:	4f 4f       	mov.b	r15,	r15	
    5428:	0f 5f       	rla	r15		
    542a:	0f 5f       	rla	r15		
    542c:	0f 5f       	rla	r15		
    542e:	0f 5f       	rla	r15		
    5430:	4f 4f       	mov.b	r15,	r15	
    5432:	4f dd       	bis.b	r13,	r15	
    5434:	ce 4f 00 00 	mov.b	r15,	0(r14)	;0x0000(r14)
        for (i=0 ; i<8 ; i++)
        {
            crypt[i] = t[(i+6)&0x7];
        }

        for (i=0 ; i<8 ; i++)
    5438:	d4 53 ec ff 	inc.b	-20(r4)	;0xffec(r4)
    543c:	f4 92 ec ff 	cmp.b	#8,	-20(r4)	;r2 As==11, 0xffec(r4)
    5440:	d0 2b       	jnc	$-94     	;abs 0x53e2
        {
            crypt[i] = (sBox[crypt[i]&0xf]) | (sBox[crypt[i]>>4] << 4);
        }

        InvKeySetup(key,r);
    5442:	5e 44 ed ff 	mov.b	-19(r4),r14	;0xffed(r4)
    5446:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    544a:	b0 12 ce 42 	call	#0x42ce	

        for (i=0 ; i<8 ; i++)
    544e:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    5452:	13 3c       	jmp	$+40     	;abs 0x547a
        {
            crypt[i] = crypt[i] ^ key[i];
    5454:	5f 44 ec ff 	mov.b	-20(r4),r15	;0xffec(r4)
    5458:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    545c:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    5460:	1e 54 fa ff 	add	-6(r4),	r14	;0xfffa(r4)
    5464:	6d 4e       	mov.b	@r14,	r13	
    5466:	5e 44 ec ff 	mov.b	-20(r4),r14	;0xffec(r4)
    546a:	1e 54 fc ff 	add	-4(r4),	r14	;0xfffc(r4)
    546e:	6e 4e       	mov.b	@r14,	r14	
    5470:	4e ed       	xor.b	r13,	r14	
    5472:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
            crypt[i] = (sBox[crypt[i]&0xf]) | (sBox[crypt[i]>>4] << 4);
        }

        InvKeySetup(key,r);

        for (i=0 ; i<8 ; i++)
    5476:	d4 53 ec ff 	inc.b	-20(r4)	;0xffec(r4)
    547a:	f4 92 ec ff 	cmp.b	#8,	-20(r4)	;r2 As==11, 0xffec(r4)
    547e:	ea 2b       	jnc	$-42     	;abs 0x5454
        crypt[i] = crypt[i] ^ key[i];
    }

    u8 t[8];
    u8 r;
    for (r=20 ; r>0 ; r--)
    5480:	f4 53 ed ff 	add.b	#-1,	-19(r4)	;r3 As==11, 0xffed(r4)
    5484:	c4 93 ed ff 	tst.b	-19(r4)	;0xffed(r4)
    5488:	02 24       	jz	$+6      	;abs 0x548e
    548a:	30 40 92 48 	br	#0x4892	
        for (i=0 ; i<8 ; i++)
        {
            crypt[i] = crypt[i] ^ key[i];
        }
    }
}
    548e:	31 50 12 00 	add	#18,	r1	;#0x0012
    5492:	34 41       	pop	r4		
    5494:	30 41       	ret			

00005496 <delay>:
/**************************************************/
/********************* DELAY **********************/
/**************************************************/

void delay(unsigned int d) 
{
    5496:	04 12       	push	r4		
    5498:	04 41       	mov	r1,	r4	
    549a:	24 53       	incd	r4		
    549c:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    54a0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    54a4:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    54a8:	0d 3c       	jmp	$+28     	;abs 0x54c4
    {
      for (i = 0; i<d; i++) 
    54aa:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    54ae:	04 3c       	jmp	$+10     	;abs 0x54b8
	{
	  nop();
    54b0:	03 43       	nop			
	  nop();
    54b2:	03 43       	nop			
void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    {
      for (i = 0; i<d; i++) 
    54b4:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    54b8:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    54bc:	f8 ff 
    54be:	f8 2b       	jnc	$-14     	;abs 0x54b0
/**************************************************/

void delay(unsigned int d) 
{
  unsigned int i,j;
  for(j=0; j < 0xff; j++)
    54c0:	94 53 fa ff 	inc	-6(r4)		;0xfffa(r4)
    54c4:	b4 90 ff 00 	cmp	#255,	-6(r4)	;#0x00ff, 0xfffa(r4)
    54c8:	fa ff 
    54ca:	ef 2b       	jnc	$-32     	;abs 0x54aa
	{
	  nop();
	  nop();
	}
    }
}
    54cc:	31 50 06 00 	add	#6,	r1	;#0x0006
    54d0:	34 41       	pop	r4		
    54d2:	30 41       	ret			

000054d4 <uart1_init>:

#define UART1_BIT_RX (1 << UART1_PIN_RX)
#define UART1_BIT_TX (1 << UART1_PIN_TX)

int uart1_init()
{
    54d4:	04 12       	push	r4		
    54d6:	04 41       	mov	r1,	r4	
    54d8:	24 53       	incd	r4		

  WDTCTL = WDTPW + WDTHOLD;
    54da:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    54de:	20 01 

  P1IE   = 0x00;        // Interrupt enable
    54e0:	c2 43 25 00 	mov.b	#0,	&0x0025	;r3 As==00
  P2IE   = 0x00;        // 0:disable 1:enable
    54e4:	c2 43 2d 00 	mov.b	#0,	&0x002d	;r3 As==00

  //Init of MSP430 Usart1 pins
  P3SEL |= (UART1_BIT_RX | UART1_BIT_TX);
    54e8:	5f 42 1b 00 	mov.b	&0x001b,r15	
    54ec:	7f d0 c0 ff 	bis.b	#-64,	r15	;#0xffc0
    54f0:	c2 4f 1b 00 	mov.b	r15,	&0x001b	

  //Init of USART1 Module
  U1ME  |= UTXE1|URXE1;           //Enable USART1 transmiter and receiver (UART mode)
    54f4:	5f 42 05 00 	mov.b	&0x0005,r15	
    54f8:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    54fc:	c2 4f 05 00 	mov.b	r15,	&0x0005	
  
  U1CTL  = SWRST;                 //reset
    5500:	d2 43 78 00 	mov.b	#1,	&0x0078	;r3 As==01
  U1CTL  = CHAR;                  //init & release reset
    5504:	f2 40 10 00 	mov.b	#16,	&0x0078	;#0x0010
    5508:	78 00 
  
  U1TCTL = SSEL1 | TXEPT;        //use SMCLK 
    550a:	f2 40 21 00 	mov.b	#33,	&0x0079	;#0x0021
    550e:	79 00 
  U1RCTL = 0;
    5510:	c2 43 7a 00 	mov.b	#0,	&0x007a	;r3 As==00
  // 38400 @ SMCLK 1MHz
#define U1BR1_INIT        0
#define U1BR0_INIT        0x1B
#define U1MCTL_INIT       0x03
  
  U1BR1  = U1BR1_INIT;
    5514:	c2 43 7d 00 	mov.b	#0,	&0x007d	;r3 As==00
  U1BR0  = U1BR0_INIT;
    5518:	f2 40 1b 00 	mov.b	#27,	&0x007c	;#0x001b
    551c:	7c 00 
  U1MCTL = U1MCTL_INIT;
    551e:	f2 40 03 00 	mov.b	#3,	&0x007b	;#0x0003
    5522:	7b 00 

  delay(0x800);
    5524:	3f 40 00 08 	mov	#2048,	r15	;#0x0800
    5528:	b0 12 96 54 	call	#0x5496	
  return 0;
    552c:	0f 43       	clr	r15		
}
    552e:	34 41       	pop	r4		
    5530:	30 41       	ret			

00005532 <uart1_putchar>:

int uart1_putchar(int c)
{
    5532:	04 12       	push	r4		
    5534:	04 41       	mov	r1,	r4	
    5536:	24 53       	incd	r4		
    5538:	21 83       	decd	r1		
    553a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  U1TXBUF = c;
    553e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5542:	4f 4f       	mov.b	r15,	r15	
    5544:	c2 4f 7f 00 	mov.b	r15,	&0x007f	
  while ((U1TCTL & TXEPT) != TXEPT);
    5548:	03 43       	nop			
    554a:	5f 42 79 00 	mov.b	&0x0079,r15	
    554e:	4f 4f       	mov.b	r15,	r15	
    5550:	1f f3       	and	#1,	r15	;r3 As==01
    5552:	0f 93       	tst	r15		
    5554:	fa 27       	jz	$-10     	;abs 0x554a
  return (unsigned char)c;
    5556:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    555a:	4f 4f       	mov.b	r15,	r15	
    555c:	4f 4f       	mov.b	r15,	r15	
}
    555e:	21 53       	incd	r1		
    5560:	34 41       	pop	r4		
    5562:	30 41       	ret			

00005564 <putchar>:
/**************************************************/
/******************** PUT CHAR *********************/
/**************************************************/

int putchar(int c)
{
    5564:	04 12       	push	r4		
    5566:	04 41       	mov	r1,	r4	
    5568:	24 53       	incd	r4		
    556a:	21 83       	decd	r1		
    556c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
  return uart1_putchar(c);
    5570:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5574:	b0 12 32 55 	call	#0x5532	
}
    5578:	21 53       	incd	r1		
    557a:	34 41       	pop	r4		
    557c:	30 41       	ret			

0000557e <start_encrypt>:
/******************** END EXPE*********************/
/**************************************************/

void
start_encrypt()
{
    557e:	04 12       	push	r4		
    5580:	04 41       	mov	r1,	r4	
    5582:	24 53       	incd	r4		
  ;
}
    5584:	34 41       	pop	r4		
    5586:	30 41       	ret			

00005588 <start_decrypt>:
void
start_decrypt()
{
    5588:	04 12       	push	r4		
    558a:	04 41       	mov	r1,	r4	
    558c:	24 53       	incd	r4		
  ;
}
    558e:	34 41       	pop	r4		
    5590:	30 41       	ret			

00005592 <end_expe>:


void
end_expe()
{
    5592:	04 12       	push	r4		
    5594:	04 41       	mov	r1,	r4	
    5596:	24 53       	incd	r4		
  ;
}
    5598:	34 41       	pop	r4		
    559a:	30 41       	ret			

0000559c <_unexpected_>:
    559c:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	08 41 08 41 08 41 08 41 08 41 08 41 08 41 08 41     .A.A.A.A.A.A.A.A
    fff0:	08 41 08 41 08 41 08 41 08 41 08 41 08 41 00 40     .A.A.A.A.A.A.A.@
